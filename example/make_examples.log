
  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   16.1   Copyright 1985-2019 StataCorp LLC
  Statistics/Data analysis            StataCorp
                                      4905 Lakeway Drive
     MP - Parallel Edition            College Station, Texas 77845 USA
                                      800-STATA-PC        https://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Stata license: Unlimited-user 4-core network, expiring 17 Nov 2021
Serial number: 501609257375
  Licensed to: hbsuser
               Harvard Business School

Notes:
      1. Stata is running in batch mode.
      2. Unicode is supported; see help unicode_advice.
      3. More than 2 billion observations are allowed; see help obs_advice.
      4. Maximum number of variables is set to 120,000; see help set_maxvar.

. do C:\Users\dballaelliott\Documents\dev\esplot\example\make_examples.do 

. discard 

. /* do ../esplot.ado */
. 
. set varabbrev off 

. 
. adopath ++ "..\"
  [1]              "..\"
  [2]  (BASE)      "C:\Program Files\Stata16\ado\base/"
  [3]  (SITE)      "C:\Program Files\Stata16\ado\site/"
  [4]              "."
  [5]  (PERSONAL)  "C:\Users\dballaelliott\ado\personal/"
  [6]  (PLUS)      "c:\ado\plus/"
  [7]  (OLDPLACE)  "c:\ado/"

. set trace on 

. 
. net install allston, from("https://raw.githubusercontent.com/dballaelliott/al
> lston/master/")
checking allston consistency and verifying not already installed...
all files already exist and are up to date.

. 
. set scheme aurora

. 
. import delimited "example.csv", clear
  ------------------------------------------------------------ begin import ---
  - version 12
  - local version : di "version " string(_caller()) ":"
  - gettoken subcmd 0 : 0, parse(" ,")
  - if `"`subcmd'"' == "dbase" {
  = if `"delimited"' == "dbase" {
    `version' ImpDbase `macval(0)'
    }
  - else if `"`subcmd'"' == "delim" {
  = else if `"delimited"' == "delim" {
    `version' ImpDelim `macval(0)'
    }
  - else if `"`subcmd'"' == "delimi" {
  = else if `"delimited"' == "delimi" {
    `version' ImpDelim `macval(0)'
    }
  - else if `"`subcmd'"' == "delimit" {
  = else if `"delimited"' == "delimit" {
    `version' ImpDelim `macval(0)'
    }
  - else if `"`subcmd'"' == "delimite" {
  = else if `"delimited"' == "delimite" {
    `version' ImpDelim `macval(0)'
    }
  - else if `"`subcmd'"' == "delimited" {
  = else if `"delimited"' == "delimited" {
  - `version' ImpDelim `macval(0)'
  = version 16.1: ImpDelim  "example.csv", clear
    ------------------------------------------------- begin import.ImpDelim ---
    - version 13
    - local version : di "version " string(_caller()) ":"
    - `version' import_delimited `macval(0)'
    = version 16.1: import_delimited "example.csv", clear
      ---------------------------------------------- begin import_delimited ---
      - local ver : display "version " string(_caller()) ", missing:"
      - version 14
      - gettoken filename rest : 0, parse(" ,")
      - gettoken comma : rest, parse(" ,")
      - if (`"`filename'"' != "" & (trim(`"`comma'"') == "," | trim(`"`comma'"'
> ) == "")) {
      = if (`"example.csv"' != "" & (trim(`","') == "," | trim(`","') == "")) {
      - local 0 `"using `0'"'
      = local 0 `"using "example.csv", clear"'
      - }
      - capture syntax using/ [, DELIMiters(string asis) ROWRange(string) COLRa
> nge(string) VARNames(string) case(string) ASDOUBle ASFLOat FAVORSTRFixed clea
> r BINDQuotes(string) STRIPQuotes(string) NUMERICCols(string) STRINGCols(strin
> g) CHARSET(string) ENCoding(string) PARSELocale(string) GROUPSeparator(string
> ) DECIMALSeparator(string) MAXQUOTEDRows(string) COLLAPSEDelimiters]
      - if _rc {
        syntax [anything(name=vlist id="vlist")] using/ [, DELIMiters(string as
> is) ROWRange(string) COLRange(string) VARNames(string) case(string) ASDOUBle 
> ASFLOat FAVORSTRFixed clear BINDQuotes(string) STRIPQuotes(string) NUMERICCol
> s(string) STRINGCols(string) CHARSET(string) ENCoding(string) PARSELocale(str
> ing) GROUPSeparator(string) DECIMALSeparator(string) MAXQUOTEDRows(string) CO
> LLAPSEDelimiters]
        }
      - mata:import_delim_import_file()
        ------------------------------------------------------- begin clear ---
        - if _caller() < 10 {
          _clear_9 `0'
          exit
          }
        - version 10
        - syntax [anything]
        - tokenize `anything'
        = tokenize 
        - if `"`2'"' != "" {
        = if `""' != "" {
          display as err "`2' not allowed"
          exit 198
          }
        - if "`1'"=="" {
        = if ""=="" {
        - drop _all
        - label drop _all
          ----------------------------------------------------- begin label ---
          - version 10.0
          - local vv : display "version " string(_caller()) ", missing:"
          - gettoken val : 0
          - if (strpos("`val'", "val") > 0 ) {
          = if (strpos("drop", "val") > 0 ) {
            gettoken val 0 : 0
            syntax anything [, nofix]
            if "`fix'" != "" {
            local fix ", nofix"
            }
            gettoken var rest : anything
            while `"`rest'"' != "" {
            gettoken lab rest : rest
            local label "`lab'"
            }
            local vlist : list anything - lab
            if "`lab'" == "." {
            local lab ""
            }
            foreach var of varlist `vlist' {
            `vv' _label `val' `var' `lab' `fix'
            }
            }
          - else {
          - `vv' _label `macval(0)'
          = version 10, missing: _label drop _all
          - }
          ------------------------------------------------------- end label ---
        - }
        - else if "`1'"=="frames" {
        = else if ""=="frames" {
          frames reset
          }
        - else if "`1'"=="mata" {
        = else if ""=="mata" {
          mata: mata clear
          }
        - else if "`1'"=="python" {
        = else if ""=="python" {
          python clear
          }
        - else if inlist("`1'", "results", "matrix") {
        = else if inlist("", "results", "matrix") {
          return clear
          clearreturn
          ereturn clear
          sreturn clear
          _return drop _all
          if ("`1'" == "matrix") {
          matrix drop _all
          _est drop _all
          }
          }
        - else if "`1'"=="programs" {
        = else if ""=="programs" {
          program drop _all
          }
        - else if "`1'"=="ado" {
        = else if ""=="ado" {
          program drop _allado
          }
        - else if "`1'"=="rngstream" | "`1'"=="rngstreams" {
        = else if ""=="rngstream" | ""=="rngstreams" {
          set rngstream clear
          }
        - else if "`1'"=="*" | "`1'"=="all" {
        = else if ""=="*" | ""=="all" {
          capture mata: st_local("semmods", strofreal(sg__global.hasmodels()))
          capture
          if (0`semmods') {
          display as err "-clear all- not allowed while an SEM Builder is open"
          exit 1
          }
          drop _all
          frames reset
          label drop _all
          matrix drop _all
          scalar drop _all
          constraint drop _all
          eq drop _all
          file close _all
          postutil clear
          _return drop _all
          discard
          program drop _all
          timer clear
          mata: _st__put_cmd_clear()
          mata: mata clear
          python clear
          }
        - else {
          display as err "`1' not allowed"
          exit 198
          }
        --------------------------------------------------------- end clear ---
        ------------------------------------------------------- begin clear ---
        - if _caller() < 10 {
          _clear_9 `0'
          exit
          }
        - version 10
        - syntax [anything]
        - tokenize `anything'
        = tokenize 
        - if `"`2'"' != "" {
        = if `""' != "" {
          display as err "`2' not allowed"
          exit 198
          }
        - if "`1'"=="" {
        = if ""=="" {
        - drop _all
        - label drop _all
          ----------------------------------------------------- begin label ---
          - version 10.0
          - local vv : display "version " string(_caller()) ", missing:"
          - gettoken val : 0
          - if (strpos("`val'", "val") > 0 ) {
          = if (strpos("drop", "val") > 0 ) {
            gettoken val 0 : 0
            syntax anything [, nofix]
            if "`fix'" != "" {
            local fix ", nofix"
            }
            gettoken var rest : anything
            while `"`rest'"' != "" {
            gettoken lab rest : rest
            local label "`lab'"
            }
            local vlist : list anything - lab
            if "`lab'" == "." {
            local lab ""
            }
            foreach var of varlist `vlist' {
            `vv' _label `val' `var' `lab' `fix'
            }
            }
          - else {
          - `vv' _label `macval(0)'
          = version 10, missing: _label drop _all
          - }
          ------------------------------------------------------- end label ---
        - }
        - else if "`1'"=="frames" {
        = else if ""=="frames" {
          frames reset
          }
        - else if "`1'"=="mata" {
        = else if ""=="mata" {
          mata: mata clear
          }
        - else if "`1'"=="python" {
        = else if ""=="python" {
          python clear
          }
        - else if inlist("`1'", "results", "matrix") {
        = else if inlist("", "results", "matrix") {
          return clear
          clearreturn
          ereturn clear
          sreturn clear
          _return drop _all
          if ("`1'" == "matrix") {
          matrix drop _all
          _est drop _all
          }
          }
        - else if "`1'"=="programs" {
        = else if ""=="programs" {
          program drop _all
          }
        - else if "`1'"=="ado" {
        = else if ""=="ado" {
          program drop _allado
          }
        - else if "`1'"=="rngstream" | "`1'"=="rngstreams" {
        = else if ""=="rngstream" | ""=="rngstreams" {
          set rngstream clear
          }
        - else if "`1'"=="*" | "`1'"=="all" {
        = else if ""=="*" | ""=="all" {
          capture mata: st_local("semmods", strofreal(sg__global.hasmodels()))
          capture
          if (0`semmods') {
          display as err "-clear all- not allowed while an SEM Builder is open"
          exit 1
          }
          drop _all
          frames reset
          label drop _all
          matrix drop _all
          scalar drop _all
          constraint drop _all
          eq drop _all
          file close _all
          postutil clear
          _return drop _all
          discard
          program drop _all
          timer clear
          mata: _st__put_cmd_clear()
          mata: mata clear
          python clear
          }
        - else {
          display as err "`1' not allowed"
          exit 198
          }
        --------------------------------------------------------- end clear ---
(9 vars, 11,938 obs)
      - return add
      ------------------------------------------------ end import_delimited ---
    --------------------------------------------------- end import.ImpDelim ---
  - }
  - else if `"`subcmd'"' == "exc" {
  = else if `"delimited"' == "exc" {
    ImpExcel `macval(0)'
    }
  - else if `"`subcmd'"' == "exce" {
  = else if `"delimited"' == "exce" {
    ImpExcel `macval(0)'
    }
  - else if `"`subcmd'"' == "excel" {
  = else if `"delimited"' == "excel" {
    ImpExcel `macval(0)'
    }
  - else if `"`subcmd'"' == "fred" {
  = else if `"delimited"' == "fred" {
    ImpFred `macval(0)'
    }
  - else if `"`subcmd'"' == "hav" {
  = else if `"delimited"' == "hav" {
    ImpHaver `macval(0)'
    }
  - else if `"`subcmd'"' == "have" {
  = else if `"delimited"' == "have" {
    ImpHaver `macval(0)'
    }
  - else if `"`subcmd'"' == "haver" {
  = else if `"delimited"' == "haver" {
    ImpHaver `macval(0)'
    }
  - else if `"`subcmd'"' == "sas" {
  = else if `"delimited"' == "sas" {
    ImpSas `macval(0)'
    }
  - else if `"`subcmd'"' == "sasxport5" {
  = else if `"delimited"' == "sasxport5" {
    ImpSasxport5 `macval(0)'
    }
  - else if `"`subcmd'"' == "sasxport8" {
  = else if `"delimited"' == "sasxport8" {
    ImpSasxport8 `macval(0)'
    }
  - else if `"`subcmd'"' == "sasxport" {
  = else if `"delimited"' == "sasxport" {
    if (_caller() < 16) {
    ImpSasxport5 `macval(0)'
    }
    else {
    di as error "invalid syntax"
    di as error "   specify either {cmd:import sasxport5} or {cmd:import sasxpo
> rt8}"
    exit 198
    }
    }
  - else if `"`subcmd'"' == "shp" {
  = else if `"delimited"' == "shp" {
    ImpShape `macval(0)'
    }
  - else if `"`subcmd'"' == "spss" {
  = else if `"delimited"' == "spss" {
    ImpSpss `macval(0)'
    }
  - else {
    display as error `"import: unknown subcommand "`subcmd'""'
    exit 198
    }
  -------------------------------------------------------------- end import ---

. 
. ** PREPARE DATA
. rename male male_string 
  =struct rename_peldf {
  =        string scalar        element
  =        real scalar  elementtype
  =        real scalar            arg
  =        real scalar            match
  =struct rename_patterndf {
  =        real scalar  patterntype
  =        string scalar            original
  =        struct rename_peldf rowvector          ellist
  =        real rowvector            n_of
  =        string rowvector            varnames
  =        string matrix            pieces
  =struct rename_optiondf {
  =        real scalar       isrecase
  =        real scalar       isrecase_upper, isrecase_lower, isrecase_proper
  =        real scalar       isdryrun
  =        real scalar       isrenumber, isaddnumber
  =        real scalar            from
  =        real scalar       issort
  =        real scalar       isdebug
  =        real scalar       istest
  =        real scalar       isr
  =void rename_optiondf_init(struct rename_optiondf scalar option)
  =        option.isrecase = option.isdryrun = 0
  =                                option.isrecase_proper = 0
  =        option.isrenumber = option.isaddnumber = 0
  =        option.issort     = 0
  =        option.isdebug    = 0
  =        option.istest     = 0
  =        option.isr        = 0
  =struct rename_renamedf {
  =        struct rename_patterndf rowvector      oldplist
  =        struct rename_patterndf rowvector      newplist
  =        struct rename_optiondf scalar       option
  =void rename_cmd(string scalar thirdarg)
  =        string scalar    input
  =real scalar can_do_fast(string scalar input)
  =        string rowvector    token
  =        real scalar    rc
  =        if (length(token)!=2) return(0)
  =        if (!st_isname(token[1])) return(0)
  =        if (!st_isname(token[2])) return(0)
  =        if (token[1] == token[2]) return(0)
  =        return(1)
  =void rename_cmd_u(string scalar input)
  =        struct rename_renamedf scalar       ren
  =                dump_pattern(ren.oldplist, "old after parsing", 0)
  =                dump_pattern(ren.newplist, "new after parsing", 0)
  =void xeq_old_to_new(struct rename_renamedf scalar ren)
  =                dump_pattern(ren.oldplist, "old after linkage", 0)
  =                dump_pattern(ren.newplist, "new after linkage", 0)
  =                dump_pattern(ren.oldplist, "old final", 1)
  =                dump_pattern(ren.newplist, "new final", 1)
  =void xeq_recase(struct rename_renamedf scalar ren)
  =        fillin_old_varnames(ren.oldplist, ren.newplist, 0)
  =                dump_pattern(ren.oldplist, "old final", 1)
  =                dump_pattern(ren.newplist, "new final", 1)
  =void parse_cmd(struct rename_renamedf scalar ren, string scalar input)
  =        real scalar            c
  =        string scalar            lhs, ops
  =        string scalar            oldnames, newnames
  =        parse_cmd_pat_els(ren.oldplist, oldnames, 0)
  =                parse_cmd_pat_els(ren.newplist, newnames, 1)
  =real scalar parse_cmd_commaloc(string scalar s)
  =        real scalar    i, L
  =        real scalar    nestlev
  =        string scalar    c
  =void getarg(string scalar input, string scalar arg, string scalar rest)
  =        real scalar    L, npar, i
  =        string scalar    c
  =void parse_cmd_options(struct rename_optiondf scalar option, string scalar o
> ps)
  =        string scalar            token
  =        transmorphic      t
  =        rename_optiondf_init(option)
  =void confirm_options_consistent(struct rename_optiondf scalar option)
  =        string rowvector    list
  =void parse_cmd_options_u(struct rename_optiondf scalar option, string scalar
>  token, transmorphic t)
  =real scalar parse_cmd_options_u_std(struct rename_optiondf scalar option, st
> ring scalar source)
  =        real scalar    l
  =                option.isdebug = 1
  =                option.isdryrun = 1
  =                option.isrecase = option.isrecase_lower = 1
  =                option.isrecase = option.isrecase_proper= 1
  =                option.isr = 1
  =                option.issort = 1
  =                option.istest = 1
  =                option.isrecase = option.isrecase_upper = 1
  =        else    return(0)
  =        return(1)
  =real scalar parse_cmd_options_u_number(struct rename_optiondf scalar option,
>  string scalar source,
  =                                                                transmorphic
>  t)
  =        string scalar            token
  =        real scalar            from
  =        real scalar            l
  =        string scalar            op
  =        if (option.isrenumber | option.isaddnumber)  return(0)
  =                option.isrenumber = 1
  =                option.isaddnumber = 1
  =                return(1)
  =        return(1)
  =void parse_cmd_pat_els(struct rename_patterndf rowvector pat, string scalar 
> toparse, real pattype)
  =        string scalar            token, curlist
  =        transmorphic      t
  =        real scalar       first
  =        first   = 1
  =                                first    = 1
  =                                first   = 0
  =void parse_cmd_pat_el(struct rename_patterndf rowvector pat, string scalar t
> oken, real pattype)
  =        string scalar            mytoken
  =        struct rename_patterndf scalar      mypat
  =        real scalar            i, j
  =        real matrix            found
  =        mypat.n_of        = J(1, (8), 0)
  =        confirm_not_empty(mytoken, pattype==0 ?
  =                if (i=strpos(mytoken, "*")) found = (found \ (i, (3)))
  =                if (i=strpos(mytoken, "?")) found = (found \ (i, (4) ))
  =                if (i=strpos(mytoken, "#")) found = (found \ (i, (5)))
  =                if (i=strpos(mytoken, "(")) found = (found \ (i, (6)))
  =                if (i=strpos(mytoken, "=")) found = (found \ (i, (7)))
  =                if (i=strpos(mytoken, ".")) found = (found \ (i, (8)))
  =                        if (i==(3)) {
  =                        else if (i==(4)) {
  =                        else if (i==(5)) {
  =                        else if (i==(6)) {
  =                        else if (i==(7)) {
  =                        else if (i==(8)) {
  =string scalar set_subscript(struct rename_patterndf scalar pat, string scala
> r token, real pt)
  =        real scalar    i
  =        string scalar    c
  =        if (pt != 1) {
  =        if (pt != 1)              return(token)
  =void set_pat_ETstrlist(struct rename_patterndf scalar pat, string scalar tok
> en)
  =        struct rename_peldf scalar          el
  =        el.elementtype = (1)
  =        pat.n_of[(1)] = pat.n_of[(1)] + 1
  =string scalar set_pat_str(struct rename_patterndf scalar pat, string scalar 
> token)
  =        struct rename_peldf scalar          el
  =        el.elementtype = (2)
  =string scalar set_pat_ETstar(struct rename_patterndf scalar pat, string scal
> ar token, real scalar loc)
  =        struct rename_peldf scalar          el
  =        if (pat.patterntype == 0 && length(pat.ellist)) {
  =                if (pat.ellist[length(pat.ellist)].elementtype == (3)) {
  =        el.elementtype = (3)
  =string scalar set_pat_ETnum_v(struct rename_patterndf scalar pat, string sca
> lar token, real scalar loc)
  =        struct rename_peldf scalar          el
  =        if (pat.patterntype == 0 && length(pat.ellist)) {
  =                if (pat.ellist[length(pat.ellist)].elementtype == (5)) {
  =        el.elementtype = (5)
  =string scalar set_pat_ETeq(struct rename_patterndf scalar pat, string scalar
>  token, real scalar loc)
  =        struct rename_peldf scalar  el
  =        if (pat.patterntype == 0) {
  =        el.elementtype = (7)
  =string scalar set_pat_ETodot(struct rename_patterndf scalar pat, string scal
> ar token, real scalar loc)
  =        struct rename_peldf scalar  el
  =        if (pat.patterntype == 0) {
  =        el.elementtype = (8)
  =string scalar set_pat_ETqm(struct rename_patterndf scalar pat, string scalar
>  token, real scalar loc)
  =        struct rename_peldf scalar  el
  =        el.elementtype = (4)
  =string scalar set_pat_ETnum_f(struct rename_patterndf scalar pat, string sca
> lar token, real scalar loc)
  =        struct rename_peldf scalar          el
  =        real scalar            j
  =        el.elementtype = (6)
  =        if (el.arg > 10) {
  =void make_patternlist_lengths_equal(struct rename_renamedf scalar ren)
  =void build_recase_newpattern(struct rename_renamedf scalar ren)
  =        real scalar    i
  =        ren.newplist = rename_patterndf(length(ren.oldplist))
  =                ren.newplist[i].n_of        = J(1, (8), 0)
  =void link_patterns(struct rename_renamedf scalar ren)
  =        real scalar    i, jn
  =real scalar check_and_fix_ETnum(struct rename_patterndf scalar newp, struct 
> rename_optiondf scalar option)
  =        real scalar            n, j, jn
  =        real scalar  tt
  =                if (tt==(5) | tt==(6)) {
  =                                (tt==(5) ? (9) : (10))
  =struct rename_linklocdf {
  =        real scalar    j_old, last_sequential_j_old
  =        real scalar    j_new
  =        real scalar    jn
  =        real rowvector    mapsub
  =void rename_linklocdf_init(struct rename_linklocdf scalar ll, real scalar jn
> )
  =void rename_linklocdf_next(struct rename_linklocdf scalar ll, struct rename_
> patterndf scalar oldp, struct rename_patterndf scalar newp)
  =        real scalar subscr
  =real scalar map_subscript(real scalar subscr, real rowvector mapsub, struct 
> rename_patterndf scalar oldp, struct rename_patterndf scalar newp)
  =void link_patterns_u(struct rename_patterndf scalar oldp, struct rename_patt
> erndf scalar newp, real scalar jn)
  =        struct rename_linklocdf scalar      ll
  =        rename_linklocdf_init(ll, jn)
  =        rename_linklocdf_next(ll, oldp, newp)
  =                rename_linklocdf_next(ll, oldp, newp)
  =real rowvector pelidx_of_wcidx(struct rename_patterndf scalar oldp)
  =        real rowvector            toret
  =        real scalar            i
  =        real scalar  tt
  =                if (tt!=(1) & tt!=(2)) toret = (toret, i)
  =void confirm_wildcards_link(struct rename_patterndf scalar oldp, real scalar
>  j_old,
  =                            struct rename_patterndf scalar newp, real scalar
>  j_new)
  =        real scalar  tt_old, tt_new
  =        if (tt_new == (3)) return
  =        if (tt_new == (8))  return
  =        if (tt_new == (4)) {
  =                if (tt_old == (4)) return
  =        if (tt_new==(5) | tt_new==(6)) {
  =                if (tt_old==(5) | tt_old==(6)) return
  =string scalar printable_wildcard(struct rename_peldf scalar el)
  =        real scalar  tt
  =        if (tt == (3))  return("*")
  =        if (tt == (4))    return("?")
  =        if (tt == (8))  return(".")
  =        if (tt == (5)) return("#")
  =        if (tt == (6)) return("(" + el.arg*"*" + ")")
  =real scalar count_wildcards(struct rename_patterndf scalar pat)
  =        return(pat.n_of[(3)]  +
  =               pat.n_of[(4)]    +
  =               pat.n_of[(5)] +
  =               pat.n_of[(6)] +
  =               pat.n_of[(8)])
  =real scalar is_wildcard(real scalar tt)
  =        return( tt == (3)  |
  =                tt == (4)    |
  =                tt == (5) |
  =                tt == (6) |
  =                tt == (9) |
  =                tt == (10) |
  =                tt == (8)  )
  =real scalar find_next_wildcard(struct rename_peldf rowvector d, real scalar 
> j0)
  =        real scalar    j
  =void fillin_old_varnames(struct rename_patterndf rowvector oldplist, struct 
> rename_patterndf rowvector newplist,
  =                                                        real scalar issort)
  =        real scalar    i
  =        string scalar    tmpname
  =void fillin_old_varnames_u(struct rename_patterndf scalar oldp, struct renam
> e_patterndf scalar newp,
  =                                        real scalar issort, string scalar tm
> pname)
  =        string rowvector            varnames, piece
  =        real scalar            i, n, nvars, nels
  =        string matrix            pieces
  =        real scalar  tt
  =        real scalar       filter_varlist, fillin_pieces
  =        filter_varlist = (oldp.n_of[(5)] + oldp.n_of[(6)] != 0)
  =        fillin_pieces  = (newp.n_of[(5)] + newp.n_of[(6)] +
  =                          newp.n_of[(3)]  + newp.n_of[(4)]    != 0)
  =        if (issort) fillin_pieces = 1
  =                        if (tt==(3) | tt==(4)) {
  =string scalar varlistpattern(struct rename_peldf rowvector ellist)
  =        real scalar    j
  =        string scalar    result
  =        if (ellist[1].elementtype == (1)) return(ellist[1].element)
  =string scalar varlist_el(struct rename_peldf scalar el)
  =        if (el.elementtype == (2))    return(el.element)
  =        if (el.elementtype == (3))   return("*")
  =        if (el.elementtype == (4))     return("?")
  =        if (el.elementtype == (5))  return("?*")
  =        if (el.elementtype == (6))  return(el.arg*"?")
  =struct rename_matchdf {
  =        real scalar    j0, j1
  =        real scalar    i0, i1
  =        string scalar    name
  =        string rowvector    pieces
  =real scalar matchvarname(string rowvector pieces, struct rename_peldf rowvec
> tor ellist, string scalar name)
  =        struct rename_matchdf scalar        m
  =                if (ellist[1].elementtype==(1)) {
  =                        return(1)
  =        if (!match_step(m, ellist)) return(0)
  =        return(1)
  =void match_setup(struct rename_matchdf scalar m, struct rename_peldf rowvect
> or ellist, string scalar name)
  =real scalar match_step(struct rename_matchdf scalar m, struct rename_peldf r
> owvector ellist)
  =        real scalar            lefttomatch
  =        real scalar      mr
  =        real scalar     r
  =                if ((r=match_query_done(m))!=(-1)) return(r)
  =                if (match_simplification(m, ellist)==-1) return(0)
  =                if ((r=match_query_done(m))!=(-1)) return(r)
  =                        if (match_step_1(m, ellist)==-1) return(0)
  =                        if ((r=match_query_done(m))!=(-1)) return(r)
  =                        return(0)
  =                        if (mr==-1 | mr==0) return(0)
  =                        if (mr==-1 | mr==0) return(0)
  =real scalar match_step_1(struct rename_matchdf scalar m, struct rename_peldf
>  rowvector ellist)
  =        if (ellist[m.j0].elementtype==(5)) {
  =                return(match_ETnum_v(m, ellist, 1))
  =        if (ellist[m.j0].elementtype==(3)) {
  =        return(-1)
  =real scalar match_step_2(struct rename_matchdf scalar m, struct rename_peldf
>  rowvector ellist)
  =        if (ellist[m.j0].elementtype==(5)) {
  =                return(match_ETnum_v(m, ellist, 1))
  =        if (ellist[m.j0+1].elementtype==(5)) {
  =                return(match_ETnum_v(m, ellist, 0))
  =        return(-1)
  =real scalar match_step_3p(struct rename_matchdf scalar m, struct rename_peld
> f rowvector ellist)
  =        real scalar    j
  =        if (ellist[m.j0].elementtype==(3)) {
  =                if (ellist[j].elementtype==(3)) {
  =                if (ellist[j].elementtype==(5)) {
  =                        return(match_ETnum_v(m, ellist, 0))
  =        if (ellist[m.j0].elementtype==(5)) {
  =                return(match_ETnum_v(m, ellist, 1))
  =        return(-1)
  =real scalar match_query_done(struct rename_matchdf scalar m)
  =                if (m.i0 < m.i1) return(0)
  =                return(1)
  =        return((-1))
  =real scalar match_simplification(struct rename_matchdf scalar m, struct rena
> me_peldf rowvector ellist)
  =        real scalar      mr
  =        while ((m.i1 >m.i0 & m.j1> m.j0)) {
  =                mr = match_fixed(m, ellist, 1)
  =                if (mr==-1) return(-1)
  =                if (mr==0)   break
  =        while ((m.i1 >m.i0 & m.j1> m.j0)) {
  =                mr = match_fixed(m, ellist, 0)
  =                if (mr==-1) return(-1)
  =                if (mr==0)   break
  =real scalar match_fixed(struct rename_matchdf scalar m, struct rename_peldf 
> rowvector ellist, real scalar s)
  =        real scalar    j
  =        j = (s==1 ? m.j0 : m.j1-1)
  =        if (ellist[j].elementtype==(2))   return(match_ETstr(m, ellist, s))
  =        if (ellist[j].elementtype==(6)) return(match_ETnum_f(m, ellist, s))
  =        if (ellist[j].elementtype==(4))    return(match_ETqm(m, ellist, s))
  =        return(0)
  =real scalar match_ETstr(struct rename_matchdf scalar m, struct rename_peldf 
> rowvector ellist, real scalar s)
  =        real scalar    j, len
  =        j = (s==1 ? m.j0 : m.j1-1)
  =        if (ellist[j].elementtype != (2)) return(0)
  =        if ((s==1 ?  usubstr(m.name, m.i0, len) :
  =                return(-1)
  =        return(1)
  =real scalar match_ETnum_f(struct rename_matchdf scalar m, struct rename_peld
> f rowvector ellist, real scalar s)
  =        real scalar    j, i, len
  =        string scalar    str, c
  =        j = (s==1 ? m.j0 : m.j1-1)
  =        if (ellist[j].elementtype != (6)) return(0)
  =        str = (s==1 ?  usubstr(m.name, m.i0, len) : usubstr(m.name, -len, .)
> )
  =        if (ustrlen(str)!=len) return(-1)
  =                if (c<"0" | c>"9") return(-1)
  =        return(1)
  =real scalar match_ETqm(struct rename_matchdf scalar m, struct rename_peldf r
> owvector ellist, real scalar s)
  =        if (ellist[s==1 ? m.j0 : m.j1-1].elementtype != (4)) {
  =                return(0)
  =        if (m.i0==m.i1) return(-1)
  =        return(1)
  =real scalar match_ETnum_v(struct rename_matchdf scalar m, struct rename_peld
> f rowvector ellist, real scalar s)
  =        real scalar            j, i0, i1, len
  =        string scalar            c
  =        string scalar            c1
  =        struct rename_matchdf scalar        hold
  =        j = (s==1 ? m.j0 : m.j1-1)
  =        if (ellist[j].elementtype != (5)) return(0)
  =        if (s==1) {
  =                if (match_step(m, ellist)==1) return(1)
  =        return(-1)
  =real scalar match_ETstar_left(struct rename_matchdf scalar m, struct rename_
> peldf rowvector ellist)
  =        real scalar            len, newlen
  =        struct rename_matchdf scalar        hold
  =        real scalar       next_is_ETnum_v
  =        if (ellist[m.j0].elementtype != (3)) return(0)
  =                post_match_piece(m, 1, len)
  =                return(1)
  =        next_is_ETnum_v = (ellist[m.j0+1].elementtype==(5))
  =                post_match_piece(m, 1, len)
  =                if (match_step(m, ellist)==1) {
  =                                        post_match_piece(m, 1, newlen)
  =                        return(1)
  =        return(-1)
  =real scalar mstargiveback(string scalar s)
  =        real scalar    l
  =        string scalar    c
  =        string scalar    c1
  =void post_match_piece(struct rename_matchdf scalar m, real scalar s, real sc
> alar len)
  =        if (s==1) {
  =void sort_old_varnames(struct rename_renamedf scalar ren)
  =        real scalar i
  =void sort_appropriate_field(struct rename_patterndf rowvector oldplist, stru
> ct rename_patterndf rowvector newplist)
  =        real scalar            i
  =        real scalar            j
  =real scalar j_of_renumber(struct rename_patterndf scalar plist)
  =        real scalar            j
  =        real scalar  tt
  =                if (tt==(9) | tt==(10)) return(j)
  =real scalar j_of_number(struct rename_patterndf scalar plist)
  =        real scalar            j, jtoret
  =        real scalar  tt
  =                if (tt==(3) | tt==(4) | tt==(5) | tt==(6)) {
  =void sort_on_field(struct rename_patterndf scalar plist, real scalar j)
  =        real scalar  tt
  =        real colvector            o
  =        string colvector            vc
  =                if (tt==(5) | tt==(6)) {
  =void fillin_new_varnames_recase(struct rename_renamedf scalar ren)
  =        real scalar    i
  =void fillin_new_varnames(struct rename_patterndf rowvector oldplist, struct 
> rename_patterndf rowvector newplist, real scalar from)
  =        real scalar    i
  =void fillin_new_varnames_u(struct rename_patterndf scalar oldp, struct renam
> e_patterndf scalar newp, real scalar from)
  =        real scalar    i
  =        if (newp.ellist[1].elementtype==(1)) {
  =void fillin_new_varnames_u_u(struct rename_patterndf scalar oldp, struct ren
> ame_patterndf scalar newp, real scalar from, real scalar i)
  =        real scalar            j
  =        string scalar            name
  =        real scalar  tt
  =                if (tt==(2)) {
  =                else if (tt==(3)) {
  =                else if (tt==(4)) {
  =                else if (tt==(5)) {
  =                else if (tt==(6)) {
  =                else if (tt==(7)) {
  =                else if (tt==(9)) {
  =                else if (tt==(10)) {
  =                else if (tt != (8)) {
  =string scalar fmt_ETnum_f(struct rename_patterndf scalar oldp, struct rename
> _patterndf scalar newp, real scalar i, real scalar j)
  =        real scalar    n, len
  =        string scalar    res, orig
  =string scalar fmt_ETnum_f_r(struct rename_patterndf scalar oldp, struct rena
> me_patterndf scalar newp, real scalar j, real scalar from)
  =        real scalar    n, len
  =        string scalar res
  =string matrix build_toren(struct rename_patterndf rowvector oldplist, struct
>  rename_patterndf rowvector newplist)
  =        string matrix    toren
  =        real scalar    i, N, n, k, k2
  =        real colvector    toselect
  =        string rowvector    lastrow, newrow
  =        real scalar hasomissions
  =                                hasomissions = 1
  =void perform_renames(string matrix toren, struct rename_optiondf scalar opti
> on)
  =        real scalar       use_intermediary
  =        string matrix            toren_nonulls
  =                        perform_dryrun(toren, toren_nonulls, 0)
  =void confirm_newnames_new(string matrix toren)
  =        real scalar    i
  =        real rowvector    varnum
  =        string rowvector    tocheck, badvar
  =void perform_set_r(string matrix toren)
  =void perform_test(string matrix toren, real scalar use_intermediary)
  =        real scalar    i
  =void perform_rename_straight(string matrix toren)
  =        real scalar    i
  =        real scalar    breakstatus
  =void perform_rename_intermediary(string matrix toren)
  =        real scalar    i
  =        real scalar    breakstatus
  =        string rowvector    tmpname
  =void perform_dryrun(string matrix toren, string matrix toren_nonulls, real s
> calar use_intermediary)
  =        real scalar    i
  =        real scalar    maxlen
  =        string scalar    sfmt, sfmtit
  =void dryrun_note1(string matrix toren, string matrix toren_nonulls)
  =        real scalar    i
  =        real scalar    nulls
  =void dryrun_note2(string matrix toren, real scalar use_intermediary)
  =        string colvector    dupnames, newname, oldname
  =real scalar names_not_jointly_unique(string matrix toren)
  =        real scalar    n0, n1
  =        string colvector    fulllist
  =void confirm_names_unique(string matrix toren)
  =void confirm_names_unique_1(string matrix toren, real scalar j)
  =        string colvector    names, corresponding
  =        string scalar    s
  =        real scalar    n
  =string colvector corresponding_names(string matrix toren, string scalar name
> , real scalar js, real scalar jd)
  =        real scalar    i
  =        string colvector    dups
  =void confirm_new_varnames_valid(string matrix toren)
  =        real scalar    i, n
  =        real colvector    bad
  =void confirm_not_empty(string scalar str, string scalar expected)
  =void errprint_bf_list(string vector list , |real scalar USER_MAXEL)
  =        real scalar            MAXEL
  =        real scalar            i, top
  =        real scalar       chopped
  =                        chopped = 1
  =                        chopped = 0
  =void errprint_bf_string(string scalar user_s, |real scalar USER_MAXLEN)
  =        real scalar            MAXLEN
  =        real scalar            len_last, target_last
  =        real scalar            len_remaining
  =        real scalar            i
  =        string rowvector            els
  =        string scalar            s, first, last
  =        real scalar       cont
  =        cont = 1
  =                else            cont   = 0
  =        string scalar    indent
  =void error_preceding_dash( pattype)
  =                        (pattype==0 ? "oldname" : "newname" ) )
  =void error_following_dash( pattype, string scalar what)
  =                        (pattype==0 ? "oldname" : "newname" ) )
  =void option_not_allowed(string scalar option)
  =void option_number_misspecified(string scalar op)
  =void error_ETnum_f_too_long(real scalar n_digits)
  =        errprintf("the {bf:(###...#)} pattern is %g.\n", 10)
  =void error_patternlengths_unequal(struct rename_patterndf rowvector oldplist
> , struct rename_patterndf rowvector newplist)
  =        string scalar    s_old, s_new
  =void error_too_many_renumbers(string scalar op, struct rename_patterndf scal
> ar newp)
  =void error_strlist_length(struct rename_patterndf scalar oldp, struct rename
> _patterndf scalar newp)
  =        real scalar    n_old, n_new
  =        string scalar    s_old, s_new
  =void error_missing_ETnum(string scalar opname, struct rename_patterndf scala
> r newp)
  =void error_too_many_wildcards(struct rename_patterndf scalar oldp, struct re
> name_patterndf scalar newp,
  =                                                        real scalar isaddnum
> ber)
  =void error_wildcardmatch_qm(struct rename_patterndf scalar oldp, real scalar
>  j_old,
  =                            struct rename_patterndf scalar newp, real scalar
>  j_new)
  =void error_wildcardmatch_hash(struct rename_patterndf scalar oldp, real scal
> ar j_old,
  =                              struct rename_patterndf scalar newp, real scal
> ar j_new)
  =void error_no_right_bracket(string scalar original)
  =void error_inside_brackets(string scalar original)
  =void error_newnumber_subscripted(struct rename_patterndf scalar oldp, struct
>  rename_patterndf scalar newp)
  =void error_subscript_invalid(struct rename_patterndf scalar oldp, struct ren
> ame_patterndf scalar newp, real scalar subscr)
  =void error_subscripts_in_old(struct rename_patterndf scalar pat)
  =void dump_pattern(struct rename_patterndf rowvector pat, string scalar typ, 
> real scalar incl_names)
  =        real scalar    i, j, n
  =        real scalar    nv, k, m
  =                        pat[i].n_of[(2)],
  =                        pat[i].n_of[(3)],
  =                        pat[i].n_of[(4)],
  =                        pat[i].n_of[(5)],
  =                        pat[i].n_of[(6)],
  =                        pat[i].n_of[(7)],
  =                        pat[i].n_of[(8)])
  =string scalar dump_xlate_tt(real scalar t)
  =        if (t==(1))     return("ETstrlist")
  =        if (t==(2))         return("ETstr")
  =        if (t==(3))        return("ETstar")
  =        if (t==(4))          return("ETqm")
  =        if (t==(5))       return("ETnum_v")
  =        if (t==(6))       return("ETnum_f")
  =        if (t==(7))          return("ETeq")
  =        if (t==(8))        return("ETodot")
  =        if (t==(9))     return("ETnum_v_r")
  =        if (t==(10))     return("ETnum_f_r")
  =void dump_options(struct rename_renamedf scalar ren)
  =void match_debug(struct rename_matchdf scalar m, struct rename_peldf rowvect
> or ellist, string scalar msg)
  =string rowvector list_subtract(string rowvector a, string rowvector b)
  =        string rowvector result
  =string rowvector expand_varlist(string scalar pattern, string scalar tmpname
> )
  =        real scalar    rc
  =        string rowvector    result
  =string scalar ordinal_suffix(real scalar i)
  =        real scalar    lastdigit
  ------------------------------------------------------------ begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  -------------------------------------------------------------- end rename ---

. encode male_string,  gen(male) 

. 
. cap: mkdir ../docs

. cap: mkdir ../docs/img 

. 
. tsset id month 
  ------------------------------------------------------------- begin tsset ---
  - version 10
  - capture syntax [, MI noQUERY PANELNAME(passthru) DISPLAYINDENT(passthru) ]
  - if (_rc==0) {
    if ("`mi'"=="") {
    u_mi_not_mi_set tsset
    }
    _ts tvar pvar, panel
    local fmt: format `tvar'
    local tsdelta : char _dta[_TSdelta]
    if "`tsdelta'" == "" {
    local tsdelta 1
    }
    tsset `pvar' `tvar', format(`fmt') delta((`tsdelta')) `mi' `query' `panelna
> me' `displayindent'
    ret add
    exit
    }
  - syntax [varlist(numeric max=2 default=none)] [, CLEAR Daily Format(passthru
> ) Generic Halfyearly Monthly Quarterly Weekly Yearly DELta(passthru) Clocktim
> e FORCE MI noQUERY PANELNAME(passthru) DISPLAYINDENT(passthru) PANELLABEL(pas
> sthru) TSVARLABEL(passthru) ]
  - if ("`mi'"=="") {
  = if (""=="") {
  - u_mi_not_mi_set tsset
    ------------------------------------------------- begin u_mi_not_mi_set ---
    - version 11
    - args name other
    - if ("`_dta[_mi_marker]'"=="") {
    = if (""=="") {
    - exit
    --------------------------------------------------- end u_mi_not_mi_set ---
  - }
  - else {
    u_mi_check_setvars tsset `varlist'
    }
  - if ("`clear'" != "") {
  = if ("" != "") {
    syntax [, CLEAR MI]
    Clear
    exit
    }
  - if ("`varlist'"=="") {
  = if ("id month"=="") {
    _ts tvar pvar, panel
    tsset `pvar' `tvar', `daily' `format' `generic' `halfyearly' `monthly' `qua
> rterly' `weekly' `yearly' `clocktime' `mi' `delta' `query' `panelname' `displ
> ayindent' `panellabel' `tsvarlabel'
    ret add
    exit
    }
  - syntax varlist(numeric max=2 default=none) [ , CLEAR Daily Format(string) G
> eneric Halfyearly Monthly Quarterly Weekly Yearly DELta(string) Clocktime FOR
> CE MI noQUERY PANELNAME(string) DISPLAYINDENT(integer 0) PANELLABEL(string) T
> SVARLABEL(string) ]
  - local ct : word count `varlist'
  = local ct : word count id month
  - if `ct'==2 {
  = if 2==2 {
  - tokenize `varlist'
  = tokenize id month
  - local panel `1'
  = local panel id
  - local timevar `2'
  = local timevar month
  - }
  - else {
    local timevar `varlist'
    }
  - local period `daily' `weekly' `monthly' `quarterly' `halfyearly' `yearly' `
> generic' `clocktime'
  = local period        
  - if `"`format'"'!="" {
  = if `""'!="" {
    local dfltfmt "no"
    if "`period'" != "" {
    gettoken period : period
    di in red "may not specify both {bf:format()} and {bf:`period'}"
    exit 198
    }
    local try : di `format' 2
    }
  - else if "`period'" != "" {
  = else if "" != "" {
    local ct : word count `period'
    if `ct' > 1 {
    di in red "may only specify one time-scale from " "{bf:daily}, {bf:weekly},
>  {bf:monthly}, "
    di in red "{bf:quarterly}, {bf:halfyearly}, " "{bf:yearly}, and {bf:generic
> }"
    exit 198
    }
    local format = "%t" + bsubstr("`period'",1,1)
    if bsubstr("`period'", 1, 1) == "c" {
    local dfltfmt "yes"
    }
    }
  - else {
  - local format : format `timevar'
  = local format : format month
  - }
  - local curfmt : format `timevar'
  = local curfmt : format month
  - local curftyp = bsubstr("`curfmt'", 2, 1)
  = local curftyp = bsubstr("%8.0g", 2, 1)
  - if "`curftyp'" != "t" & "`curftyp'" != "d" {
  = if "8" != "t" & "8" != "d" {
  - local curftyp g
  - }
  - else if "`curftyp'" == "t" {
  = else if "g" == "t" {
    local curftyp = bsubstr("`curfmt'", 3, 1)
    }
  - local newftyp = bsubstr("`format'", 2, 1)
  = local newftyp = bsubstr("%8.0g", 2, 1)
  - if "`newftyp'" != "t" & "`newftyp'" != "d" {
  = if "8" != "t" & "8" != "d" {
  - local newftyp g
  - }
  - else if "`newftyp'" == "t" {
  = else if "g" == "t" {
    local newftyp = bsubstr("`format'", 3, 1)
    }
  - if "`curftyp'" != "`newftyp'" & "`curftyp'" != "g" {
  = if "g" != "g" & "g" != "g" {
    local shorty = abbrev("`timevar'", 13)
    Period curftyp2 : "" "`curftyp'"
    Period newftyp2 : "" "`newftyp'"
    di
    di in smcl as err "Variable {res}`shorty'{err} had been formatted `curfmt' 
> (a " "`curftyp2' period)," _n "and you asked for a `newftyp2' period.  " "Are
>  you sure that is" _n "what you want?  It has been done; " "{res}`shorty'{err
> } is now formatted `format'."
    di
    }
  - else if "`curftyp'" == "`newftyp'" & "`dfltfmt'" != "no" {
  = else if "g" == "g" & "" != "no" {
  - local format `curfmt'
  = local format %8.0g
  - }
  - capture assert int(`timevar')==`timevar'
  = capture assert int(month)==month
  - if _rc {
    di in red "time variable must contain only integer values"
    exit 451
    }
  - sort `panel' `timevar'
  = sort id month
  - if "`panel'" != "" {
  = if "id" != "" {
  - local bypfx "by `panel': "
  = local bypfx "by id: "
  - }
  - if `"`format'"' != "" {
  = if `"%8.0g"' != "" {
  - format `timevar' `format'
  = format month %8.0g
  - }
  - tempname scdelta
  - mata: _TS_p_delta("`scdelta'", "`delta'", "`timevar'")
  = mata: _TS_p_delta("__000000", "", "month")
  - if `scdelta' == -2 {
  = if __000000 == -2 {
    di as err "invalid time-series format on {bf:`timevar'}"
    exit 120
    }
  - if `scdelta' == -1 {
  = if __000000 == -1 {
    di as err "invalid argument in {bf:delta()}"
    exit 198
    }
  - tempvar timedif
  - qui `bypfx' gen double `timedif' = `timevar'[_n+1] - `timevar'
  = qui by id:  gen double __000001 = month[_n+1] - month
  - cap confirm variable `timedif'
  = cap confirm variable __000001
  - if _rc {
    di as text "no observations"
    exit
    }
  - qui sum `timedif', meanonly
  = qui sum __000001, meanonly
  - if r(min) == 0 {
    if "`panel'" != "" {
    di in red "repeated time values within panel"
    }
    else {
    di in red "repeated time values in sample"
    }
    exit 451
    }
  - if "`force'" == "" {
  = if "" == "" {
  - if r(min) < `scdelta' {
  = if r(min) < __000000 {
    di in red "time values with period less than {bf:delta()} found"
    exit 451
    }
  - }
  - Clear
    ----------------------------------------------------- begin tsset.Clear ---
    - char _dta[_TStvar]
    - char _dta[_TSpanel]
    - char _dta[_TSdelta]
    - char _dta[_TSitrvl]
    - char _dta[tis]
    - char _dta[iis]
    ------------------------------------------------------- end tsset.Clear ---
  - nobreak {
  - char _dta[_TStvar] "`timevar'"
  = char _dta[_TStvar] "month"
  - char _dta[_TSpanel] "`panel'"
  = char _dta[_TSpanel] "id"
  - char _dta[_TSdelta] `: di %21x `scdelta''
  = char _dta[_TSdelta] +1.0000000000000X+000
  - char _dta[_TSitrvl] 1
  - char _dta[tis] "`timevar'"
  = char _dta[tis] "month"
  - char _dta[iis] "`panel'"
  = char _dta[iis] "id"
  - }
  - if "`dfltfmt'" == "yes" & bsubstr("`format'", 3, 1) == "c" {
  = if "" == "yes" & bsubstr("%8.0g", 3, 1) == "c" {
    format `timevar' %tcDDmonCCYY_HH:MM:SS.sss
    }
  - if "`query'" == "" {
  = if "" == "" {
  - Query, panelname(`"`panelname'"') displayindent(`displayindent') panellabel
> (`panellabel') tsvarlabel(`tsvarlabel')
  = Query, panelname(`""') displayindent(0) panellabel() tsvarlabel()
    ----------------------------------------------------- begin tsset.Query ---
    - syntax [, PANELNAME(string) DISPLAYINDENT(integer 0) PANELLABEL(string) T
> SVARLABEL(string) ]
    - local timevar `_dta[_TStvar]'
    = local timevar month
    - local panel `_dta[_TSpanel]'
    = local panel id
    - local delta : char _dta[_TSdelta]
    - if _N > 1 {
    - if "`panel'" == "" {
    = if "id" == "" {
      qui count if `timevar'-`timevar'[_n-1] != `delta' & `timevar' != . in 2/l
      local gaps = r(N)
      }
    - else {
    - qui count if `timevar'-`timevar'[_n-1] != `delta' & `timevar' != . & `pan
> el' == `panel'[_n-1] in 2/l
    = qui count if month-month[_n-1] != +1.0000000000000X+000 & month != . & id
>  == id[_n-1] in 2/l
    - local gaps = r(N)
    - }
    - }
    - else {
      local gaps 0
      }
    - if "`panel'" == "" {
    = if "id" == "" {
      tempvar seenvar
      local t0 = `timevar'[1]
      gen long `seenvar' = sum(`timevar' != .)
      local t1 = `timevar'[`seenvar'[_N]]
      }
    - else {
    - tempname firstob lastob
    - qui gen byte `firstob' = `panel' != . & `panel' != `panel'[_n-1]
    = qui gen byte __000002 = id != . & id != id[_n-1]
    - qui sum `timevar' if `firstob', meanonly
    = qui sum month if __000002, meanonly
    - local t0 = r(min)
    - qui gen byte `lastob' = `panel' != . & `timevar' != . & (`panel' != `pane
> l'[_n+1] | `timevar'[_n+1] == .)
    = qui gen byte __000003 = id != . & month != . & (id != id[_n+1] | month[_n
> +1] == .)
    - qui sum `timevar' if `lastob', meanonly
    = qui sum month if __000003, meanonly
    - local t1 = r(max)
    - local npanel = r(N)
    - sum `panel', meanonly
    = sum id, meanonly
    - ret scalar imin = r(min)
    - ret scalar imax = r(max)
    - tempvar tmin tmax tcount
    - qui by `panel' : gen double `tcount' = _N if !missing(`timevar')
    = qui by id : gen double __000006 = _N if !missing(month)
    - capture assert `tcount' == `tcount'[1]
    = capture assert __000006 == __000006[1]
    - if c(rc) {
    - local bal unbalanced
    - }
    - else {
      CheckStrongBal `npanel' `panel' `timevar'
      if r(rc) {
      local bal "weakly balanced"
      }
      else {
      local bal "strongly balanced"
      }
      }
    - if `"`panelname'"' == "" {
    = if `""' == "" {
    - local panelname "panel"
    - local col = 8 + `displayindent'
    = local col = 8 + 0
    - }
    - else {
      local col = 13 - strlen(`"`panelname'"') + `displayindent'
      }
    - if `"`panellabel'"' != "" {
    = if `""' != "" {
      local plab `"`panellabel'"'
      }
    - else {
    - local plab `"`panel'"'
    = local plab `"id"'
    - }
    - di in gr _col(`col') `"`panelname' variable:  "' in ye "`plab' (`bal')"
    = di in gr _col(8) `"panel variable:  "' in ye "id (unbalanced)"
       panel variable:  id (unbalanced)
    - return local balanced "`bal'"
    = return local balanced "unbalanced"
    - }
    - local fmt : format `timevar'
    = local fmt : format month
    - local t0s = trim(string(`t0', "`fmt'"))
    = local t0s = trim(string(1, "%8.0g"))
    - local t1s = trim(string(`t1', "`fmt'"))
    = local t1s = trim(string(48, "%8.0g"))
    - local col = 9 + `displayindent'
    = local col = 9 + 0
    - di in gr _col(`col') "time variable:  " _c
    = di in gr _col(9) "time variable:  " _c
        time variable:      - local i 1
    - if `"`tsvarlabel'"' != "" {
    = if `""' != "" {
      local line`i' `=abbrev("`tsvarlabel'",13)',
      }
    - else {
    - local line`i' `=abbrev("`timevar'",13)',
    = local line1 month,
    - }
    - local linelen = length(`"`line`i''"')
    = local linelen = length(`"month,"')
    - if (`linelen' + length(`"`t0s'"')) < 53 {
    = if (6 + length(`"1"')) < 53 {
    - local line`i' `line`i'' `t0s'
    = local line1 month, 1
    - local linelen = length(`"`line`i''"')
    = local linelen = length(`"month, 1"')
    - }
    - else {
      local `++i'
      local line`i' `t0s'
      local linelen = length(`"`line`i''"')
      }
    - if (`linelen' + 3) < 53 {
    = if (8 + 3) < 53 {
    - local line`i' `"`line`i'' to"'
    = local line1 `"month, 1 to"'
    - local linelen = length(`"`line`i''"')
    = local linelen = length(`"month, 1 to"')
    - }
    - else {
      local `++i'
      local line`i' "to"
      local linelen = 3
      }
    - if (`linelen' + length(`"`t1s'"')) < 53 {
    = if (11 + length(`"48"')) < 53 {
    - local line`i' `line`i'' `t1s'
    = local line1 month, 1 to 48
    - local linelen = length(`"`line`i''"')
    = local linelen = length(`"month, 1 to 48"')
    - }
    - else {
      local `++i'
      local line`i' `t1s'
      local linelen = length(`"`t1s'"')
      }
    - if `gaps' > 0 {
    = if 0 > 0 {
      if `gaps' == 1 {
      local note "but with a gap"
      }
      else {
      local note "but with gaps"
      }
      if (`linelen' + length(`", `note'"')) < 53 {
      local line`i' `line`i'', `note'
      }
      else {
      local `++i'
      local line`i' `note'
      }
      }
    - forvalues j = 1/`i' {
    = forvalues j = 1/1 {
    - local col = 25 + `displayindent'
    = local col = 25 + 0
    - di in ye _col(`col') `"`line`j''"'
    = di in ye _col(25) `"month, 1 to 48"'
                        month, 1 to 48
    - }
    - tempname fancyd
    - mata:_TS_p_delta2str("`fancyd'", `=`delta'', "`timevar'")
    = mata:_TS_p_delta2str("__000007", 1, "month")
    - local col = 17 + `displayindent'
    = local col = 17 + 0
    - di in gr _col(`col') "delta:  " in ye "`=`fancyd''"
    = di in gr _col(17) "delta:  " in ye "1 unit"
                delta:  1 unit
    - if `gaps' > 0 {
    = if 0 > 0 {
      ret scalar gaps = 1
      }
    - else {
    - ret scalar gaps = 0
    - }
    - ret scalar tmin = `t0'
    = ret scalar tmin = 1
    - ret scalar tmax = `t1'
    = ret scalar tmax = 48
    - ret scalar tdelta = `delta'
    = ret scalar tdelta = +1.0000000000000X+000
    - ret local tmins `t0s'
    = ret local tmins 1
    - ret local tmaxs `t1s'
    = ret local tmaxs 48
    - ret local tdeltas "`=`fancyd''"
    = ret local tdeltas "1 unit"
    ------------------------------------------------------- end tsset.Query ---
  - ret add
  - }
  - else {
    ret scalar tdelta = `: char _dta[_TSdelta]'
    }
  - if "`dfltfmt'" == "yes" & bsubstr("`format'", 3, 1) == "c" {
  = if "" == "yes" & bsubstr("%8.0g", 3, 1) == "c" {
    format `timevar' %tc
    }
  - local fmt : format `timevar'
  = local fmt : format month
  - return local tsfmt `fmt'
  = return local tsfmt %8.0g
  - return local unit1 = bsubstr("`fmt'", 3, 1)
  = return local unit1 = bsubstr("%8.0g", 3, 1)
  - Period per : "`period'" `return(unit1)'
  = Period per : "" .
    ---------------------------------------------------- begin tsset.Period ---
    - args newper colon per unit1
    - if "`per'" == "" {
    = if "" == "" {
    - if "`unit1'" != "" {
    = if "." != "" {
    - local c "clocktime"
    - local g "generic"
    - local d "daily"
    - local w "weekly"
    - local m "monthly"
    - local q "quarterly"
    - local h "halfyearly"
    - local y "yearly"
    - capture c_local `newper' ``unit1''
    = capture c_local per 
    - }
    - else {
      c_local `newper' "generic"
      }
    - }
    - else {
      c_local `newper' `per'
      }
    ------------------------------------------------------ end tsset.Period ---
  - return local unit `per'
  = return local unit 
  - ret local timevar "`timevar'"
  = ret local timevar "month"
  - ret local panelvar "`panel'"
  = ret local panelvar "id"
  --------------------------------------------------------------- end tsset ---

. 
. ** RUN ESPLOT
. /* through zero */
. esplot paygrade, by(male) event(to_male_mgr, save) window(-20 30) estimate_re
> ference
  ------------------------------------------------------------ begin esplot ---
  - version 11
  - syntax varlist(max=2) [if] [in] [fweight pweight aweight/], [EVent(string a
> sis)] [ by(varname numeric) compare(string asis) ESTimate_reference differenc
> e SAVEdata(string asis) CONTROLs(varlist fv ts) absorb(passthru) vce(passthru
> ) Window(numlist max=2 min=2 integer ascending) PERIOD_length(integer 1) COLo
> rs(passthru) est_plot(passthru) ci_plot(passthru) legend(passthru) save_sampl
> e(name) Quantile(real -1) * ]
  - if "$esplot_nolog" == "" global esplot_nolog 1
  = if "" == "" global esplot_nolog 1
  - if $esplot_nolog == 1 global esplot_quietly "quietly :"
  = if 1 == 1 global esplot_quietly "quietly :"
  - if "$esplot_quietly" == "" global esplot_quietly "quietly :"
  = if "quietly :" == "" global esplot_quietly "quietly :"
  - else global esplot_quietly
  - local wildcard_options `options'
  = local wildcard_options 
  - if `quantile' == -1 {
  = if -1 == -1 {
  - local regression reghdfe
  - }
  - else if `quantile' >= 100 | `quantile' <= 0{
  = else if -1 >= 100 | -1 <= 0{
    di as error "`quantile' is not a valid quantile; try .5 for median regressi
> on."
    exit 198
    }
  - else if `quantile' >= 1{
  = else if -1 >= 1{
    local q = `quantile'/100
    local regression bsqreg
    }
  - else {
    local q = `quantile'
    local regression bsqreg
    }
  - if !missing("`absorb'") local main_absorb `absorb'
  = if !missing("") local main_absorb 
  - else local main_absorb "noabsorb"
  - if `quantile' != -1 & !missing("`absorb'"){
  = if -1 != -1 & !missing(""){
    local absorb_var: subinstr local absorb "absorb(" ""
    local absorb_var: subinstr local absorb_var ")" ""
    extract_varlist `absorb_var'
    local qreg_fe = r(varlist)
    }
  - if !missing("`save_sample'"){
  = if !missing(""){
    gen `save_sample' = .
    qui: ds
    local save_sample_vars_to_keep = r(varlist)
    }
  - local y: word 1 of `varlist'
  = local y: word 1 of paygrade
  - local e_t: word 2 of `varlist'
  = local e_t: word 2 of paygrade
  - if `:word count `varlist'' == 2 & !missing("`event'`compare'") {
  = if 1 == 2 & !missing("to_male_mgr, save") {
    di as error "Compare and Event indicators not compatible with existing even
> t time variable."
    di "Try either" as input "esplot y, event(<event_indicator>)" as text "or" 
> as input "esplot y <event_time>"
    exit
    }
  - if "`window'" != "" {
  = if "-20 30" != "" {
  - gettoken first_period last_period: (local) window
  - if `first_period' >= 0 di as text "Warning: No pre-period displayed. Try ad
> justing " as input "window"
  = if -20 >= 0 di as text "Warning: No pre-period displayed. Try adjusting " a
> s input "window"
  - }
  - if missing("`e_t'"){
  = if missing(""){
  - $esplot_quietly tsset
  =  tsset
    ----------------------------------------------------------- begin tsset ---
    - version 10
    - capture syntax [, MI noQUERY PANELNAME(passthru) DISPLAYINDENT(passthru) 
> ]
    - if (_rc==0) {
    - if ("`mi'"=="") {
    = if (""=="") {
    - u_mi_not_mi_set tsset
      ----------------------------------------------- begin u_mi_not_mi_set ---
      - version 11
      - args name other
      - if ("`_dta[_mi_marker]'"=="") {
      = if (""=="") {
      - exit
      ------------------------------------------------- end u_mi_not_mi_set ---
    - }
    - _ts tvar pvar, panel
      ----------------------------------------------------------- begin _ts ---
      - version 6, missing
      - gettoken tok : 0, parse(" ,")
      - if "`tok'" != "," & "`tok'" != "" {
      = if "tvar" != "," & "tvar" != "" {
      - gettoken tmac 0 : 0, parse(" ,")
      - c_local `tmac' "`_dta[_TStvar]'"
      = c_local tvar "month"
      - gettoken tok : 0, parse(" ,")
      - if "`tok'" != "," & "`tok'" != "" {
      = if "pvar" != "," & "pvar" != "" {
      - gettoken pmac 0 : 0, parse(" ,")
      - c_local `pmac' "`_dta[_TSpanel]'"
      = c_local pvar "id"
      - }
      - }
      - syntax [if] [in] [, Sort Panel Onepanel]
      - if "`_dta[_TStvar]'" == "" {
      = if "month" == "" {
        di in smcl in red "time variable not set, use {bf:tsset varname ...}"
        exit 111
        }
      - if "`_dta[_TSpanel]'"!="" & "`panel'"=="" & "`onepanel'"=="" {
      = if "id"!="" & "panel"=="" & ""=="" {
        di in red "command may not be used with panel data"
        exit 459
        }
      - if "`sort'"!="" {
      = if ""!="" {
        qui sort `_dta[_TSpanel]' `_dta[_TStvar]'
        }
      - if "`_dta[_TSpanel]'"!="" & "`panel'"=="" & "`onepanel'"!="" {
      = if "id"!="" & "panel"=="" & ""!="" {
        sum `_dta[_TSpanel]' `if' `in' , meanonly
        if r(min) != r(max) {
        di in red "sample may not include multiple panels"
        exit 459
        }
        }
      ------------------------------------------------------------- end _ts ---
    - local fmt: format `tvar'
    = local fmt: format month
    - local tsdelta : char _dta[_TSdelta]
    - if "`tsdelta'" == "" {
    = if "+1.0000000000000X+000" == "" {
      local tsdelta 1
      }
    - tsset `pvar' `tvar', format(`fmt') delta((`tsdelta')) `mi' `query' `panel
> name' `displayindent'
    = tsset id month, format(%8.0g) delta((+1.0000000000000X+000))    
      --------------------------------------------------------- begin tsset ---
      - version 10
      - capture syntax [, MI noQUERY PANELNAME(passthru) DISPLAYINDENT(passthru
> ) ]
      - if (_rc==0) {
        if ("`mi'"=="") {
        u_mi_not_mi_set tsset
        }
        _ts tvar pvar, panel
        local fmt: format `tvar'
        local tsdelta : char _dta[_TSdelta]
        if "`tsdelta'" == "" {
        local tsdelta 1
        }
        tsset `pvar' `tvar', format(`fmt') delta((`tsdelta')) `mi' `query' `pan
> elname' `displayindent'
        ret add
        exit
        }
      - syntax [varlist(numeric max=2 default=none)] [, CLEAR Daily Format(pass
> thru) Generic Halfyearly Monthly Quarterly Weekly Yearly DELta(passthru) Cloc
> ktime FORCE MI noQUERY PANELNAME(passthru) DISPLAYINDENT(passthru) PANELLABEL
> (passthru) TSVARLABEL(passthru) ]
      - if ("`mi'"=="") {
      = if (""=="") {
      - u_mi_not_mi_set tsset
        --------------------------------------------- begin u_mi_not_mi_set ---
        - version 11
        - args name other
        - if ("`_dta[_mi_marker]'"=="") {
        = if (""=="") {
        - exit
        ----------------------------------------------- end u_mi_not_mi_set ---
      - }
      - else {
        u_mi_check_setvars tsset `varlist'
        }
      - if ("`clear'" != "") {
      = if ("" != "") {
        syntax [, CLEAR MI]
        Clear
        exit
        }
      - if ("`varlist'"=="") {
      = if ("id month"=="") {
        _ts tvar pvar, panel
        tsset `pvar' `tvar', `daily' `format' `generic' `halfyearly' `monthly' 
> `quarterly' `weekly' `yearly' `clocktime' `mi' `delta' `query' `panelname' `d
> isplayindent' `panellabel' `tsvarlabel'
        ret add
        exit
        }
      - syntax varlist(numeric max=2 default=none) [ , CLEAR Daily Format(strin
> g) Generic Halfyearly Monthly Quarterly Weekly Yearly DELta(string) Clocktime
>  FORCE MI noQUERY PANELNAME(string) DISPLAYINDENT(integer 0) PANELLABEL(strin
> g) TSVARLABEL(string) ]
      - local ct : word count `varlist'
      = local ct : word count id month
      - if `ct'==2 {
      = if 2==2 {
      - tokenize `varlist'
      = tokenize id month
      - local panel `1'
      = local panel id
      - local timevar `2'
      = local timevar month
      - }
      - else {
        local timevar `varlist'
        }
      - local period `daily' `weekly' `monthly' `quarterly' `halfyearly' `yearl
> y' `generic' `clocktime'
      = local period        
      - if `"`format'"'!="" {
      = if `"%8.0g"'!="" {
      - local dfltfmt "no"
      - if "`period'" != "" {
      = if "" != "" {
        gettoken period : period
        di in red "may not specify both {bf:format()} and {bf:`period'}"
        exit 198
        }
      - local try : di `format' 2
      = local try : di %8.0g 2
      - }
      - else if "`period'" != "" {
      = else if "" != "" {
        local ct : word count `period'
        if `ct' > 1 {
        di in red "may only specify one time-scale from " "{bf:daily}, {bf:week
> ly}, {bf:monthly}, "
        di in red "{bf:quarterly}, {bf:halfyearly}, " "{bf:yearly}, and {bf:gen
> eric}"
        exit 198
        }
        local format = "%t" + bsubstr("`period'",1,1)
        if bsubstr("`period'", 1, 1) == "c" {
        local dfltfmt "yes"
        }
        }
      - else {
        local format : format `timevar'
        }
      - local curfmt : format `timevar'
      = local curfmt : format month
      - local curftyp = bsubstr("`curfmt'", 2, 1)
      = local curftyp = bsubstr("%8.0g", 2, 1)
      - if "`curftyp'" != "t" & "`curftyp'" != "d" {
      = if "8" != "t" & "8" != "d" {
      - local curftyp g
      - }
      - else if "`curftyp'" == "t" {
      = else if "g" == "t" {
        local curftyp = bsubstr("`curfmt'", 3, 1)
        }
      - local newftyp = bsubstr("`format'", 2, 1)
      = local newftyp = bsubstr("%8.0g", 2, 1)
      - if "`newftyp'" != "t" & "`newftyp'" != "d" {
      = if "8" != "t" & "8" != "d" {
      - local newftyp g
      - }
      - else if "`newftyp'" == "t" {
      = else if "g" == "t" {
        local newftyp = bsubstr("`format'", 3, 1)
        }
      - if "`curftyp'" != "`newftyp'" & "`curftyp'" != "g" {
      = if "g" != "g" & "g" != "g" {
        local shorty = abbrev("`timevar'", 13)
        Period curftyp2 : "" "`curftyp'"
        Period newftyp2 : "" "`newftyp'"
        di
        di in smcl as err "Variable {res}`shorty'{err} had been formatted `curf
> mt' (a " "`curftyp2' period)," _n "and you asked for a `newftyp2' period.  " 
> "Are you sure that is" _n "what you want?  It has been done; " "{res}`shorty'
> {err} is now formatted `format'."
        di
        }
      - else if "`curftyp'" == "`newftyp'" & "`dfltfmt'" != "no" {
      = else if "g" == "g" & "no" != "no" {
        local format `curfmt'
        }
      - capture assert int(`timevar')==`timevar'
      = capture assert int(month)==month
      - if _rc {
        di in red "time variable must contain only integer values"
        exit 451
        }
      - sort `panel' `timevar'
      = sort id month
      - if "`panel'" != "" {
      = if "id" != "" {
      - local bypfx "by `panel': "
      = local bypfx "by id: "
      - }
      - if `"`format'"' != "" {
      = if `"%8.0g"' != "" {
      - format `timevar' `format'
      = format month %8.0g
      - }
      - tempname scdelta
      - mata: _TS_p_delta("`scdelta'", "`delta'", "`timevar'")
      = mata: _TS_p_delta("__000001", "(+1.0000000000000X+000)", "month")
      - if `scdelta' == -2 {
      = if __000001 == -2 {
        di as err "invalid time-series format on {bf:`timevar'}"
        exit 120
        }
      - if `scdelta' == -1 {
      = if __000001 == -1 {
        di as err "invalid argument in {bf:delta()}"
        exit 198
        }
      - tempvar timedif
      - qui `bypfx' gen double `timedif' = `timevar'[_n+1] - `timevar'
      = qui by id:  gen double __000003 = month[_n+1] - month
      - cap confirm variable `timedif'
      = cap confirm variable __000003
      - if _rc {
        di as text "no observations"
        exit
        }
      - qui sum `timedif', meanonly
      = qui sum __000003, meanonly
      - if r(min) == 0 {
        if "`panel'" != "" {
        di in red "repeated time values within panel"
        }
        else {
        di in red "repeated time values in sample"
        }
        exit 451
        }
      - if "`force'" == "" {
      = if "" == "" {
      - if r(min) < `scdelta' {
      = if r(min) < __000001 {
        di in red "time values with period less than {bf:delta()} found"
        exit 451
        }
      - }
      - Clear
        ------------------------------------------------- begin tsset.Clear ---
        - char _dta[_TStvar]
        - char _dta[_TSpanel]
        - char _dta[_TSdelta]
        - char _dta[_TSitrvl]
        - char _dta[tis]
        - char _dta[iis]
        --------------------------------------------------- end tsset.Clear ---
      - nobreak {
      - char _dta[_TStvar] "`timevar'"
      = char _dta[_TStvar] "month"
      - char _dta[_TSpanel] "`panel'"
      = char _dta[_TSpanel] "id"
      - char _dta[_TSdelta] `: di %21x `scdelta''
      = char _dta[_TSdelta] +1.0000000000000X+000
      - char _dta[_TSitrvl] 1
      - char _dta[tis] "`timevar'"
      = char _dta[tis] "month"
      - char _dta[iis] "`panel'"
      = char _dta[iis] "id"
      - }
      - if "`dfltfmt'" == "yes" & bsubstr("`format'", 3, 1) == "c" {
      = if "no" == "yes" & bsubstr("%8.0g", 3, 1) == "c" {
        format `timevar' %tcDDmonCCYY_HH:MM:SS.sss
        }
      - if "`query'" == "" {
      = if "" == "" {
      - Query, panelname(`"`panelname'"') displayindent(`displayindent') panell
> abel(`panellabel') tsvarlabel(`tsvarlabel')
      = Query, panelname(`""') displayindent(0) panellabel() tsvarlabel()
        ------------------------------------------------- begin tsset.Query ---
        - syntax [, PANELNAME(string) DISPLAYINDENT(integer 0) PANELLABEL(strin
> g) TSVARLABEL(string) ]
        - local timevar `_dta[_TStvar]'
        = local timevar month
        - local panel `_dta[_TSpanel]'
        = local panel id
        - local delta : char _dta[_TSdelta]
        - if _N > 1 {
        - if "`panel'" == "" {
        = if "id" == "" {
          qui count if `timevar'-`timevar'[_n-1] != `delta' & `timevar' != . in
>  2/l
          local gaps = r(N)
          }
        - else {
        - qui count if `timevar'-`timevar'[_n-1] != `delta' & `timevar' != . & 
> `panel' == `panel'[_n-1] in 2/l
        = qui count if month-month[_n-1] != +1.0000000000000X+000 & month != . 
> & id == id[_n-1] in 2/l
        - local gaps = r(N)
        - }
        - }
        - else {
          local gaps 0
          }
        - if "`panel'" == "" {
        = if "id" == "" {
          tempvar seenvar
          local t0 = `timevar'[1]
          gen long `seenvar' = sum(`timevar' != .)
          local t1 = `timevar'[`seenvar'[_N]]
          }
        - else {
        - tempname firstob lastob
        - qui gen byte `firstob' = `panel' != . & `panel' != `panel'[_n-1]
        = qui gen byte __000004 = id != . & id != id[_n-1]
        - qui sum `timevar' if `firstob', meanonly
        = qui sum month if __000004, meanonly
        - local t0 = r(min)
        - qui gen byte `lastob' = `panel' != . & `timevar' != . & (`panel' != `
> panel'[_n+1] | `timevar'[_n+1] == .)
        = qui gen byte __000005 = id != . & month != . & (id != id[_n+1] | mont
> h[_n+1] == .)
        - qui sum `timevar' if `lastob', meanonly
        = qui sum month if __000005, meanonly
        - local t1 = r(max)
        - local npanel = r(N)
        - sum `panel', meanonly
        = sum id, meanonly
        - ret scalar imin = r(min)
        - ret scalar imax = r(max)
        - tempvar tmin tmax tcount
        - qui by `panel' : gen double `tcount' = _N if !missing(`timevar')
        = qui by id : gen double __000008 = _N if !missing(month)
        - capture assert `tcount' == `tcount'[1]
        = capture assert __000008 == __000008[1]
        - if c(rc) {
        - local bal unbalanced
        - }
        - else {
          CheckStrongBal `npanel' `panel' `timevar'
          if r(rc) {
          local bal "weakly balanced"
          }
          else {
          local bal "strongly balanced"
          }
          }
        - if `"`panelname'"' == "" {
        = if `""' == "" {
        - local panelname "panel"
        - local col = 8 + `displayindent'
        = local col = 8 + 0
        - }
        - else {
          local col = 13 - strlen(`"`panelname'"') + `displayindent'
          }
        - if `"`panellabel'"' != "" {
        = if `""' != "" {
          local plab `"`panellabel'"'
          }
        - else {
        - local plab `"`panel'"'
        = local plab `"id"'
        - }
        - di in gr _col(`col') `"`panelname' variable:  "' in ye "`plab' (`bal'
> )"
        = di in gr _col(8) `"panel variable:  "' in ye "id (unbalanced)"
       panel variable:  id (unbalanced)
        - return local balanced "`bal'"
        = return local balanced "unbalanced"
        - }
        - local fmt : format `timevar'
        = local fmt : format month
        - local t0s = trim(string(`t0', "`fmt'"))
        = local t0s = trim(string(1, "%8.0g"))
        - local t1s = trim(string(`t1', "`fmt'"))
        = local t1s = trim(string(48, "%8.0g"))
        - local col = 9 + `displayindent'
        = local col = 9 + 0
        - di in gr _col(`col') "time variable:  " _c
        = di in gr _col(9) "time variable:  " _c
        time variable:          - local i 1
        - if `"`tsvarlabel'"' != "" {
        = if `""' != "" {
          local line`i' `=abbrev("`tsvarlabel'",13)',
          }
        - else {
        - local line`i' `=abbrev("`timevar'",13)',
        = local line1 month,
        - }
        - local linelen = length(`"`line`i''"')
        = local linelen = length(`"month,"')
        - if (`linelen' + length(`"`t0s'"')) < 53 {
        = if (6 + length(`"1"')) < 53 {
        - local line`i' `line`i'' `t0s'
        = local line1 month, 1
        - local linelen = length(`"`line`i''"')
        = local linelen = length(`"month, 1"')
        - }
        - else {
          local `++i'
          local line`i' `t0s'
          local linelen = length(`"`line`i''"')
          }
        - if (`linelen' + 3) < 53 {
        = if (8 + 3) < 53 {
        - local line`i' `"`line`i'' to"'
        = local line1 `"month, 1 to"'
        - local linelen = length(`"`line`i''"')
        = local linelen = length(`"month, 1 to"')
        - }
        - else {
          local `++i'
          local line`i' "to"
          local linelen = 3
          }
        - if (`linelen' + length(`"`t1s'"')) < 53 {
        = if (11 + length(`"48"')) < 53 {
        - local line`i' `line`i'' `t1s'
        = local line1 month, 1 to 48
        - local linelen = length(`"`line`i''"')
        = local linelen = length(`"month, 1 to 48"')
        - }
        - else {
          local `++i'
          local line`i' `t1s'
          local linelen = length(`"`t1s'"')
          }
        - if `gaps' > 0 {
        = if 0 > 0 {
          if `gaps' == 1 {
          local note "but with a gap"
          }
          else {
          local note "but with gaps"
          }
          if (`linelen' + length(`", `note'"')) < 53 {
          local line`i' `line`i'', `note'
          }
          else {
          local `++i'
          local line`i' `note'
          }
          }
        - forvalues j = 1/`i' {
        = forvalues j = 1/1 {
        - local col = 25 + `displayindent'
        = local col = 25 + 0
        - di in ye _col(`col') `"`line`j''"'
        = di in ye _col(25) `"month, 1 to 48"'
                        month, 1 to 48
        - }
        - tempname fancyd
        - mata:_TS_p_delta2str("`fancyd'", `=`delta'', "`timevar'")
        = mata:_TS_p_delta2str("__000009", 1, "month")
        - local col = 17 + `displayindent'
        = local col = 17 + 0
        - di in gr _col(`col') "delta:  " in ye "`=`fancyd''"
        = di in gr _col(17) "delta:  " in ye "1 unit"
                delta:  1 unit
        - if `gaps' > 0 {
        = if 0 > 0 {
          ret scalar gaps = 1
          }
        - else {
        - ret scalar gaps = 0
        - }
        - ret scalar tmin = `t0'
        = ret scalar tmin = 1
        - ret scalar tmax = `t1'
        = ret scalar tmax = 48
        - ret scalar tdelta = `delta'
        = ret scalar tdelta = +1.0000000000000X+000
        - ret local tmins `t0s'
        = ret local tmins 1
        - ret local tmaxs `t1s'
        = ret local tmaxs 48
        - ret local tdeltas "`=`fancyd''"
        = ret local tdeltas "1 unit"
        --------------------------------------------------- end tsset.Query ---
      - ret add
      - }
      - else {
        ret scalar tdelta = `: char _dta[_TSdelta]'
        }
      - if "`dfltfmt'" == "yes" & bsubstr("`format'", 3, 1) == "c" {
      = if "no" == "yes" & bsubstr("%8.0g", 3, 1) == "c" {
        format `timevar' %tc
        }
      - local fmt : format `timevar'
      = local fmt : format month
      - return local tsfmt `fmt'
      = return local tsfmt %8.0g
      - return local unit1 = bsubstr("`fmt'", 3, 1)
      = return local unit1 = bsubstr("%8.0g", 3, 1)
      - Period per : "`period'" `return(unit1)'
      = Period per : "" .
        ------------------------------------------------ begin tsset.Period ---
        - args newper colon per unit1
        - if "`per'" == "" {
        = if "" == "" {
        - if "`unit1'" != "" {
        = if "." != "" {
        - local c "clocktime"
        - local g "generic"
        - local d "daily"
        - local w "weekly"
        - local m "monthly"
        - local q "quarterly"
        - local h "halfyearly"
        - local y "yearly"
        - capture c_local `newper' ``unit1''
        = capture c_local per 
        - }
        - else {
          c_local `newper' "generic"
          }
        - }
        - else {
          c_local `newper' `per'
          }
        -------------------------------------------------- end tsset.Period ---
      - return local unit `per'
      = return local unit 
      - ret local timevar "`timevar'"
      = ret local timevar "month"
      - ret local panelvar "`panel'"
      = ret local panelvar "id"
      ----------------------------------------------------------- end tsset ---
    - ret add
    - exit
    ------------------------------------------------------------- end tsset ---
  - local id `r(panelvar)'
  = local id id
  - local max_delta = `r(tmax)' - `r(tmin)'
  = local max_delta = 48 - 1
  - if "`window'" == ""{
  = if "-20 30" == ""{
    local first_period = -`max_delta'
    local last_period = `max_delta'
    }
  - }
  - else {
    qui: su `e_t'
    local max_delta = max(abs(r(min)),r(max))
    if "`window'" == ""{
    local first_period = r(min)
    local last_period = r(max)
    }
    }
  - if "`estimate_reference'" != "" local omitted_threshold = - 1
  = if "estimate_reference" != "" local omitted_threshold = - 1
  - else local omitted_threshold = - `period_length' - 1
  = else local omitted_threshold = - 1 - 1
  - if "`by'" != "" local pass_by = "by(`by')"
  = if "male" != "" local pass_by = "by(male)"
  - local pass_window = "window(`first_period' `last_period')"
  = local pass_window = "window(-20  30)"
  - if "`by'" == "" & "`difference'" != ""{
  = if "male" == "" & "" != ""{
    di as error "Error:" as input "by" as error "is required to use" as input "
> difference"
    exit
    }
  - tokenize `: subinstr local event "," "|" ', parse("|")
  = tokenize to_male_mgr| save, parse("|")
  - local event_name `1'
  = local event_name to_male_mgr
  - if "`3'" != ""{
  = if "save" != ""{
  - tokenize `3'
  = tokenize save
  - foreach arg in 1 2 3{
  - if "``arg''" != ""{
  = if "save" != ""{
  - if inlist("``arg''", "save", "nogen", "replace"){
  = if inlist("save", "save", "nogen", "replace"){
  - local ``arg''_event "``arg''"
  = local save_event "save"
  - }
  - else{
    di as error "``arg'' not a valid sub-option of " as input "event"
    exit
    }
  - }
  - }
  - if "``arg''" != ""{
  = if "" != ""{
    if inlist("``arg''", "save", "nogen", "replace"){
    local ``arg''_event "``arg''"
    }
    else{
    di as error "``arg'' not a valid sub-option of " as input "event"
    exit
    }
    }
  - }
  - if "``arg''" != ""{
  = if "" != ""{
    if inlist("``arg''", "save", "nogen", "replace"){
    local ``arg''_event "``arg''"
    }
    else{
    di as error "``arg'' not a valid sub-option of " as input "event"
    exit
    }
    }
  - }
  - }
  - if "`compare'" != ""{
  = if "" != ""{
    tokenize `: subinstr local compare "," "|" ', parse("|")
    local compare_name `1'
    if "`3'" != ""{
    tokenize `3'
    foreach arg in 1 2 3{
    if "``arg''" != ""{
    if inlist("``arg''", "save", "nogen", "replace"){
    local ``arg''_compare "``arg''"
    }
    else{
    di as error "``arg'' not a valid sub-option of " as input "compare"
    exit
    }
    }
    }
    }
    }
  - foreach ev in "compare" "event"{
  - if "`save_`ev''`nogen_`ev''" == "savenogen"{
  = if "" == "savenogen"{
    di as error "Please select at most one of save and nogen in `ev'."
    exit
    }
  - if "`nogen_`ev''`replace_`ev''" == "nogenreplace"{
  = if "" == "nogenreplace"{
    di as error "Please select at most one of replace and nogen in `ev'."
    exit
    }
  - }
  - if "`save_`ev''`nogen_`ev''" == "savenogen"{
  = if "save" == "savenogen"{
    di as error "Please select at most one of save and nogen in `ev'."
    exit
    }
  - if "`nogen_`ev''`replace_`ev''" == "nogenreplace"{
  = if "" == "nogenreplace"{
    di as error "Please select at most one of replace and nogen in `ev'."
    exit
    }
  - }
  - if "`save_compare'" == "save" & "`save_event'" == "" local ev_list compare 
> event
  = if "" == "save" & "save" == "" local ev_list compare event
  - else local ev_list event compare
  - if "`save_compare'`save_event'" == "" preserve
  = if "save" == "" preserve
  - if "`save_compare'`save_event'" == "savesave"{
  = if "save" == "savesave"{
    local save_compare saveLater
    local save_event saveLater
    }
  - local reg_weights
  - if "`exp'" != "" & "`weight'" !="" local reg_weights "[`weight'=`exp']"
  = if "" != "" & "" !="" local reg_weights "[=]"
  - else if "`exp'" != "" local reg_weights "[aw=`exp']"
  = else if "" != "" local reg_weights "[aw=]"
  - local lags
  - local leads
  - local L_absorb
  - local F_absorb
  - local endpoints
  - local e_t_name `e_t'
  = local e_t_name 
  - if !missing("`e_t'") local ev_list "e_t"
  = if !missing("") local ev_list "e_t"
  - foreach ev of local ev_list{
  - if "``ev'_name'" == "" continue
  = if "to_male_mgr" == "" continue
  - forvalues i = 0/`max_delta'{
  = forvalues i = 0/47{
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L0_to_male_mgr =  == 0
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L0_to_male_mgr = L0.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 0 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L0_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L1_to_male_mgr =  == 1
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L1_to_male_mgr = L1.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 1 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L1_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L2_to_male_mgr =  == 2
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L2_to_male_mgr = L2.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 2 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L2_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L3_to_male_mgr =  == 3
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L3_to_male_mgr = L3.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 3 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L3_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L4_to_male_mgr =  == 4
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L4_to_male_mgr = L4.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 4 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L4_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L5_to_male_mgr =  == 5
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L5_to_male_mgr = L5.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 5 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L5_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L6_to_male_mgr =  == 6
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L6_to_male_mgr = L6.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 6 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L6_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L7_to_male_mgr =  == 7
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L7_to_male_mgr = L7.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 7 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L7_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L8_to_male_mgr =  == 8
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L8_to_male_mgr = L8.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 8 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L8_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L9_to_male_mgr =  == 9
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L9_to_male_mgr = L9.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 9 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_
> to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr
>  i.male#c.L9_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L9_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L10_to_male_mgr =  == 10
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L10_to_male_mgr = L10.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 10 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_
> to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr
>  i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L10_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L11_to_male_mgr =  == 11
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L11_to_male_mgr = L11.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 11 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_
> to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr 
> L11_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr
>  i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr L11_to_male
> _mgr i.male#c.L11_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L11_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L12_to_male_mgr =  == 12
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L12_to_male_mgr = L12.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 12 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_
> to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr 
> L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr
>  i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr L11_to_male
> _mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L12_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L13_to_male_mgr =  == 13
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L13_to_male_mgr = L13.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 13 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_
> to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr 
> L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male
> _mgr L13_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr
>  i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr L11_to_male
> _mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male_mgr L13_to
> _male_mgr i.male#c.L13_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L13_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L14_to_male_mgr =  == 14
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L14_to_male_mgr = L14.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 14 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_
> to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr 
> L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male
> _mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr
>  i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr L11_to_male
> _mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male_mgr L13_to
> _male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L14_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L15_to_male_mgr =  == 15
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L15_to_male_mgr = L15.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 15 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_
> to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr 
> L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male
> _mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to
> _male_mgr L15_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr
>  i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr L11_to_male
> _mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male_mgr L13_to
> _male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to_male_mgr L
> 15_to_male_mgr i.male#c.L15_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L15_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L16_to_male_mgr =  == 16
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L16_to_male_mgr = L16.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 16 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_
> to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr 
> L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male
> _mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to
> _male_mgr L15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr
>  i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr L11_to_male
> _mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male_mgr L13_to
> _male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to_male_mgr L
> 15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L16_to_male_
> mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L16_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L17_to_male_mgr =  == 17
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L17_to_male_mgr = L17.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 17 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_
> to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr 
> L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male
> _mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to
> _male_mgr L15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L
> 16_to_male_mgr L17_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr
>  i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr L11_to_male
> _mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male_mgr L13_to
> _male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to_male_mgr L
> 15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L16_to_male_
> mgr L17_to_male_mgr i.male#c.L17_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L17_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L18_to_male_mgr =  == 18
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L18_to_male_mgr = L18.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 18 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_
> to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr 
> L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male
> _mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to
> _male_mgr L15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L
> 16_to_male_mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr
>  i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr L11_to_male
> _mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male_mgr L13_to
> _male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to_male_mgr L
> 15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L16_to_male_
> mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.male#c.L18_to_
> male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L18_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L19_to_male_mgr =  == 19
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L19_to_male_mgr = L19.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 19 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_
> to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr 
> L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male
> _mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to
> _male_mgr L15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L
> 16_to_male_mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.mal
> e#c.L18_to_male_mgr L19_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr
>  i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr L11_to_male
> _mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male_mgr L13_to
> _male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to_male_mgr L
> 15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L16_to_male_
> mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.male#c.L18_to_
> male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L19_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L20_to_male_mgr =  == 20
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L20_to_male_mgr = L20.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 20 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_
> to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr 
> L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male
> _mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to
> _male_mgr L15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L
> 16_to_male_mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.mal
> e#c.L18_to_male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr L20_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr
>  i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr L11_to_male
> _mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male_mgr L13_to
> _male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to_male_mgr L
> 15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L16_to_male_
> mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.male#c.L18_to_
> male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr L20_to_male_mgr i.male#c.L2
> 0_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L20_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L21_to_male_mgr =  == 21
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L21_to_male_mgr = L21.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 21 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_
> to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr 
> L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male
> _mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to
> _male_mgr L15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L
> 16_to_male_mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.mal
> e#c.L18_to_male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr L20_to_male_mgr 
> i.male#c.L20_to_male_mgr L21_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr
>  i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr L11_to_male
> _mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male_mgr L13_to
> _male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to_male_mgr L
> 15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L16_to_male_
> mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.male#c.L18_to_
> male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr L20_to_male_mgr i.male#c.L2
> 0_to_male_mgr L21_to_male_mgr i.male#c.L21_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L21_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L22_to_male_mgr =  == 22
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L22_to_male_mgr = L22.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 22 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_
> to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr 
> L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male
> _mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to
> _male_mgr L15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L
> 16_to_male_mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.mal
> e#c.L18_to_male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr L20_to_male_mgr 
> i.male#c.L20_to_male_mgr L21_to_male_mgr i.male#c.L21_to_male_mgr L22_to_male
> _mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr
>  i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr L11_to_male
> _mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male_mgr L13_to
> _male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to_male_mgr L
> 15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L16_to_male_
> mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.male#c.L18_to_
> male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr L20_to_male_mgr i.male#c.L2
> 0_to_male_mgr L21_to_male_mgr i.male#c.L21_to_male_mgr L22_to_male_mgr i.male
> #c.L22_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L22_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L23_to_male_mgr =  == 23
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L23_to_male_mgr = L23.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 23 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_
> to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr 
> L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male
> _mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to
> _male_mgr L15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L
> 16_to_male_mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.mal
> e#c.L18_to_male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr L20_to_male_mgr 
> i.male#c.L20_to_male_mgr L21_to_male_mgr i.male#c.L21_to_male_mgr L22_to_male
> _mgr i.male#c.L22_to_male_mgr L23_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr
>  i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr L11_to_male
> _mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male_mgr L13_to
> _male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to_male_mgr L
> 15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L16_to_male_
> mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.male#c.L18_to_
> male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr L20_to_male_mgr i.male#c.L2
> 0_to_male_mgr L21_to_male_mgr i.male#c.L21_to_male_mgr L22_to_male_mgr i.male
> #c.L22_to_male_mgr L23_to_male_mgr i.male#c.L23_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L23_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L24_to_male_mgr =  == 24
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L24_to_male_mgr = L24.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 24 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_
> to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr 
> L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male
> _mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to
> _male_mgr L15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L
> 16_to_male_mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.mal
> e#c.L18_to_male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr L20_to_male_mgr 
> i.male#c.L20_to_male_mgr L21_to_male_mgr i.male#c.L21_to_male_mgr L22_to_male
> _mgr i.male#c.L22_to_male_mgr L23_to_male_mgr i.male#c.L23_to_male_mgr L24_to
> _male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr
>  i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr L11_to_male
> _mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male_mgr L13_to
> _male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to_male_mgr L
> 15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L16_to_male_
> mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.male#c.L18_to_
> male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr L20_to_male_mgr i.male#c.L2
> 0_to_male_mgr L21_to_male_mgr i.male#c.L21_to_male_mgr L22_to_male_mgr i.male
> #c.L22_to_male_mgr L23_to_male_mgr i.male#c.L23_to_male_mgr L24_to_male_mgr i
> .male#c.L24_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L24_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L25_to_male_mgr =  == 25
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L25_to_male_mgr = L25.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 25 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_
> to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr 
> L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male
> _mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to
> _male_mgr L15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L
> 16_to_male_mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.mal
> e#c.L18_to_male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr L20_to_male_mgr 
> i.male#c.L20_to_male_mgr L21_to_male_mgr i.male#c.L21_to_male_mgr L22_to_male
> _mgr i.male#c.L22_to_male_mgr L23_to_male_mgr i.male#c.L23_to_male_mgr L24_to
> _male_mgr i.male#c.L24_to_male_mgr L25_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr
>  i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr L11_to_male
> _mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male_mgr L13_to
> _male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to_male_mgr L
> 15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L16_to_male_
> mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.male#c.L18_to_
> male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr L20_to_male_mgr i.male#c.L2
> 0_to_male_mgr L21_to_male_mgr i.male#c.L21_to_male_mgr L22_to_male_mgr i.male
> #c.L22_to_male_mgr L23_to_male_mgr i.male#c.L23_to_male_mgr L24_to_male_mgr i
> .male#c.L24_to_male_mgr L25_to_male_mgr i.male#c.L25_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L25_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L26_to_male_mgr =  == 26
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L26_to_male_mgr = L26.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 26 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_
> to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr 
> L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male
> _mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to
> _male_mgr L15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L
> 16_to_male_mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.mal
> e#c.L18_to_male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr L20_to_male_mgr 
> i.male#c.L20_to_male_mgr L21_to_male_mgr i.male#c.L21_to_male_mgr L22_to_male
> _mgr i.male#c.L22_to_male_mgr L23_to_male_mgr i.male#c.L23_to_male_mgr L24_to
> _male_mgr i.male#c.L24_to_male_mgr L25_to_male_mgr i.male#c.L25_to_male_mgr L
> 26_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr
>  i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr L11_to_male
> _mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male_mgr L13_to
> _male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to_male_mgr L
> 15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L16_to_male_
> mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.male#c.L18_to_
> male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr L20_to_male_mgr i.male#c.L2
> 0_to_male_mgr L21_to_male_mgr i.male#c.L21_to_male_mgr L22_to_male_mgr i.male
> #c.L22_to_male_mgr L23_to_male_mgr i.male#c.L23_to_male_mgr L24_to_male_mgr i
> .male#c.L24_to_male_mgr L25_to_male_mgr i.male#c.L25_to_male_mgr L26_to_male_
> mgr i.male#c.L26_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L26_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L27_to_male_mgr =  == 27
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L27_to_male_mgr = L27.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 27 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_
> to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr 
> L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male
> _mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to
> _male_mgr L15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L
> 16_to_male_mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.mal
> e#c.L18_to_male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr L20_to_male_mgr 
> i.male#c.L20_to_male_mgr L21_to_male_mgr i.male#c.L21_to_male_mgr L22_to_male
> _mgr i.male#c.L22_to_male_mgr L23_to_male_mgr i.male#c.L23_to_male_mgr L24_to
> _male_mgr i.male#c.L24_to_male_mgr L25_to_male_mgr i.male#c.L25_to_male_mgr L
> 26_to_male_mgr i.male#c.L26_to_male_mgr L27_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr
>  i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr L11_to_male
> _mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male_mgr L13_to
> _male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to_male_mgr L
> 15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L16_to_male_
> mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.male#c.L18_to_
> male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr L20_to_male_mgr i.male#c.L2
> 0_to_male_mgr L21_to_male_mgr i.male#c.L21_to_male_mgr L22_to_male_mgr i.male
> #c.L22_to_male_mgr L23_to_male_mgr i.male#c.L23_to_male_mgr L24_to_male_mgr i
> .male#c.L24_to_male_mgr L25_to_male_mgr i.male#c.L25_to_male_mgr L26_to_male_
> mgr i.male#c.L26_to_male_mgr L27_to_male_mgr i.male#c.L27_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L27_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L28_to_male_mgr =  == 28
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L28_to_male_mgr = L28.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 28 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_
> to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr 
> L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male
> _mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to
> _male_mgr L15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L
> 16_to_male_mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.mal
> e#c.L18_to_male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr L20_to_male_mgr 
> i.male#c.L20_to_male_mgr L21_to_male_mgr i.male#c.L21_to_male_mgr L22_to_male
> _mgr i.male#c.L22_to_male_mgr L23_to_male_mgr i.male#c.L23_to_male_mgr L24_to
> _male_mgr i.male#c.L24_to_male_mgr L25_to_male_mgr i.male#c.L25_to_male_mgr L
> 26_to_male_mgr i.male#c.L26_to_male_mgr L27_to_male_mgr i.male#c.L27_to_male_
> mgr L28_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr
>  i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr L11_to_male
> _mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male_mgr L13_to
> _male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to_male_mgr L
> 15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L16_to_male_
> mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.male#c.L18_to_
> male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr L20_to_male_mgr i.male#c.L2
> 0_to_male_mgr L21_to_male_mgr i.male#c.L21_to_male_mgr L22_to_male_mgr i.male
> #c.L22_to_male_mgr L23_to_male_mgr i.male#c.L23_to_male_mgr L24_to_male_mgr i
> .male#c.L24_to_male_mgr L25_to_male_mgr i.male#c.L25_to_male_mgr L26_to_male_
> mgr i.male#c.L26_to_male_mgr L27_to_male_mgr i.male#c.L27_to_male_mgr L28_to_
> male_mgr i.male#c.L28_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L28_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L29_to_male_mgr =  == 29
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L29_to_male_mgr = L29.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 29 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_
> to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr 
> L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male
> _mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to
> _male_mgr L15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L
> 16_to_male_mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.mal
> e#c.L18_to_male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr L20_to_male_mgr 
> i.male#c.L20_to_male_mgr L21_to_male_mgr i.male#c.L21_to_male_mgr L22_to_male
> _mgr i.male#c.L22_to_male_mgr L23_to_male_mgr i.male#c.L23_to_male_mgr L24_to
> _male_mgr i.male#c.L24_to_male_mgr L25_to_male_mgr i.male#c.L25_to_male_mgr L
> 26_to_male_mgr i.male#c.L26_to_male_mgr L27_to_male_mgr i.male#c.L27_to_male_
> mgr L28_to_male_mgr i.male#c.L28_to_male_mgr L29_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr
>  i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr L11_to_male
> _mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male_mgr L13_to
> _male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to_male_mgr L
> 15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L16_to_male_
> mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.male#c.L18_to_
> male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr L20_to_male_mgr i.male#c.L2
> 0_to_male_mgr L21_to_male_mgr i.male#c.L21_to_male_mgr L22_to_male_mgr i.male
> #c.L22_to_male_mgr L23_to_male_mgr i.male#c.L23_to_male_mgr L24_to_male_mgr i
> .male#c.L24_to_male_mgr L25_to_male_mgr i.male#c.L25_to_male_mgr L26_to_male_
> mgr i.male#c.L26_to_male_mgr L27_to_male_mgr i.male#c.L27_to_male_mgr L28_to_
> male_mgr i.male#c.L28_to_male_mgr L29_to_male_mgr i.male#c.L29_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L29_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L30_to_male_mgr =  == 30
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L30_to_male_mgr = L30.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 30 <=  30{
  - if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
  = if "male" == "" local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_m
> ale_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_
> male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to
> _male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_t
> o_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_
> to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr 
> L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male
> _mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to
> _male_mgr L15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L
> 16_to_male_mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.mal
> e#c.L18_to_male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr L20_to_male_mgr 
> i.male#c.L20_to_male_mgr L21_to_male_mgr i.male#c.L21_to_male_mgr L22_to_male
> _mgr i.male#c.L22_to_male_mgr L23_to_male_mgr i.male#c.L23_to_male_mgr L24_to
> _male_mgr i.male#c.L24_to_male_mgr L25_to_male_mgr i.male#c.L25_to_male_mgr L
> 26_to_male_mgr i.male#c.L26_to_male_mgr L27_to_male_mgr i.male#c.L27_to_male_
> mgr L28_to_male_mgr i.male#c.L28_to_male_mgr L29_to_male_mgr i.male#c.L29_to_
> male_mgr L30_to_male_mgr"
  - else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
  = else local lags " L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.m
> ale#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.
> male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i
> .male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr 
> i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr
>  i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr L11_to_male
> _mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male_mgr L13_to
> _male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to_male_mgr L
> 15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L16_to_male_
> mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.male#c.L18_to_
> male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr L20_to_male_mgr i.male#c.L2
> 0_to_male_mgr L21_to_male_mgr i.male#c.L21_to_male_mgr L22_to_male_mgr i.male
> #c.L22_to_male_mgr L23_to_male_mgr i.male#c.L23_to_male_mgr L24_to_male_mgr i
> .male#c.L24_to_male_mgr L25_to_male_mgr i.male#c.L25_to_male_mgr L26_to_male_
> mgr i.male#c.L26_to_male_mgr L27_to_male_mgr i.male#c.L27_to_male_mgr L28_to_
> male_mgr i.male#c.L28_to_male_mgr L29_to_male_mgr i.male#c.L29_to_male_mgr L3
> 0_to_male_mgr i.male#c.L30_to_male_mgr"
  - }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L30_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L31_to_male_mgr =  == 31
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L31_to_male_mgr = L31.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 31 <=  30{
    if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
    else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
    }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L31_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L32_to_male_mgr =  == 32
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L32_to_male_mgr = L32.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 32 <=  30{
    if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
    else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
    }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L31_to_male_mgr  L32_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L33_to_male_mgr =  == 33
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L33_to_male_mgr = L33.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 33 <=  30{
    if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
    else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
    }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L31_to_male_mgr  L32_to_male_mgr  L33_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L34_to_male_mgr =  == 34
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L34_to_male_mgr = L34.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 34 <=  30{
    if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
    else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
    }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L31_to_male_mgr  L32_to_male_mgr  L33_to_male_mgr  L3
> 4_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L35_to_male_mgr =  == 35
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L35_to_male_mgr = L35.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 35 <=  30{
    if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
    else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
    }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L31_to_male_mgr  L32_to_male_mgr  L33_to_male_mgr  L3
> 4_to_male_mgr  L35_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L36_to_male_mgr =  == 36
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L36_to_male_mgr = L36.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 36 <=  30{
    if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
    else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
    }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L31_to_male_mgr  L32_to_male_mgr  L33_to_male_mgr  L3
> 4_to_male_mgr  L35_to_male_mgr  L36_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L37_to_male_mgr =  == 37
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L37_to_male_mgr = L37.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 37 <=  30{
    if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
    else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
    }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L31_to_male_mgr  L32_to_male_mgr  L33_to_male_mgr  L3
> 4_to_male_mgr  L35_to_male_mgr  L36_to_male_mgr  L37_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L38_to_male_mgr =  == 38
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L38_to_male_mgr = L38.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 38 <=  30{
    if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
    else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
    }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L31_to_male_mgr  L32_to_male_mgr  L33_to_male_mgr  L3
> 4_to_male_mgr  L35_to_male_mgr  L36_to_male_mgr  L37_to_male_mgr  L38_to_male
> _mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L39_to_male_mgr =  == 39
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L39_to_male_mgr = L39.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 39 <=  30{
    if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
    else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
    }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L31_to_male_mgr  L32_to_male_mgr  L33_to_male_mgr  L3
> 4_to_male_mgr  L35_to_male_mgr  L36_to_male_mgr  L37_to_male_mgr  L38_to_male
> _mgr  L39_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L40_to_male_mgr =  == 40
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L40_to_male_mgr = L40.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 40 <=  30{
    if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
    else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
    }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L31_to_male_mgr  L32_to_male_mgr  L33_to_male_mgr  L3
> 4_to_male_mgr  L35_to_male_mgr  L36_to_male_mgr  L37_to_male_mgr  L38_to_male
> _mgr  L39_to_male_mgr  L40_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L41_to_male_mgr =  == 41
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L41_to_male_mgr = L41.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 41 <=  30{
    if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
    else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
    }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L31_to_male_mgr  L32_to_male_mgr  L33_to_male_mgr  L3
> 4_to_male_mgr  L35_to_male_mgr  L36_to_male_mgr  L37_to_male_mgr  L38_to_male
> _mgr  L39_to_male_mgr  L40_to_male_mgr  L41_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L42_to_male_mgr =  == 42
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L42_to_male_mgr = L42.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 42 <=  30{
    if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
    else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
    }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L31_to_male_mgr  L32_to_male_mgr  L33_to_male_mgr  L3
> 4_to_male_mgr  L35_to_male_mgr  L36_to_male_mgr  L37_to_male_mgr  L38_to_male
> _mgr  L39_to_male_mgr  L40_to_male_mgr  L41_to_male_mgr  L42_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L43_to_male_mgr =  == 43
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L43_to_male_mgr = L43.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 43 <=  30{
    if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
    else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
    }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L31_to_male_mgr  L32_to_male_mgr  L33_to_male_mgr  L3
> 4_to_male_mgr  L35_to_male_mgr  L36_to_male_mgr  L37_to_male_mgr  L38_to_male
> _mgr  L39_to_male_mgr  L40_to_male_mgr  L41_to_male_mgr  L42_to_male_mgr  L43
> _to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L44_to_male_mgr =  == 44
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L44_to_male_mgr = L44.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 44 <=  30{
    if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
    else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
    }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L31_to_male_mgr  L32_to_male_mgr  L33_to_male_mgr  L3
> 4_to_male_mgr  L35_to_male_mgr  L36_to_male_mgr  L37_to_male_mgr  L38_to_male
> _mgr  L39_to_male_mgr  L40_to_male_mgr  L41_to_male_mgr  L42_to_male_mgr  L43
> _to_male_mgr  L44_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L45_to_male_mgr =  == 45
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L45_to_male_mgr = L45.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 45 <=  30{
    if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
    else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
    }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L31_to_male_mgr  L32_to_male_mgr  L33_to_male_mgr  L3
> 4_to_male_mgr  L35_to_male_mgr  L36_to_male_mgr  L37_to_male_mgr  L38_to_male
> _mgr  L39_to_male_mgr  L40_to_male_mgr  L41_to_male_mgr  L42_to_male_mgr  L43
> _to_male_mgr  L44_to_male_mgr  L45_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L46_to_male_mgr =  == 46
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L46_to_male_mgr = L46.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 46 <=  30{
    if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
    else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
    }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L31_to_male_mgr  L32_to_male_mgr  L33_to_male_mgr  L3
> 4_to_male_mgr  L35_to_male_mgr  L36_to_male_mgr  L37_to_male_mgr  L38_to_male
> _mgr  L39_to_male_mgr  L40_to_male_mgr  L41_to_male_mgr  L42_to_male_mgr  L43
> _to_male_mgr  L44_to_male_mgr  L45_to_male_mgr  L46_to_male_mgr "
  - }
  - if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
  = if !missing("") gen L47_to_male_mgr =  == 47
  - else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen L47_to_male_mgr = L47.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' <= `last_period'{
  = if 47 <=  30{
    if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
    else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
    }
  - else local L_absorb "`L_absorb' L`i'_``ev'_name' "
  = else local L_absorb " L31_to_male_mgr  L32_to_male_mgr  L33_to_male_mgr  L3
> 4_to_male_mgr  L35_to_male_mgr  L36_to_male_mgr  L37_to_male_mgr  L38_to_male
> _mgr  L39_to_male_mgr  L40_to_male_mgr  L41_to_male_mgr  L42_to_male_mgr  L43
> _to_male_mgr  L44_to_male_mgr  L45_to_male_mgr  L46_to_male_mgr  L47_to_male_
> mgr "
  - }
  - forvalues i = -`max_delta'/`omitted_threshold'{
  = forvalues i = -47/-1{
  - local j = abs(`i')
  = local j = abs(-47)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F47_to_male_mgr =  == -47
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F47_to_male_mgr = F47.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -47 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "  F47_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-46)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F46_to_male_mgr =  == -46
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F46_to_male_mgr = F46.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -46 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "   F47_to_male_mgr F46_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-45)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F45_to_male_mgr =  == -45
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F45_to_male_mgr = F45.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -45 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "    F47_to_male_mgr F46_to_male_mgr F45_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-44)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F44_to_male_mgr =  == -44
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F44_to_male_mgr = F44.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -44 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "     F47_to_male_mgr F46_to_male_mgr F45_to_male_mgr F
> 44_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-43)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F43_to_male_mgr =  == -43
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F43_to_male_mgr = F43.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -43 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "      F47_to_male_mgr F46_to_male_mgr F45_to_male_mgr 
> F44_to_male_mgr F43_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-42)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F42_to_male_mgr =  == -42
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F42_to_male_mgr = F42.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -42 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "       F47_to_male_mgr F46_to_male_mgr F45_to_male_mgr
>  F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-41)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F41_to_male_mgr =  == -41
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F41_to_male_mgr = F41.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -41 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "        F47_to_male_mgr F46_to_male_mgr F45_to_male_mg
> r F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-40)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F40_to_male_mgr =  == -40
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F40_to_male_mgr = F40.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -40 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "         F47_to_male_mgr F46_to_male_mgr F45_to_male_m
> gr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_male_mgr F40_to_mal
> e_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-39)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F39_to_male_mgr =  == -39
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F39_to_male_mgr = F39.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -39 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "          F47_to_male_mgr F46_to_male_mgr F45_to_male_
> mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_male_mgr F40_to_ma
> le_mgr F39_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-38)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F38_to_male_mgr =  == -38
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F38_to_male_mgr = F38.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -38 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "           F47_to_male_mgr F46_to_male_mgr F45_to_male
> _mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_male_mgr F40_to_m
> ale_mgr F39_to_male_mgr F38_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-37)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F37_to_male_mgr =  == -37
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F37_to_male_mgr = F37.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -37 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "            F47_to_male_mgr F46_to_male_mgr F45_to_mal
> e_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_male_mgr F40_to_
> male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-36)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F36_to_male_mgr =  == -36
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F36_to_male_mgr = F36.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -36 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "             F47_to_male_mgr F46_to_male_mgr F45_to_ma
> le_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_male_mgr F40_to
> _male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-35)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F35_to_male_mgr =  == -35
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F35_to_male_mgr = F35.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -35 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "              F47_to_male_mgr F46_to_male_mgr F45_to_m
> ale_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_male_mgr F40_t
> o_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36_to_male_mgr F3
> 5_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-34)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F34_to_male_mgr =  == -34
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F34_to_male_mgr = F34.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -34 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "               F47_to_male_mgr F46_to_male_mgr F45_to_
> male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_male_mgr F40_
> to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36_to_male_mgr F
> 35_to_male_mgr F34_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-33)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F33_to_male_mgr =  == -33
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F33_to_male_mgr = F33.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -33 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                F47_to_male_mgr F46_to_male_mgr F45_to
> _male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_male_mgr F40
> _to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36_to_male_mgr 
> F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-32)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F32_to_male_mgr =  == -32
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F32_to_male_mgr = F32.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -32 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                 F47_to_male_mgr F46_to_male_mgr F45_t
> o_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_male_mgr F4
> 0_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36_to_male_mgr
>  F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-31)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F31_to_male_mgr =  == -31
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F31_to_male_mgr = F31.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -31 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                  F47_to_male_mgr F46_to_male_mgr F45_
> to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_male_mgr F
> 40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36_to_male_mg
> r F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr F31_to_male
> _mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-30)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F30_to_male_mgr =  == -30
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F30_to_male_mgr = F30.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -30 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                   F47_to_male_mgr F46_to_male_mgr F45
> _to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_male_mgr 
> F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36_to_male_m
> gr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr F31_to_mal
> e_mgr F30_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-29)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F29_to_male_mgr =  == -29
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F29_to_male_mgr = F29.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -29 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                    F47_to_male_mgr F46_to_male_mgr F4
> 5_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_male_mgr
>  F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36_to_male_
> mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr F31_to_ma
> le_mgr F30_to_male_mgr F29_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-28)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F28_to_male_mgr =  == -28
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F28_to_male_mgr = F28.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -28 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                     F47_to_male_mgr F46_to_male_mgr F
> 45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_male_mg
> r F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36_to_male
> _mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr F31_to_m
> ale_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-27)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F27_to_male_mgr =  == -27
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F27_to_male_mgr = F27.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -27 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                      F47_to_male_mgr F46_to_male_mgr 
> F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_male_m
> gr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36_to_mal
> e_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr F31_to_
> male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-26)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F26_to_male_mgr =  == -26
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F26_to_male_mgr = F26.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -26 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                       F47_to_male_mgr F46_to_male_mgr
>  F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_male_
> mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36_to_ma
> le_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr F31_to
> _male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_mgr F26
> _to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-25)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F25_to_male_mgr =  == -25
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F25_to_male_mgr = F25.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -25 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                        F47_to_male_mgr F46_to_male_mg
> r F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_male
> _mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36_to_m
> ale_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr F31_t
> o_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_mgr F2
> 6_to_male_mgr F25_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-24)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F24_to_male_mgr =  == -24
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F24_to_male_mgr = F24.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -24 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                         F47_to_male_mgr F46_to_male_m
> gr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_mal
> e_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36_to_
> male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr F31_
> to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_mgr F
> 26_to_male_mgr F25_to_male_mgr F24_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-23)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F23_to_male_mgr =  == -23
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F23_to_male_mgr = F23.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -23 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                          F47_to_male_mgr F46_to_male_
> mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_ma
> le_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36_to
> _male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr F31
> _to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_mgr 
> F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-22)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F22_to_male_mgr =  == -22
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F22_to_male_mgr = F22.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -22 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                           F47_to_male_mgr F46_to_male
> _mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_m
> ale_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36_t
> o_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr F3
> 1_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_mgr
>  F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_male_
> mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-21)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F21_to_male_mgr =  == -21
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F21_to_male_mgr = F21.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -21 >= -20{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                            F47_to_male_mgr F46_to_mal
> e_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_
> male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36_
> to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr F
> 31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_mg
> r F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_male
> _mgr F21_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-20)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F20_to_male_mgr =  == -20
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F20_to_male_mgr = F20.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -20 >= -20{
  - if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
  = if "male" == "" local leads " F20_to_male_mgr"
  - else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
  = else local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr"
  - }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                             F47_to_male_mgr F46_to_ma
> le_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to
> _male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36
> _to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr 
> F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_m
> gr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_mal
> e_mgr F21_to_male_mgr F20_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-19)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F19_to_male_mgr =  == -19
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F19_to_male_mgr = F19.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -19 >= -20{
  - if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
  = if "male" == "" local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_
> to_male_mgr"
  - else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
  = else local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mgr
>  i.male#c.F19_to_male_mgr"
  - }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                             F47_to_male_mgr F46_to_ma
> le_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to
> _male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36
> _to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr 
> F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_m
> gr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_mal
> e_mgr F21_to_male_mgr F19_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-18)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F18_to_male_mgr =  == -18
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F18_to_male_mgr = F18.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -18 >= -20{
  - if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
  = if "male" == "" local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_
> to_male_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr"
  - else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
  = else local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mgr
>  i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr"
  - }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                             F47_to_male_mgr F46_to_ma
> le_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to
> _male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36
> _to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr 
> F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_m
> gr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_mal
> e_mgr F21_to_male_mgr F18_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-17)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F17_to_male_mgr =  == -17
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F17_to_male_mgr = F17.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -17 >= -20{
  - if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
  = if "male" == "" local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_
> to_male_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr
>  F17_to_male_mgr"
  - else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
  = else local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mgr
>  i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F17_to_mal
> e_mgr i.male#c.F17_to_male_mgr"
  - }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                             F47_to_male_mgr F46_to_ma
> le_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to
> _male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36
> _to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr 
> F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_m
> gr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_mal
> e_mgr F21_to_male_mgr F17_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-16)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F16_to_male_mgr =  == -16
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F16_to_male_mgr = F16.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -16 >= -20{
  - if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
  = if "male" == "" local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_
> to_male_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr
>  F17_to_male_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr"
  - else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
  = else local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mgr
>  i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F17_to_mal
> e_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male_mgr"
  - }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                             F47_to_male_mgr F46_to_ma
> le_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to
> _male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36
> _to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr 
> F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_m
> gr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_mal
> e_mgr F21_to_male_mgr F16_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-15)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F15_to_male_mgr =  == -15
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F15_to_male_mgr = F15.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -15 >= -20{
  - if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
  = if "male" == "" local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_
> to_male_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr
>  F17_to_male_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_mal
> e_mgr F15_to_male_mgr"
  - else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
  = else local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mgr
>  i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F17_to_mal
> e_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male_mgr F15_t
> o_male_mgr i.male#c.F15_to_male_mgr"
  - }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                             F47_to_male_mgr F46_to_ma
> le_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to
> _male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36
> _to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr 
> F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_m
> gr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_mal
> e_mgr F21_to_male_mgr F15_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-14)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F14_to_male_mgr =  == -14
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F14_to_male_mgr = F14.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -14 >= -20{
  - if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
  = if "male" == "" local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_
> to_male_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr
>  F17_to_male_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_mal
> e_mgr F15_to_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr"
  - else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
  = else local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mgr
>  i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F17_to_mal
> e_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male_mgr F15_t
> o_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_to_male_mgr"
  - }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                             F47_to_male_mgr F46_to_ma
> le_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to
> _male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36
> _to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr 
> F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_m
> gr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_mal
> e_mgr F21_to_male_mgr F14_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-13)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F13_to_male_mgr =  == -13
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F13_to_male_mgr = F13.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -13 >= -20{
  - if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
  = if "male" == "" local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_
> to_male_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr
>  F17_to_male_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_mal
> e_mgr F15_to_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_t
> o_male_mgr F13_to_male_mgr"
  - else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
  = else local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mgr
>  i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F17_to_mal
> e_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male_mgr F15_t
> o_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_to_male_mgr 
> F13_to_male_mgr i.male#c.F13_to_male_mgr"
  - }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                             F47_to_male_mgr F46_to_ma
> le_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to
> _male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36
> _to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr 
> F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_m
> gr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_mal
> e_mgr F21_to_male_mgr F13_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-12)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F12_to_male_mgr =  == -12
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F12_to_male_mgr = F12.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -12 >= -20{
  - if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
  = if "male" == "" local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_
> to_male_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr
>  F17_to_male_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_mal
> e_mgr F15_to_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_t
> o_male_mgr F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr"
  - else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
  = else local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mgr
>  i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F17_to_mal
> e_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male_mgr F15_t
> o_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_to_male_mgr 
> F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.F12_to_male
> _mgr"
  - }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                             F47_to_male_mgr F46_to_ma
> le_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to
> _male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36
> _to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr 
> F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_m
> gr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_mal
> e_mgr F21_to_male_mgr F12_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-11)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F11_to_male_mgr =  == -11
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F11_to_male_mgr = F11.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -11 >= -20{
  - if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
  = if "male" == "" local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_
> to_male_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr
>  F17_to_male_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_mal
> e_mgr F15_to_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_t
> o_male_mgr F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.
> F12_to_male_mgr F11_to_male_mgr"
  - else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
  = else local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mgr
>  i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F17_to_mal
> e_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male_mgr F15_t
> o_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_to_male_mgr 
> F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.F12_to_male
> _mgr F11_to_male_mgr i.male#c.F11_to_male_mgr"
  - }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                             F47_to_male_mgr F46_to_ma
> le_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to
> _male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36
> _to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr 
> F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_m
> gr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_mal
> e_mgr F21_to_male_mgr F11_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-10)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F10_to_male_mgr =  == -10
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F10_to_male_mgr = F10.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -10 >= -20{
  - if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
  = if "male" == "" local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_
> to_male_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr
>  F17_to_male_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_mal
> e_mgr F15_to_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_t
> o_male_mgr F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.
> F12_to_male_mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr"
  - else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
  = else local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mgr
>  i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F17_to_mal
> e_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male_mgr F15_t
> o_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_to_male_mgr 
> F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.F12_to_male
> _mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.male#c.F10_to
> _male_mgr"
  - }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                             F47_to_male_mgr F46_to_ma
> le_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to
> _male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36
> _to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr 
> F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_m
> gr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_mal
> e_mgr F21_to_male_mgr F10_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-9)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F9_to_male_mgr =  == -9
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F9_to_male_mgr = F9.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -9 >= -20{
  - if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
  = if "male" == "" local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_
> to_male_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr
>  F17_to_male_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_mal
> e_mgr F15_to_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_t
> o_male_mgr F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.
> F12_to_male_mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.ma
> le#c.F10_to_male_mgr F9_to_male_mgr"
  - else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
  = else local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mgr
>  i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F17_to_mal
> e_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male_mgr F15_t
> o_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_to_male_mgr 
> F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.F12_to_male
> _mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.male#c.F10_to
> _male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr"
  - }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                             F47_to_male_mgr F46_to_ma
> le_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to
> _male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36
> _to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr 
> F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_m
> gr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_mal
> e_mgr F21_to_male_mgr F9_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-8)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F8_to_male_mgr =  == -8
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F8_to_male_mgr = F8.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -8 >= -20{
  - if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
  = if "male" == "" local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_
> to_male_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr
>  F17_to_male_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_mal
> e_mgr F15_to_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_t
> o_male_mgr F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.
> F12_to_male_mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.ma
> le#c.F10_to_male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr"
  - else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
  = else local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mgr
>  i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F17_to_mal
> e_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male_mgr F15_t
> o_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_to_male_mgr 
> F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.F12_to_male
> _mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.male#c.F10_to
> _male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.male#c.F8_t
> o_male_mgr"
  - }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                             F47_to_male_mgr F46_to_ma
> le_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to
> _male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36
> _to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr 
> F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_m
> gr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_mal
> e_mgr F21_to_male_mgr F8_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-7)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F7_to_male_mgr =  == -7
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F7_to_male_mgr = F7.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -7 >= -20{
  - if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
  = if "male" == "" local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_
> to_male_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr
>  F17_to_male_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_mal
> e_mgr F15_to_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_t
> o_male_mgr F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.
> F12_to_male_mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.ma
> le#c.F10_to_male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.
> male#c.F8_to_male_mgr F7_to_male_mgr"
  - else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
  = else local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mgr
>  i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F17_to_mal
> e_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male_mgr F15_t
> o_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_to_male_mgr 
> F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.F12_to_male
> _mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.male#c.F10_to
> _male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.male#c.F8_t
> o_male_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr"
  - }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                             F47_to_male_mgr F46_to_ma
> le_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to
> _male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36
> _to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr 
> F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_m
> gr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_mal
> e_mgr F21_to_male_mgr F7_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-6)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F6_to_male_mgr =  == -6
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F6_to_male_mgr = F6.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -6 >= -20{
  - if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
  = if "male" == "" local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_
> to_male_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr
>  F17_to_male_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_mal
> e_mgr F15_to_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_t
> o_male_mgr F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.
> F12_to_male_mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.ma
> le#c.F10_to_male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.
> male#c.F8_to_male_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr F6_to_male_mgr"
  - else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
  = else local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mgr
>  i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F17_to_mal
> e_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male_mgr F15_t
> o_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_to_male_mgr 
> F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.F12_to_male
> _mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.male#c.F10_to
> _male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.male#c.F8_t
> o_male_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr F6_to_male_mgr i.male#c.F6_
> to_male_mgr"
  - }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                             F47_to_male_mgr F46_to_ma
> le_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to
> _male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36
> _to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr 
> F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_m
> gr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_mal
> e_mgr F21_to_male_mgr F6_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-5)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F5_to_male_mgr =  == -5
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F5_to_male_mgr = F5.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -5 >= -20{
  - if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
  = if "male" == "" local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_
> to_male_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr
>  F17_to_male_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_mal
> e_mgr F15_to_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_t
> o_male_mgr F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.
> F12_to_male_mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.ma
> le#c.F10_to_male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.
> male#c.F8_to_male_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr F6_to_male_mgr i
> .male#c.F6_to_male_mgr F5_to_male_mgr"
  - else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
  = else local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mgr
>  i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F17_to_mal
> e_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male_mgr F15_t
> o_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_to_male_mgr 
> F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.F12_to_male
> _mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.male#c.F10_to
> _male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.male#c.F8_t
> o_male_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr F6_to_male_mgr i.male#c.F6_
> to_male_mgr F5_to_male_mgr i.male#c.F5_to_male_mgr"
  - }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                             F47_to_male_mgr F46_to_ma
> le_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to
> _male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36
> _to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr 
> F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_m
> gr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_mal
> e_mgr F21_to_male_mgr F5_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-4)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F4_to_male_mgr =  == -4
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F4_to_male_mgr = F4.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -4 >= -20{
  - if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
  = if "male" == "" local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_
> to_male_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr
>  F17_to_male_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_mal
> e_mgr F15_to_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_t
> o_male_mgr F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.
> F12_to_male_mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.ma
> le#c.F10_to_male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.
> male#c.F8_to_male_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr F6_to_male_mgr i
> .male#c.F6_to_male_mgr F5_to_male_mgr i.male#c.F5_to_male_mgr F4_to_male_mgr"
  - else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
  = else local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mgr
>  i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F17_to_mal
> e_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male_mgr F15_t
> o_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_to_male_mgr 
> F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.F12_to_male
> _mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.male#c.F10_to
> _male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.male#c.F8_t
> o_male_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr F6_to_male_mgr i.male#c.F6_
> to_male_mgr F5_to_male_mgr i.male#c.F5_to_male_mgr F4_to_male_mgr i.male#c.F4
> _to_male_mgr"
  - }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                             F47_to_male_mgr F46_to_ma
> le_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to
> _male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36
> _to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr 
> F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_m
> gr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_mal
> e_mgr F21_to_male_mgr F4_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-3)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F3_to_male_mgr =  == -3
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F3_to_male_mgr = F3.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -3 >= -20{
  - if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
  = if "male" == "" local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_
> to_male_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr
>  F17_to_male_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_mal
> e_mgr F15_to_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_t
> o_male_mgr F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.
> F12_to_male_mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.ma
> le#c.F10_to_male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.
> male#c.F8_to_male_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr F6_to_male_mgr i
> .male#c.F6_to_male_mgr F5_to_male_mgr i.male#c.F5_to_male_mgr F4_to_male_mgr 
> i.male#c.F4_to_male_mgr F3_to_male_mgr"
  - else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
  = else local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mgr
>  i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F17_to_mal
> e_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male_mgr F15_t
> o_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_to_male_mgr 
> F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.F12_to_male
> _mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.male#c.F10_to
> _male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.male#c.F8_t
> o_male_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr F6_to_male_mgr i.male#c.F6_
> to_male_mgr F5_to_male_mgr i.male#c.F5_to_male_mgr F4_to_male_mgr i.male#c.F4
> _to_male_mgr F3_to_male_mgr i.male#c.F3_to_male_mgr"
  - }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                             F47_to_male_mgr F46_to_ma
> le_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to
> _male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36
> _to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr 
> F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_m
> gr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_mal
> e_mgr F21_to_male_mgr F3_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-2)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F2_to_male_mgr =  == -2
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F2_to_male_mgr = F2.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -2 >= -20{
  - if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
  = if "male" == "" local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_
> to_male_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr
>  F17_to_male_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_mal
> e_mgr F15_to_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_t
> o_male_mgr F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.
> F12_to_male_mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.ma
> le#c.F10_to_male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.
> male#c.F8_to_male_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr F6_to_male_mgr i
> .male#c.F6_to_male_mgr F5_to_male_mgr i.male#c.F5_to_male_mgr F4_to_male_mgr 
> i.male#c.F4_to_male_mgr F3_to_male_mgr i.male#c.F3_to_male_mgr F2_to_male_mgr
> "
  - else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
  = else local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mgr
>  i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F17_to_mal
> e_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male_mgr F15_t
> o_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_to_male_mgr 
> F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.F12_to_male
> _mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.male#c.F10_to
> _male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.male#c.F8_t
> o_male_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr F6_to_male_mgr i.male#c.F6_
> to_male_mgr F5_to_male_mgr i.male#c.F5_to_male_mgr F4_to_male_mgr i.male#c.F4
> _to_male_mgr F3_to_male_mgr i.male#c.F3_to_male_mgr F2_to_male_mgr i.male#c.F
> 2_to_male_mgr"
  - }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                             F47_to_male_mgr F46_to_ma
> le_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to
> _male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36
> _to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr 
> F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_m
> gr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_mal
> e_mgr F21_to_male_mgr F2_to_male_mgr"
  - }
  - local j = abs(`i')
  = local j = abs(-1)
  - if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
  = if !missing("") gen F1_to_male_mgr =  == -1
  - else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
  = else if "" == "" cap: gen F1_to_male_mgr = F1.to_male_mgr == 1
  - if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
  - if `i' >= `first_period'{
  = if -1 >= -20{
  - if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
  = if "male" == "" local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_
> to_male_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr
>  F17_to_male_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_mal
> e_mgr F15_to_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_t
> o_male_mgr F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.
> F12_to_male_mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.ma
> le#c.F10_to_male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.
> male#c.F8_to_male_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr F6_to_male_mgr i
> .male#c.F6_to_male_mgr F5_to_male_mgr i.male#c.F5_to_male_mgr F4_to_male_mgr 
> i.male#c.F4_to_male_mgr F3_to_male_mgr i.male#c.F3_to_male_mgr F2_to_male_mgr
>  i.male#c.F2_to_male_mgr F1_to_male_mgr"
  - else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
  = else local leads " F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mgr
>  i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F17_to_mal
> e_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male_mgr F15_t
> o_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_to_male_mgr 
> F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.F12_to_male
> _mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.male#c.F10_to
> _male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.male#c.F8_t
> o_male_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr F6_to_male_mgr i.male#c.F6_
> to_male_mgr F5_to_male_mgr i.male#c.F5_to_male_mgr F4_to_male_mgr i.male#c.F4
> _to_male_mgr F3_to_male_mgr i.male#c.F3_to_male_mgr F2_to_male_mgr i.male#c.F
> 2_to_male_mgr F1_to_male_mgr i.male#c.F1_to_male_mgr"
  - }
  - else local F_absorb " `F_absorb' F`j'_``ev'_name'"
  = else local F_absorb "                             F47_to_male_mgr F46_to_ma
> le_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to
> _male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36
> _to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr 
> F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_m
> gr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_mal
> e_mgr F21_to_male_mgr F1_to_male_mgr"
  - }
  - if "`by'" == "" local endpoints "`endpoints' `F_absorb' `L_absorb'"
  = if "male" == "" local endpoints "                             F47_to_male_m
> gr F46_to_male_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_mal
> e_mgr F41_to_male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_
> male_mgr F36_to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_
> to_male_mgr F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F
> 27_to_male_mgr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mg
> r F22_to_male_mgr F21_to_male_mgr  L31_to_male_mgr  L32_to_male_mgr  L33_to_m
> ale_mgr  L34_to_male_mgr  L35_to_male_mgr  L36_to_male_mgr  L37_to_male_mgr  
> L38_to_male_mgr  L39_to_male_mgr  L40_to_male_mgr  L41_to_male_mgr  L42_to_ma
> le_mgr  L43_to_male_mgr  L44_to_male_mgr  L45_to_male_mgr  L46_to_male_mgr  L
> 47_to_male_mgr "
  - else local endpoints "`endpoints' i.`by'#(`F_absorb' `L_absorb')"
  = else local endpoints " i.male#(                            F47_to_male_mgr 
> F46_to_male_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_m
> gr F41_to_male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_mal
> e_mgr F36_to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_
> male_mgr F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_
> to_male_mgr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F
> 22_to_male_mgr F21_to_male_mgr  L31_to_male_mgr  L32_to_male_mgr  L33_to_male
> _mgr  L34_to_male_mgr  L35_to_male_mgr  L36_to_male_mgr  L37_to_male_mgr  L38
> _to_male_mgr  L39_to_male_mgr  L40_to_male_mgr  L41_to_male_mgr  L42_to_male_
> mgr  L43_to_male_mgr  L44_to_male_mgr  L45_to_male_mgr  L46_to_male_mgr  L47_
> to_male_mgr )"
  - if "`save_`ev''" == "save" preserve
  = if "save" == "save" preserve
  - }
  - if "``ev'_name'" == "" continue
  = if "" == "" continue
    forvalues i = 0/`max_delta'{
    if !missing("`e_t'") gen L`i'_``ev'_name' = `e_t' == `i'
    else if "`nogen_`ev''" == "" cap: gen L`i'_``ev'_name' = L`i'.``ev'_name' =
> = 1
    if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace L`i'_``ev'_name' =
>  L`i'.``ev'_name' == 1
    else {
    di as error "variable  L`i'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
    if `i' <= `last_period'{
    if "`by'" == "" local lags "`lags' L`i'_``ev'_name'"
    else local lags "`lags' L`i'_``ev'_name' i.`by'#c.L`i'_``ev'_name'"
    }
    else local L_absorb "`L_absorb' L`i'_``ev'_name' "
    }
    forvalues i = -`max_delta'/`omitted_threshold'{
    local j = abs(`i')
    if !missing("`e_t'") gen F`j'_``ev'_name' = `e_t' == -`j'
    else if "`nogen_`ev''" == "" cap: gen F`j'_``ev'_name' = F`j'.``ev'_name' =
> = 1
    if _rc == 110{
    local old_rc _rc
    if "`replace_`ev''" == "replace" $esplot_quietly replace F`j'_``ev'_name' =
>  F`j'.``ev'_name' == 1
    else {
    di as error "variable F`j'_``ev'_name' already defined."
    di as text "Type ..." as input "`ev'(``ev'_name', replace)" as text "... if
>  you'd like to overwrite existing lags/leads"
    di as text "Type ..." as input "`ev'(``ev'_name', nogen)" as text "... if y
> ou'd like to use the lags/leads in memory"
    error `old_rc'
    }
    }
    if `i' >= `first_period'{
    if "`by'" == "" local leads "`leads' F`j'_``ev'_name'"
    else local leads "`leads' F`j'_``ev'_name' i.`by'#c.F`j'_``ev'_name'"
    }
    else local F_absorb " `F_absorb' F`j'_``ev'_name'"
    }
    if "`by'" == "" local endpoints "`endpoints' `F_absorb' `L_absorb'"
    else local endpoints "`endpoints' i.`by'#(`F_absorb' `L_absorb')"
    if "`save_`ev''" == "save" preserve
    }
  - if "`save_compare'`save_event'" == "saveLatersaveLater" preserve
  = if "save" == "saveLatersaveLater" preserve
  - cap: preserve
  - assert _rc == 621
  - if "`regression'" == "reghdfe"{
  = if "reghdfe" == "reghdfe"{
  - $esplot_quietly reghdfe `y' `leads' `lags' `endpoints' `controls' `if' `in'
>  `reg_weights', `main_absorb' `vce'
  =  reghdfe paygrade  F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mgr
>  i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F17_to_mal
> e_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male_mgr F15_t
> o_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_to_male_mgr 
> F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.F12_to_male
> _mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.male#c.F10_to
> _male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.male#c.F8_t
> o_male_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr F6_to_male_mgr i.male#c.F6_
> to_male_mgr F5_to_male_mgr i.male#c.F5_to_male_mgr F4_to_male_mgr i.male#c.F4
> _to_male_mgr F3_to_male_mgr i.male#c.F3_to_male_mgr F2_to_male_mgr i.male#c.F
> 2_to_male_mgr F1_to_male_mgr i.male#c.F1_to_male_mgr  L0_to_male_mgr i.male#c
> .L0_to_male_mgr L1_to_male_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#
> c.L2_to_male_mgr L3_to_male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male
> #c.L4_to_male_mgr L5_to_male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.mal
> e#c.L6_to_male_mgr L7_to_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.ma
> le#c.L8_to_male_mgr L9_to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.
> male#c.L10_to_male_mgr L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_m
> gr i.male#c.L12_to_male_mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L14_to_m
> ale_mgr i.male#c.L14_to_male_mgr L15_to_male_mgr i.male#c.L15_to_male_mgr L16
> _to_male_mgr i.male#c.L16_to_male_mgr L17_to_male_mgr i.male#c.L17_to_male_mg
> r L18_to_male_mgr i.male#c.L18_to_male_mgr L19_to_male_mgr i.male#c.L19_to_ma
> le_mgr L20_to_male_mgr i.male#c.L20_to_male_mgr L21_to_male_mgr i.male#c.L21_
> to_male_mgr L22_to_male_mgr i.male#c.L22_to_male_mgr L23_to_male_mgr i.male#c
> .L23_to_male_mgr L24_to_male_mgr i.male#c.L24_to_male_mgr L25_to_male_mgr i.m
> ale#c.L25_to_male_mgr L26_to_male_mgr i.male#c.L26_to_male_mgr L27_to_male_mg
> r i.male#c.L27_to_male_mgr L28_to_male_mgr i.male#c.L28_to_male_mgr L29_to_ma
> le_mgr i.male#c.L29_to_male_mgr L30_to_male_mgr i.male#c.L30_to_male_mgr  i.m
> ale#(                            F47_to_male_mgr F46_to_male_mgr F45_to_male_
> mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_male_mgr F40_to_ma
> le_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36_to_male_mgr F35_to
> _male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr F31_to_male_mgr F30
> _to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_mgr F26_to_male_mgr 
> F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_male_mgr F21_to_male_m
> gr  L31_to_male_mgr  L32_to_male_mgr  L33_to_male_mgr  L34_to_male_mgr  L35_t
> o_male_mgr  L36_to_male_mgr  L37_to_male_mgr  L38_to_male_mgr  L39_to_male_mg
> r  L40_to_male_mgr  L41_to_male_mgr  L42_to_male_mgr  L43_to_male_mgr  L44_to
> _male_mgr  L45_to_male_mgr  L46_to_male_mgr  L47_to_male_mgr )    , noabsorb 
      ------------------------------------------------------ begin findfile ---
      - version 8
      - gettoken fn 0 : 0, parse(" ,")
      - syntax [, ALL noDEScend PATH(string)]
      - if `"`path'"'=="" {
      = if `""'=="" {
      - local path `"`c(adopath)'"'
      = local path `"`"..\"';BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
      - }
      - local n 0
      - local subdir : adosubdir `"`fn'"'
      = local subdir : adosubdir `"reghdfe.mata"'
      - if `"`subdir'"' != "" {
      = if `"r"' != "" {
      - gettoken d path : path, parse(";")
      - while `"`d'"'!="" {
      = while `"..\"'!="" {
      - if `"`d'"' != ";" {
      = if `"..\"' != ";" {
      - local d : sysdir `"`d'"'
      = local d : sysdir `"..\"'
      - local ffn `"`d'`fn'"'
      = local ffn `"../reghdfe.mata"'
      - capture confirm file `"`ffn'"'
      = capture confirm file `"../reghdfe.mata"'
      - if _rc==0 {
        di as txt `"`ffn'"'
        if "`all'"=="" {
        ret local fn `"`ffn'"'
        exit
        }
        if `n' {
        ret local fn `"`return(fn)' "`ffn'""'
        }
        else ret local fn `""`ffn'""'
        local n 1
        }
      - if "`descend'"=="" {
      = if ""=="" {
      - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
      = local ffn `"../r/reghdfe.mata"'
      - capture confirm file `"`ffn'"'
      = capture confirm file `"../r/reghdfe.mata"'
      - if _rc==0 {
        di as txt `"`ffn'"'
        if "`all'"=="" {
        ret local fn `"`ffn'"'
        exit
        }
        if `n' {
        ret local fn `"`return(fn)' "`ffn'""'
        }
        else ret local fn `"`ffn'"'
        local n 1
        }
      - }
      - }
      - gettoken d path : path, parse(" ;")
      - }
      - while `"`d'"'!="" {
      = while `";"'!="" {
      - if `"`d'"' != ";" {
      = if `";"' != ";" {
        local d : sysdir `"`d'"'
        local ffn `"`d'`fn'"'
        capture confirm file `"`ffn'"'
        if _rc==0 {
        di as txt `"`ffn'"'
        if "`all'"=="" {
        ret local fn `"`ffn'"'
        exit
        }
        if `n' {
        ret local fn `"`return(fn)' "`ffn'""'
        }
        else ret local fn `""`ffn'""'
        local n 1
        }
        if "`descend'"=="" {
        local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        capture confirm file `"`ffn'"'
        if _rc==0 {
        di as txt `"`ffn'"'
        if "`all'"=="" {
        ret local fn `"`ffn'"'
        exit
        }
        if `n' {
        ret local fn `"`return(fn)' "`ffn'""'
        }
        else ret local fn `"`ffn'"'
        local n 1
        }
        }
        }
      - gettoken d path : path, parse(" ;")
      - }
      - while `"`d'"'!="" {
      = while `"BASE"'!="" {
      - if `"`d'"' != ";" {
      = if `"BASE"' != ";" {
      - local d : sysdir `"`d'"'
      = local d : sysdir `"BASE"'
      - local ffn `"`d'`fn'"'
      = local ffn `"C:\Program Files\Stata16\ado\base/reghdfe.mata"'
      - capture confirm file `"`ffn'"'
      = capture confirm file `"C:\Program Files\Stata16\ado\base/reghdfe.mata"'
      - if _rc==0 {
        di as txt `"`ffn'"'
        if "`all'"=="" {
        ret local fn `"`ffn'"'
        exit
        }
        if `n' {
        ret local fn `"`return(fn)' "`ffn'""'
        }
        else ret local fn `""`ffn'""'
        local n 1
        }
      - if "`descend'"=="" {
      = if ""=="" {
      - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
      = local ffn `"C:\Program Files\Stata16\ado\base/r/reghdfe.mata"'
      - capture confirm file `"`ffn'"'
      = capture confirm file `"C:\Program Files\Stata16\ado\base/r/reghdfe.mata
> "'
      - if _rc==0 {
        di as txt `"`ffn'"'
        if "`all'"=="" {
        ret local fn `"`ffn'"'
        exit
        }
        if `n' {
        ret local fn `"`return(fn)' "`ffn'""'
        }
        else ret local fn `"`ffn'"'
        local n 1
        }
      - }
      - }
      - gettoken d path : path, parse(" ;")
      - }
      - while `"`d'"'!="" {
      = while `";"'!="" {
      - if `"`d'"' != ";" {
      = if `";"' != ";" {
        local d : sysdir `"`d'"'
        local ffn `"`d'`fn'"'
        capture confirm file `"`ffn'"'
        if _rc==0 {
        di as txt `"`ffn'"'
        if "`all'"=="" {
        ret local fn `"`ffn'"'
        exit
        }
        if `n' {
        ret local fn `"`return(fn)' "`ffn'""'
        }
        else ret local fn `""`ffn'""'
        local n 1
        }
        if "`descend'"=="" {
        local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        capture confirm file `"`ffn'"'
        if _rc==0 {
        di as txt `"`ffn'"'
        if "`all'"=="" {
        ret local fn `"`ffn'"'
        exit
        }
        if `n' {
        ret local fn `"`return(fn)' "`ffn'""'
        }
        else ret local fn `"`ffn'"'
        local n 1
        }
        }
        }
      - gettoken d path : path, parse(" ;")
      - }
      - while `"`d'"'!="" {
      = while `"SITE"'!="" {
      - if `"`d'"' != ";" {
      = if `"SITE"' != ";" {
      - local d : sysdir `"`d'"'
      = local d : sysdir `"SITE"'
      - local ffn `"`d'`fn'"'
      = local ffn `"C:\Program Files\Stata16\ado\site/reghdfe.mata"'
      - capture confirm file `"`ffn'"'
      = capture confirm file `"C:\Program Files\Stata16\ado\site/reghdfe.mata"'
      - if _rc==0 {
        di as txt `"`ffn'"'
        if "`all'"=="" {
        ret local fn `"`ffn'"'
        exit
        }
        if `n' {
        ret local fn `"`return(fn)' "`ffn'""'
        }
        else ret local fn `""`ffn'""'
        local n 1
        }
      - if "`descend'"=="" {
      = if ""=="" {
      - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
      = local ffn `"C:\Program Files\Stata16\ado\site/r/reghdfe.mata"'
      - capture confirm file `"`ffn'"'
      = capture confirm file `"C:\Program Files\Stata16\ado\site/r/reghdfe.mata
> "'
      - if _rc==0 {
        di as txt `"`ffn'"'
        if "`all'"=="" {
        ret local fn `"`ffn'"'
        exit
        }
        if `n' {
        ret local fn `"`return(fn)' "`ffn'""'
        }
        else ret local fn `"`ffn'"'
        local n 1
        }
      - }
      - }
      - gettoken d path : path, parse(" ;")
      - }
      - while `"`d'"'!="" {
      = while `";"'!="" {
      - if `"`d'"' != ";" {
      = if `";"' != ";" {
        local d : sysdir `"`d'"'
        local ffn `"`d'`fn'"'
        capture confirm file `"`ffn'"'
        if _rc==0 {
        di as txt `"`ffn'"'
        if "`all'"=="" {
        ret local fn `"`ffn'"'
        exit
        }
        if `n' {
        ret local fn `"`return(fn)' "`ffn'""'
        }
        else ret local fn `""`ffn'""'
        local n 1
        }
        if "`descend'"=="" {
        local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        capture confirm file `"`ffn'"'
        if _rc==0 {
        di as txt `"`ffn'"'
        if "`all'"=="" {
        ret local fn `"`ffn'"'
        exit
        }
        if `n' {
        ret local fn `"`return(fn)' "`ffn'""'
        }
        else ret local fn `"`ffn'"'
        local n 1
        }
        }
        }
      - gettoken d path : path, parse(" ;")
      - }
      - while `"`d'"'!="" {
      = while `"."'!="" {
      - if `"`d'"' != ";" {
      = if `"."' != ";" {
      - local d : sysdir `"`d'"'
      = local d : sysdir `"."'
      - local ffn `"`d'`fn'"'
      = local ffn `"./reghdfe.mata"'
      - capture confirm file `"`ffn'"'
      = capture confirm file `"./reghdfe.mata"'
      - if _rc==0 {
        di as txt `"`ffn'"'
        if "`all'"=="" {
        ret local fn `"`ffn'"'
        exit
        }
        if `n' {
        ret local fn `"`return(fn)' "`ffn'""'
        }
        else ret local fn `""`ffn'""'
        local n 1
        }
      - if "`descend'"=="" {
      = if ""=="" {
      - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
      = local ffn `"./r/reghdfe.mata"'
      - capture confirm file `"`ffn'"'
      = capture confirm file `"./r/reghdfe.mata"'
      - if _rc==0 {
        di as txt `"`ffn'"'
        if "`all'"=="" {
        ret local fn `"`ffn'"'
        exit
        }
        if `n' {
        ret local fn `"`return(fn)' "`ffn'""'
        }
        else ret local fn `"`ffn'"'
        local n 1
        }
      - }
      - }
      - gettoken d path : path, parse(" ;")
      - }
      - while `"`d'"'!="" {
      = while `";"'!="" {
      - if `"`d'"' != ";" {
      = if `";"' != ";" {
        local d : sysdir `"`d'"'
        local ffn `"`d'`fn'"'
        capture confirm file `"`ffn'"'
        if _rc==0 {
        di as txt `"`ffn'"'
        if "`all'"=="" {
        ret local fn `"`ffn'"'
        exit
        }
        if `n' {
        ret local fn `"`return(fn)' "`ffn'""'
        }
        else ret local fn `""`ffn'""'
        local n 1
        }
        if "`descend'"=="" {
        local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        capture confirm file `"`ffn'"'
        if _rc==0 {
        di as txt `"`ffn'"'
        if "`all'"=="" {
        ret local fn `"`ffn'"'
        exit
        }
        if `n' {
        ret local fn `"`return(fn)' "`ffn'""'
        }
        else ret local fn `"`ffn'"'
        local n 1
        }
        }
        }
      - gettoken d path : path, parse(" ;")
      - }
      - while `"`d'"'!="" {
      = while `"PERSONAL"'!="" {
      - if `"`d'"' != ";" {
      = if `"PERSONAL"' != ";" {
      - local d : sysdir `"`d'"'
      = local d : sysdir `"PERSONAL"'
      - local ffn `"`d'`fn'"'
      = local ffn `"C:\Users\dballaelliott\ado\personal/reghdfe.mata"'
      - capture confirm file `"`ffn'"'
      = capture confirm file `"C:\Users\dballaelliott\ado\personal/reghdfe.mata
> "'
      - if _rc==0 {
        di as txt `"`ffn'"'
        if "`all'"=="" {
        ret local fn `"`ffn'"'
        exit
        }
        if `n' {
        ret local fn `"`return(fn)' "`ffn'""'
        }
        else ret local fn `""`ffn'""'
        local n 1
        }
      - if "`descend'"=="" {
      = if ""=="" {
      - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
      = local ffn `"C:\Users\dballaelliott\ado\personal/r/reghdfe.mata"'
      - capture confirm file `"`ffn'"'
      = capture confirm file `"C:\Users\dballaelliott\ado\personal/r/reghdfe.ma
> ta"'
      - if _rc==0 {
        di as txt `"`ffn'"'
        if "`all'"=="" {
        ret local fn `"`ffn'"'
        exit
        }
        if `n' {
        ret local fn `"`return(fn)' "`ffn'""'
        }
        else ret local fn `"`ffn'"'
        local n 1
        }
      - }
      - }
      - gettoken d path : path, parse(" ;")
      - }
      - while `"`d'"'!="" {
      = while `";"'!="" {
      - if `"`d'"' != ";" {
      = if `";"' != ";" {
        local d : sysdir `"`d'"'
        local ffn `"`d'`fn'"'
        capture confirm file `"`ffn'"'
        if _rc==0 {
        di as txt `"`ffn'"'
        if "`all'"=="" {
        ret local fn `"`ffn'"'
        exit
        }
        if `n' {
        ret local fn `"`return(fn)' "`ffn'""'
        }
        else ret local fn `""`ffn'""'
        local n 1
        }
        if "`descend'"=="" {
        local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        capture confirm file `"`ffn'"'
        if _rc==0 {
        di as txt `"`ffn'"'
        if "`all'"=="" {
        ret local fn `"`ffn'"'
        exit
        }
        if `n' {
        ret local fn `"`return(fn)' "`ffn'""'
        }
        else ret local fn `"`ffn'"'
        local n 1
        }
        }
        }
      - gettoken d path : path, parse(" ;")
      - }
      - while `"`d'"'!="" {
      = while `"PLUS"'!="" {
      - if `"`d'"' != ";" {
      = if `"PLUS"' != ";" {
      - local d : sysdir `"`d'"'
      = local d : sysdir `"PLUS"'
      - local ffn `"`d'`fn'"'
      = local ffn `"c:\ado\plus/reghdfe.mata"'
      - capture confirm file `"`ffn'"'
      = capture confirm file `"c:\ado\plus/reghdfe.mata"'
      - if _rc==0 {
        di as txt `"`ffn'"'
        if "`all'"=="" {
        ret local fn `"`ffn'"'
        exit
        }
        if `n' {
        ret local fn `"`return(fn)' "`ffn'""'
        }
        else ret local fn `""`ffn'""'
        local n 1
        }
      - if "`descend'"=="" {
      = if ""=="" {
      - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
      = local ffn `"c:\ado\plus/r/reghdfe.mata"'
      - capture confirm file `"`ffn'"'
      = capture confirm file `"c:\ado\plus/r/reghdfe.mata"'
      - if _rc==0 {
      - di as txt `"`ffn'"'
      = di as txt `"c:\ado\plus/r/reghdfe.mata"'
      - if "`all'"=="" {
      = if ""=="" {
      - ret local fn `"`ffn'"'
      = ret local fn `"c:\ado\plus/r/reghdfe.mata"'
      - exit
      -------------------------------------------------------- end findfile ---
        ---------------------------------------------------- begin findfile ---
        - version 8
        - gettoken fn 0 : 0, parse(" ,")
        - syntax [, ALL noDEScend PATH(string)]
        - if `"`path'"'=="" {
        = if `""'=="" {
        - local path `"`c(adopath)'"'
        = local path `"`"..\"';BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
        - }
        - local n 0
        - local subdir : adosubdir `"`fn'"'
        = local subdir : adosubdir `"ftools.mata"'
        - if `"`subdir'"' != "" {
        = if `"f"' != "" {
        - gettoken d path : path, parse(";")
        - while `"`d'"'!="" {
        = while `"..\"'!="" {
        - if `"`d'"' != ";" {
        = if `"..\"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"..\"'
        - local ffn `"`d'`fn'"'
        = local ffn `"../ftools.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"../ftools.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"../f/ftools.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"../f/ftools.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"BASE"'!="" {
        - if `"`d'"' != ";" {
        = if `"BASE"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"BASE"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\base/ftools.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\base/ftools.mata"
> '
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\base/f/ftools.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\base/f/ftools.mat
> a"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"SITE"'!="" {
        - if `"`d'"' != ";" {
        = if `"SITE"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"SITE"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\site/ftools.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\site/ftools.mata"
> '
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\site/f/ftools.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\site/f/ftools.mat
> a"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"."'!="" {
        - if `"`d'"' != ";" {
        = if `"."' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"."'
        - local ffn `"`d'`fn'"'
        = local ffn `"./ftools.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"./ftools.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"./f/ftools.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"./f/ftools.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"PERSONAL"'!="" {
        - if `"`d'"' != ";" {
        = if `"PERSONAL"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"PERSONAL"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Users\dballaelliott\ado\personal/ftools.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Users\dballaelliott\ado\personal/ftools.mat
> a"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Users\dballaelliott\ado\personal/f/ftools.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Users\dballaelliott\ado\personal/f/ftools.m
> ata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"PLUS"'!="" {
        - if `"`d'"' != ";" {
        = if `"PLUS"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"PLUS"'
        - local ffn `"`d'`fn'"'
        = local ffn `"c:\ado\plus/ftools.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"c:\ado\plus/ftools.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"c:\ado\plus/f/ftools.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"c:\ado\plus/f/ftools.mata"'
        - if _rc==0 {
        - di as txt `"`ffn'"'
        = di as txt `"c:\ado\plus/f/ftools.mata"'
        - if "`all'"=="" {
        = if ""=="" {
        - ret local fn `"`ffn'"'
        = ret local fn `"c:\ado\plus/f/ftools.mata"'
        - exit
        ------------------------------------------------------ end findfile ---
          -------------------------------------------- begin ms_get_version ---
          - syntax anything(name=ado), [min_version(string) min_date(string)]
          - mata: st_local("package_version", get_version("`ado'"))
          = mata: st_local("package_version", get_version("ftools"))
          - c_local package_version "`package_version'"
          = c_local package_version "2.37.0 16aug2019"
          - loc _ `package_version'
          = loc _ 2.37.0 16aug2019
          - gettoken version_number _ : _
          - gettoken version_date _ : _
          - c_local version_number "`version_number'"
          = c_local version_number "2.37.0"
          - c_local version_date "`version_date'"
          = c_local version_date "16aug2019"
          - if ("`min_version'" != "") {
          = if ("" != "") {
            loc ok 0
            cap mata: st_local("ok", strofreal(strtoreal(tokens(subinstr("`vers
> ion_number'", ".", " "))) * (1e5, 1e3, 1)' >= strtoreal(tokens(subinstr("`min
> _version'", ".", " "))) * (1e5, 1e3, 1)'))
            _assert `ok', msg("you are using version `version_number' of `ado',
>  but require version `min_version'")
            }
          - if ("`min_date'" != "") {
          = if ("" != "") {
            loc ok = !mi(date("`version_date'", "DMY")) & (date("`version_date'
> ", "DMY") >= date("`min_date'", "DMY"))
            _assert `ok', msg("you are using `ado' from `version_date', but req
> uire a version from at `min_date' or later")
            }
          ---------------------------------------------- end ms_get_version ---
          -------------------------------------------------- begin findfile ---
          - version 8
          - gettoken fn 0 : 0, parse(" ,")
          - syntax [, ALL noDEScend PATH(string)]
          - if `"`path'"'=="" {
          = if `""'=="" {
          - local path `"`c(adopath)'"'
          = local path `"`"..\"';BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
          - }
          - local n 0
          - local subdir : adosubdir `"`fn'"'
          = local subdir : adosubdir `"ftools_type_aliases.mata"'
          - if `"`subdir'"' != "" {
          = if `"f"' != "" {
          - gettoken d path : path, parse(";")
          - while `"`d'"'!="" {
          = while `"..\"'!="" {
          - if `"`d'"' != ";" {
          = if `"..\"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"..\"'
          - local ffn `"`d'`fn'"'
          = local ffn `"../ftools_type_aliases.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"../ftools_type_aliases.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"../f/ftools_type_aliases.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"../f/ftools_type_aliases.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"BASE"'!="" {
          - if `"`d'"' != ";" {
          = if `"BASE"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"BASE"'
          - local ffn `"`d'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\base/ftools_type_aliases.m
> ata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\base/ftools_typ
> e_aliases.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\base/f/ftools_type_aliases
> .mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\base/f/ftools_t
> ype_aliases.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"SITE"'!="" {
          - if `"`d'"' != ";" {
          = if `"SITE"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"SITE"'
          - local ffn `"`d'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\site/ftools_type_aliases.m
> ata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\site/ftools_typ
> e_aliases.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\site/f/ftools_type_aliases
> .mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\site/f/ftools_t
> ype_aliases.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"."'!="" {
          - if `"`d'"' != ";" {
          = if `"."' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"."'
          - local ffn `"`d'`fn'"'
          = local ffn `"./ftools_type_aliases.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"./ftools_type_aliases.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"./f/ftools_type_aliases.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"./f/ftools_type_aliases.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"PERSONAL"'!="" {
          - if `"`d'"' != ";" {
          = if `"PERSONAL"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"PERSONAL"'
          - local ffn `"`d'`fn'"'
          = local ffn `"C:\Users\dballaelliott\ado\personal/ftools_type_aliases
> .mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Users\dballaelliott\ado\personal/ftools_t
> ype_aliases.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"C:\Users\dballaelliott\ado\personal/f/ftools_type_alias
> es.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Users\dballaelliott\ado\personal/f/ftools
> _type_aliases.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"PLUS"'!="" {
          - if `"`d'"' != ";" {
          = if `"PLUS"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"PLUS"'
          - local ffn `"`d'`fn'"'
          = local ffn `"c:\ado\plus/ftools_type_aliases.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"c:\ado\plus/ftools_type_aliases.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"c:\ado\plus/f/ftools_type_aliases.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"c:\ado\plus/f/ftools_type_aliases.mata"'
          - if _rc==0 {
          - di as txt `"`ffn'"'
          = di as txt `"c:\ado\plus/f/ftools_type_aliases.mata"'
          - if "`all'"=="" {
          = if ""=="" {
          - ret local fn `"`ffn'"'
          = ret local fn `"c:\ado\plus/f/ftools_type_aliases.mata"'
          - exit
          ---------------------------------------------------- end findfile ---
          -------------------------------------------------- begin findfile ---
          - version 8
          - gettoken fn 0 : 0, parse(" ,")
          - syntax [, ALL noDEScend PATH(string)]
          - if `"`path'"'=="" {
          = if `""'=="" {
          - local path `"`c(adopath)'"'
          = local path `"`"..\"';BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
          - }
          - local n 0
          - local subdir : adosubdir `"`fn'"'
          = local subdir : adosubdir `"ftools_common.mata"'
          - if `"`subdir'"' != "" {
          = if `"f"' != "" {
          - gettoken d path : path, parse(";")
          - while `"`d'"'!="" {
          = while `"..\"'!="" {
          - if `"`d'"' != ";" {
          = if `"..\"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"..\"'
          - local ffn `"`d'`fn'"'
          = local ffn `"../ftools_common.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"../ftools_common.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"../f/ftools_common.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"../f/ftools_common.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"BASE"'!="" {
          - if `"`d'"' != ";" {
          = if `"BASE"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"BASE"'
          - local ffn `"`d'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\base/ftools_common.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\base/ftools_com
> mon.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\base/f/ftools_common.mata"
> '
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\base/f/ftools_c
> ommon.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"SITE"'!="" {
          - if `"`d'"' != ";" {
          = if `"SITE"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"SITE"'
          - local ffn `"`d'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\site/ftools_common.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\site/ftools_com
> mon.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\site/f/ftools_common.mata"
> '
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\site/f/ftools_c
> ommon.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"."'!="" {
          - if `"`d'"' != ";" {
          = if `"."' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"."'
          - local ffn `"`d'`fn'"'
          = local ffn `"./ftools_common.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"./ftools_common.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"./f/ftools_common.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"./f/ftools_common.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"PERSONAL"'!="" {
          - if `"`d'"' != ";" {
          = if `"PERSONAL"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"PERSONAL"'
          - local ffn `"`d'`fn'"'
          = local ffn `"C:\Users\dballaelliott\ado\personal/ftools_common.mata"
> '
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Users\dballaelliott\ado\personal/ftools_c
> ommon.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"C:\Users\dballaelliott\ado\personal/f/ftools_common.mat
> a"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Users\dballaelliott\ado\personal/f/ftools
> _common.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"PLUS"'!="" {
          - if `"`d'"' != ";" {
          = if `"PLUS"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"PLUS"'
          - local ffn `"`d'`fn'"'
          = local ffn `"c:\ado\plus/ftools_common.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"c:\ado\plus/ftools_common.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"c:\ado\plus/f/ftools_common.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"c:\ado\plus/f/ftools_common.mata"'
          - if _rc==0 {
          - di as txt `"`ffn'"'
          = di as txt `"c:\ado\plus/f/ftools_common.mata"'
          - if "`all'"=="" {
          = if ""=="" {
          - ret local fn `"`ffn'"'
          = ret local fn `"c:\ado\plus/f/ftools_common.mata"'
          - exit
          ---------------------------------------------------- end findfile ---
          =void _assert_abort(real scalar rc, string scalar msg, real scalar tr
> aceback) {
          =void assert_msg(real scalar t, | string scalar msg, real scalar rc, 
> real scalar traceback)
          =void assert_in(transmorphic scalar value, transmorphic rowvector val
> id_values, | string scalar msg)
          =void assert_boolean(transmorphic scalar value, | string scalar msg)
          =void update_mask(real colvector mask, real colvector index, real sca
> lar value)
          =real colvector create_mask(real scalar obs, real scalar default_valu
> e, real colvector index, real scalar value)
          =        real colvector              mask
          =real scalar clip(real scalar x, real scalar min_x, real scalar max_x
> ) {
          =real matrix inrange(real matrix x, real matrix lb, real matrix ub)
          =real scalar is_rowvector(transmorphic matrix x) {
          =real scalar varlist_is_integers(string rowvector varlist, transmorph
> ic matrix data)
          =        real scalar                               i
          =        real scalar                               num_vars
          =        string scalar                                type
          =real scalar varlist_is_hybrid(string rowvector varlist)
          =        real scalar                               first_is_num
          =        real scalar                               i
          =        real scalar                               num_vars
          =transmorphic matrix __fload_data(string rowvector varlist,
          =                       | transmorphic colvector touse,
          =                         real scalar touse_is_selectvar)
          =        real scalar                               num_vars
          =        real scalar                               is_num
          =        real scalar                               i
          =        transmorphic matrix                             data
          =void __fstore_data(transmorphic matrix data,
          =                     string scalar newvar,
          =                     string scalar type,
          =                   | string scalar touse)
          =        real rowvector                             idx
          =real matrix rowproduct(real matrix X)
          =        real scalar i, k
          =        real matrix prod
          -------------------------------------------------- begin findfile ---
          - version 8
          - gettoken fn 0 : 0, parse(" ,")
          - syntax [, ALL noDEScend PATH(string)]
          - if `"`path'"'=="" {
          = if `""'=="" {
          - local path `"`c(adopath)'"'
          = local path `"`"..\"';BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
          - }
          - local n 0
          - local subdir : adosubdir `"`fn'"'
          = local subdir : adosubdir `"ftools_main.mata"'
          - if `"`subdir'"' != "" {
          = if `"f"' != "" {
          - gettoken d path : path, parse(";")
          - while `"`d'"'!="" {
          = while `"..\"'!="" {
          - if `"`d'"' != ";" {
          = if `"..\"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"..\"'
          - local ffn `"`d'`fn'"'
          = local ffn `"../ftools_main.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"../ftools_main.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"../f/ftools_main.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"../f/ftools_main.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"BASE"'!="" {
          - if `"`d'"' != ";" {
          = if `"BASE"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"BASE"'
          - local ffn `"`d'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\base/ftools_main.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\base/ftools_mai
> n.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\base/f/ftools_main.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\base/f/ftools_m
> ain.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"SITE"'!="" {
          - if `"`d'"' != ";" {
          = if `"SITE"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"SITE"'
          - local ffn `"`d'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\site/ftools_main.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\site/ftools_mai
> n.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\site/f/ftools_main.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\site/f/ftools_m
> ain.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"."'!="" {
          - if `"`d'"' != ";" {
          = if `"."' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"."'
          - local ffn `"`d'`fn'"'
          = local ffn `"./ftools_main.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"./ftools_main.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"./f/ftools_main.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"./f/ftools_main.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"PERSONAL"'!="" {
          - if `"`d'"' != ";" {
          = if `"PERSONAL"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"PERSONAL"'
          - local ffn `"`d'`fn'"'
          = local ffn `"C:\Users\dballaelliott\ado\personal/ftools_main.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Users\dballaelliott\ado\personal/ftools_m
> ain.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"C:\Users\dballaelliott\ado\personal/f/ftools_main.mata"
> '
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Users\dballaelliott\ado\personal/f/ftools
> _main.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"PLUS"'!="" {
          - if `"`d'"' != ";" {
          = if `"PLUS"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"PLUS"'
          - local ffn `"`d'`fn'"'
          = local ffn `"c:\ado\plus/ftools_main.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"c:\ado\plus/ftools_main.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"c:\ado\plus/f/ftools_main.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"c:\ado\plus/f/ftools_main.mata"'
          - if _rc==0 {
          - di as txt `"`ffn'"'
          = di as txt `"c:\ado\plus/f/ftools_main.mata"'
          - if "`all'"=="" {
          = if ""=="" {
          - ret local fn `"`ffn'"'
          = ret local fn `"c:\ado\plus/f/ftools_main.mata"'
          - exit
          ---------------------------------------------------- end findfile ---
          =        real scalar                               num_levels
          =        real scalar                               num_obs
          =        string scalar                               touse
          =        string rowvector                               varlist
          =        string rowvector                               varformats, v
> arlabels, varvaluelabels, vartypes
          =        transmorphic scalar                                  vl
          =        real colvector                                levels
          =        transmorphic rowvector                               keys
          =        real colvector                                counts
          =        real matrix                                info
          =        real colvector                                p
          =        real colvector                                inv_p
          =        string scalar                                method
          =        real scalar                               is_sorted
          =        string scalar                                sortedby
          =        real scalar                               panel_is_setup
          =        void                                  new()
          =        void                                  panelsetup()
          =        void                                  store_levels()
          =        void                                  store_keys()
          =        transmorphic matrix                             sort()
          =        void                                  _sort()
          =        transmorphic matrix                             invsort()
          =        real scalar                               nested_within()
          =        real scalar                               equals()
          =        void                                  __inner_drop()
          =        real colvector                                drop_singleton
> s()
          =        void                                  drop_obs()
          =        void                                  keep_obs()
          =        void                                  drop_if()
          =        void                                  keep_if()
          =        real scalar                               is_id()
          =        real colvector                                intersect()
          =        transmorphic scalar                                  extra
          =void Factor::new()
          =void Factor::panelsetup()
          =        real scalar                               level
          =        real scalar                               obs
          =        real colvector                                index
          =transmorphic matrix Factor::sort(transmorphic matrix data)
          =void Factor::_sort(transmorphic matrix data)
          =transmorphic matrix Factor::invsort(transmorphic matrix data)
          =void Factor::store_levels(string scalar newvar)
          =        string scalar                                type
          =void Factor::store_keys(| real scalar sort_by_keys)
          =        string scalar                                lbl
          =        real scalar                               i
          =        string rowvector               lbls
          =        real colvector                                vl_keys
          =        string colvector                  vl_values
          =real scalar Factor::nested_within(transmorphic colvector x)
          =        real scalar                               i, j
          =        transmorphic scalar                              val, prev_v
> al, mv
          =        transmorphic colvector                               y
          =real scalar Factor::equals(class Factor scalar F)
          =void Factor::keep_if(real colvector mask)
          =        drop_obs(selectindex(!mask))
          =void Factor::drop_if(real colvector mask)
          =        drop_obs(selectindex(mask))
          =void Factor::keep_obs(real colvector idx)
          =        real colvector                                tmp
          =        drop_obs(selectindex(tmp))
          =void Factor::drop_obs(real colvector idx)
          =        real scalar                               i, j, num_dropped_
> obs
          =        real colvector                                offset
          =void Factor::__inner_drop(real colvector idx)
          =        real colvector                                dropped_levels
> , offset
          =        real scalar                               num_dropped_obs, n
> um_dropped_levels
          =        dropped_levels = selectindex(!counts)
          =real colvector Factor::drop_singletons(| real colvector fweight,
          =                                   real scalar zero_threshold)
          =        real scalar                               num_singletons
          =        real colvector                                mask, idx
          =        real scalar                               has_fweight
          =        real colvector                                weighted_count
> s
          =                weighted_counts = panelsum(this.sort(fweight), this.
> info)
          =        idx = selectindex(mask[levels, .])
          =real scalar Factor::is_id()
          =real colvector Factor::intersect(real colvector y,
          =                                 | real scalar integers_only,
          =                                   real scalar verbose)
          =        class Factor scalar                                F
          =        real colvector                                index, mask
          =class Factor scalar factor(string rowvector varnames,
          =              | transmorphic colvector touse,
          =                real scalar verbose,
          =                string scalar method,
          =                real scalar sort_levels,
          =                real scalar count_levels,
          =                real scalar hash_ratio,
          =                real scalar save_keys)
          =        class Factor scalar                                F
          =        string rowvector                               vars
          =        transmorphic matrix                             data
          =        real scalar                               i
          =        real scalar                               integers_only
          =        real scalar                               touse_is_selectvar
          =        string scalar                                var, lbl
          =        transmorphic scalar                                  map
          =        real colvector                                keys
          =        string colvector                  values
          =class Factor scalar _factor(transmorphic matrix data,
          =               | real scalar integers_only,
          =                 real scalar verbose,
          =                 string scalar method,
          =                 real scalar sort_levels,
          =                 real scalar count_levels,
          =                 real scalar hash_ratio,
          =                 real scalar save_keys,
          =                 string rowvector vars,
          =                 transmorphic colvector touse)
          =        class Factor scalar                                F, F1, F2
          =        real scalar                               num_obs, num_vars
          =        real scalar                               i
          =        real scalar                               limit0
          =        real scalar                               size0, size1, dict
> _size, max_numkeys1
          =        real matrix                                min_max
          =        real rowvector                             delta
          =        string scalar                                msg, base_metho
> d
          =class Factor scalar join_factors(class Factor scalar F1,
          =                      class Factor scalar F2,
          =                    | real scalar count_levels,
          =                      real scalar save_keys,
          =                      real scalar levels_as_keys)
          =        class Factor scalar                                F
          =        string rowvector                               vars
          =        real scalar                               is_sorted
          =        real scalar                               num_levels, old_nu
> m_levels, N, M, i, j
          =        real scalar                               levels_start, leve
> ls_end
          =        real scalar                               v, last_v, c
          =        real scalar                               num_keys1, num_key
> s2
          =        real rowvector                             key_idx
          =        real colvector                                Y, p, y, level
> s, counts, idx
          =        transmorphic matrix                             keys
          =class Factor scalar __factor_hash0(
          =        real matrix data,
          =        real scalar verbose,
          =        real scalar dict_size,
          =        real scalar count_levels,
          =        real matrix min_max,
          =        real scalar save_keys)
          =        class Factor scalar                                F
          =        real scalar                               K, i, num_levels, 
> num_obs, j
          =        real colvector                                hashes, dict, 
> levels
          =        real rowvector                             min_val, max_val,
>  offsets, has_mv
          =        real matrix                                keys
          =        real colvector                                counts
          =        levels = selectindex(dict)
          =class Factor scalar __factor_hash1(
          =        transmorphic matrix data,
          =        real scalar verbose,
          =        real scalar dict_size,
          =        real scalar count_levels,
          =        real scalar max_numkeys1,
          =        real scalar save_keys)
          -------------------------------------------------- begin findfile ---
          - version 8
          - gettoken fn 0 : 0, parse(" ,")
          - syntax [, ALL noDEScend PATH(string)]
          - if `"`path'"'=="" {
          = if `""'=="" {
          - local path `"`c(adopath)'"'
          = local path `"`"..\"';BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
          - }
          - local n 0
          - local subdir : adosubdir `"`fn'"'
          = local subdir : adosubdir `"ftools_hash1.mata"'
          - if `"`subdir'"' != "" {
          = if `"f"' != "" {
          - gettoken d path : path, parse(";")
          - while `"`d'"'!="" {
          = while `"..\"'!="" {
          - if `"`d'"' != ";" {
          = if `"..\"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"..\"'
          - local ffn `"`d'`fn'"'
          = local ffn `"../ftools_hash1.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"../ftools_hash1.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"../f/ftools_hash1.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"../f/ftools_hash1.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"BASE"'!="" {
          - if `"`d'"' != ";" {
          = if `"BASE"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"BASE"'
          - local ffn `"`d'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\base/ftools_hash1.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\base/ftools_has
> h1.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\base/f/ftools_hash1.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\base/f/ftools_h
> ash1.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"SITE"'!="" {
          - if `"`d'"' != ";" {
          = if `"SITE"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"SITE"'
          - local ffn `"`d'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\site/ftools_hash1.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\site/ftools_has
> h1.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\site/f/ftools_hash1.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\site/f/ftools_h
> ash1.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"."'!="" {
          - if `"`d'"' != ";" {
          = if `"."' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"."'
          - local ffn `"`d'`fn'"'
          = local ffn `"./ftools_hash1.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"./ftools_hash1.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"./f/ftools_hash1.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"./f/ftools_hash1.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"PERSONAL"'!="" {
          - if `"`d'"' != ";" {
          = if `"PERSONAL"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"PERSONAL"'
          - local ffn `"`d'`fn'"'
          = local ffn `"C:\Users\dballaelliott\ado\personal/ftools_hash1.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Users\dballaelliott\ado\personal/ftools_h
> ash1.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"C:\Users\dballaelliott\ado\personal/f/ftools_hash1.mata
> "'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Users\dballaelliott\ado\personal/f/ftools
> _hash1.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"PLUS"'!="" {
          - if `"`d'"' != ";" {
          = if `"PLUS"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"PLUS"'
          - local ffn `"`d'`fn'"'
          = local ffn `"c:\ado\plus/ftools_hash1.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"c:\ado\plus/ftools_hash1.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"c:\ado\plus/f/ftools_hash1.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"c:\ado\plus/f/ftools_hash1.mata"'
          - if _rc==0 {
          - di as txt `"`ffn'"'
          = di as txt `"c:\ado\plus/f/ftools_hash1.mata"'
          - if "`all'"=="" {
          = if ""=="" {
          - ret local fn `"`ffn'"'
          = ret local fn `"c:\ado\plus/f/ftools_hash1.mata"'
          - exit
          ---------------------------------------------------- end findfile ---
          =class Factor scalar __factor_hash1_1(
          =        transmorphic matrix data,
          =    real scalar verbose,
          =    real scalar dict_size,
          =    real scalar sort_levels,
          =    real scalar max_numkeys,
          =    real scalar save_keys)
          =        class Factor scalar                                F
          =        real scalar                               h, num_collisions,
>  j, val
          =        real scalar                               obs, start_obs, nu
> m_obs, num_vars
          =        real colvector                                dict
          =        real colvector                                levels
          =        real colvector                                counts
          =        real colvector                                p
          =        transmorphic matrix                             keys
          =        transmorphic rowvector                               key, la
> st_key
          =        string scalar                                msg
          =        assert ((num_vars > 1) + (1) == 1)
          =                key = data[obs]
          =                        } while (obs <= num_obs ? data[obs] == last_
> key : 0 )
          =                        key = data[obs]
          =                        keys[val] = key
          =                else if (key == keys[val]) {
          =                                        keys[val] = key
          =                                if (key == keys[val]) {
          =class Factor scalar __factor_hash1_0(
          =        transmorphic matrix data,
          =    real scalar verbose,
          =    real scalar dict_size,
          =    real scalar sort_levels,
          =    real scalar max_numkeys,
          =    real scalar save_keys)
          =        class Factor scalar                                F
          =        real scalar                               h, num_collisions,
>  j, val
          =        real scalar                               obs, start_obs, nu
> m_obs, num_vars
          =        real colvector                                dict
          =        real colvector                                levels
          =        real colvector                                counts
          =        real colvector                                p
          =        transmorphic matrix                             keys
          =        transmorphic rowvector                               key, la
> st_key
          =        string scalar                                msg
          =        assert ((num_vars > 1) + (0) == 1)
          =                key = data[obs, .]
          =                        } while (obs <= num_obs ? data[obs, .] == la
> st_key : 0 )
          =                        key = data[obs, .]
          =                        keys[val, .] = key
          =                else if (key == keys[val, .]) {
          =                                        keys[val, .] = key
          =                                if (key == keys[val, .]) {
          -------------------------------------------------- begin findfile ---
          - version 8
          - gettoken fn 0 : 0, parse(" ,")
          - syntax [, ALL noDEScend PATH(string)]
          - if `"`path'"'=="" {
          = if `""'=="" {
          - local path `"`c(adopath)'"'
          = local path `"`"..\"';BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
          - }
          - local n 0
          - local subdir : adosubdir `"`fn'"'
          = local subdir : adosubdir `"ftools_plugin.mata"'
          - if `"`subdir'"' != "" {
          = if `"f"' != "" {
          - gettoken d path : path, parse(";")
          - while `"`d'"'!="" {
          = while `"..\"'!="" {
          - if `"`d'"' != ";" {
          = if `"..\"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"..\"'
          - local ffn `"`d'`fn'"'
          = local ffn `"../ftools_plugin.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"../ftools_plugin.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"../f/ftools_plugin.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"../f/ftools_plugin.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"BASE"'!="" {
          - if `"`d'"' != ";" {
          = if `"BASE"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"BASE"'
          - local ffn `"`d'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\base/ftools_plugin.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\base/ftools_plu
> gin.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\base/f/ftools_plugin.mata"
> '
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\base/f/ftools_p
> lugin.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"SITE"'!="" {
          - if `"`d'"' != ";" {
          = if `"SITE"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"SITE"'
          - local ffn `"`d'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\site/ftools_plugin.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\site/ftools_plu
> gin.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\site/f/ftools_plugin.mata"
> '
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\site/f/ftools_p
> lugin.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"."'!="" {
          - if `"`d'"' != ";" {
          = if `"."' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"."'
          - local ffn `"`d'`fn'"'
          = local ffn `"./ftools_plugin.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"./ftools_plugin.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"./f/ftools_plugin.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"./f/ftools_plugin.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"PERSONAL"'!="" {
          - if `"`d'"' != ";" {
          = if `"PERSONAL"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"PERSONAL"'
          - local ffn `"`d'`fn'"'
          = local ffn `"C:\Users\dballaelliott\ado\personal/ftools_plugin.mata"
> '
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Users\dballaelliott\ado\personal/ftools_p
> lugin.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"C:\Users\dballaelliott\ado\personal/f/ftools_plugin.mat
> a"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Users\dballaelliott\ado\personal/f/ftools
> _plugin.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"PLUS"'!="" {
          - if `"`d'"' != ";" {
          = if `"PLUS"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"PLUS"'
          - local ffn `"`d'`fn'"'
          = local ffn `"c:\ado\plus/ftools_plugin.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"c:\ado\plus/ftools_plugin.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"c:\ado\plus/f/ftools_plugin.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"c:\ado\plus/f/ftools_plugin.mata"'
          - if _rc==0 {
          - di as txt `"`ffn'"'
          = di as txt `"c:\ado\plus/f/ftools_plugin.mata"'
          - if "`all'"=="" {
          = if ""=="" {
          - ret local fn `"`ffn'"'
          = ret local fn `"c:\ado\plus/f/ftools_plugin.mata"'
          - exit
          ---------------------------------------------------- end findfile ---
          =class Factor scalar __factor_gtools(
          =        string rowvector vars,
          =        string scalar touse,
          =        real scalar verbose,
          =        real scalar sort_levels,
          =        real scalar count_levels,
          =        real scalar save_keys)
          =        class Factor scalar                                F
          =        real scalar                               num_vars, num_leve
> ls, num_obs
          =        string scalar                                levels_var, tag
> _var, counts_var, cmd, if_cmd, counts_cmd
          =        real colvector                                levels, counts
> , idx
          =        real matrix                                keys
          -------------------------------------------------- begin findfile ---
          - version 8
          - gettoken fn 0 : 0, parse(" ,")
          - syntax [, ALL noDEScend PATH(string)]
          - if `"`path'"'=="" {
          = if `""'=="" {
          - local path `"`c(adopath)'"'
          = local path `"`"..\"';BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
          - }
          - local n 0
          - local subdir : adosubdir `"`fn'"'
          = local subdir : adosubdir `"fcollapse_functions.mata"'
          - if `"`subdir'"' != "" {
          = if `"f"' != "" {
          - gettoken d path : path, parse(";")
          - while `"`d'"'!="" {
          = while `"..\"'!="" {
          - if `"`d'"' != ";" {
          = if `"..\"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"..\"'
          - local ffn `"`d'`fn'"'
          = local ffn `"../fcollapse_functions.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"../fcollapse_functions.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"../f/fcollapse_functions.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"../f/fcollapse_functions.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"BASE"'!="" {
          - if `"`d'"' != ";" {
          = if `"BASE"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"BASE"'
          - local ffn `"`d'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\base/fcollapse_functions.m
> ata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\base/fcollapse_
> functions.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\base/f/fcollapse_functions
> .mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\base/f/fcollaps
> e_functions.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"SITE"'!="" {
          - if `"`d'"' != ";" {
          = if `"SITE"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"SITE"'
          - local ffn `"`d'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\site/fcollapse_functions.m
> ata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\site/fcollapse_
> functions.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"C:\Program Files\Stata16\ado\site/f/fcollapse_functions
> .mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Program Files\Stata16\ado\site/f/fcollaps
> e_functions.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"."'!="" {
          - if `"`d'"' != ";" {
          = if `"."' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"."'
          - local ffn `"`d'`fn'"'
          = local ffn `"./fcollapse_functions.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"./fcollapse_functions.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"./f/fcollapse_functions.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"./f/fcollapse_functions.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"PERSONAL"'!="" {
          - if `"`d'"' != ";" {
          = if `"PERSONAL"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"PERSONAL"'
          - local ffn `"`d'`fn'"'
          = local ffn `"C:\Users\dballaelliott\ado\personal/fcollapse_functions
> .mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Users\dballaelliott\ado\personal/fcollaps
> e_functions.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"C:\Users\dballaelliott\ado\personal/f/fcollapse_functio
> ns.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"C:\Users\dballaelliott\ado\personal/f/fcolla
> pse_functions.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
          - }
          - }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `";"'!="" {
          - if `"`d'"' != ";" {
          = if `";"' != ";" {
            local d : sysdir `"`d'"'
            local ffn `"`d'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
            if "`descend'"=="" {
            local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
            capture confirm file `"`ffn'"'
            if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `"`ffn'"'
            local n 1
            }
            }
            }
          - gettoken d path : path, parse(" ;")
          - }
          - while `"`d'"'!="" {
          = while `"PLUS"'!="" {
          - if `"`d'"' != ";" {
          = if `"PLUS"' != ";" {
          - local d : sysdir `"`d'"'
          = local d : sysdir `"PLUS"'
          - local ffn `"`d'`fn'"'
          = local ffn `"c:\ado\plus/fcollapse_functions.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"c:\ado\plus/fcollapse_functions.mata"'
          - if _rc==0 {
            di as txt `"`ffn'"'
            if "`all'"=="" {
            ret local fn `"`ffn'"'
            exit
            }
            if `n' {
            ret local fn `"`return(fn)' "`ffn'""'
            }
            else ret local fn `""`ffn'""'
            local n 1
            }
          - if "`descend'"=="" {
          = if ""=="" {
          - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          = local ffn `"c:\ado\plus/f/fcollapse_functions.mata"'
          - capture confirm file `"`ffn'"'
          = capture confirm file `"c:\ado\plus/f/fcollapse_functions.mata"'
          - if _rc==0 {
          - di as txt `"`ffn'"'
          = di as txt `"c:\ado\plus/f/fcollapse_functions.mata"'
          - if "`all'"=="" {
          = if ""=="" {
          - ret local fn `"`ffn'"'
          = ret local fn `"c:\ado\plus/f/fcollapse_functions.mata"'
          - exit
          ---------------------------------------------------- end findfile ---
          =transmorphic scalar aggregate_get_funs()
          =        transmorphic scalar                                  funs
          =real matrix select_nm_num(real colvector data) {
          =string matrix select_nm_str(string colvector data) {
          =transmorphic colvector aggregate_count(class Factor scalar F, transm
> orphic colvector data, real colvector weights, string scalar wtype)
          =                return( panelsum(data :<., 1, F.info) )
          =                return( panelsum(data :<., weights, F.info) )
          =real colvector aggregate_sum(class Factor scalar F, real colvector d
> ata, real colvector weights, string scalar wtype)
          =                return( panelsum(editmissing(data, 0), 1, F.info) )
          =                real colvector sum_weights
          =                sum_weights = panelsum(weights :* (data :< .), F.inf
> o) :/ panelsum(data :< ., F.info)
          =                return( panelsum(editmissing(data, 0), weights, F.in
> fo) :/ sum_weights )
          =                return( panelsum(editmissing(data, 0), weights, F.in
> fo) )
          =real colvector aggregate_nansum(class Factor scalar F, real colvecto
> r data, real colvector weights, string scalar wtype)
          =        return( panelsum(editmissing(data, 0), 1, F.info) :/ (panels
> um(data :<., 1, F.info) :> 0) )
          =real colvector aggregate_mean(class Factor scalar F, real colvector 
> data, real colvector weights, string scalar wtype)
          =real colvector aggregate_min(class Factor scalar F, real colvector d
> ata, real colvector weights, string scalar wtype)
          =        real scalar                   i
          =        real colvector                    results
          =real colvector aggregate_max(class Factor scalar F, real colvector d
> ata, real colvector weights, string scalar wtype)
          =        real scalar                   i
          =        real colvector                    results
          =transmorphic colvector aggregate_first(class Factor scalar F, transm
> orphic colvector data, real colvector weights, string scalar wtype)
          =        real scalar                   i
          =        transmorphic colvector                   results
          =transmorphic colvector aggregate_last(class Factor scalar F, transmo
> rphic colvector data, real colvector weights, string scalar wtype)
          =        real scalar                   i
          =        transmorphic colvector                   results
          =transmorphic colvector aggregate_firstnm(class Factor scalar F, tran
> smorphic colvector data, real colvector weights, string scalar wtype)
          =        real scalar                   i
          =        transmorphic colvector                   results, tmp
          =        pointer(real colvector)               fp
          =transmorphic colvector aggregate_lastnm(class Factor scalar F, trans
> morphic colvector data, real colvector weights, string scalar wtype)
          =        real scalar                   i
          =        transmorphic colvector                   results, tmp
          =        pointer(real colvector)               fp
          =real colvector aggregate_percent(class Factor scalar F, transmorphic
>  colvector data, real colvector weights, string scalar wtype)
          =        real colvector                    results
          =real colvector aggregate_quantile(class Factor scalar F, real colvec
> tor data, real colvector weights, string scalar wtype,
          =                            real scalar P)
          =        real scalar                   i
          =        real colvector                    results, tmp_data, tmp_wei
> ghts
          =real colvector aggregate_iqr(class Factor scalar F, real colvector d
> ata, real colvector weights, string scalar wtype)
          =        real scalar                   i
          =        real colvector                    results, tmp_data, tmp_wei
> ghts, P
          =        real rowvector                             tmp_iqr
          =real colvector aggregate_sd(class Factor scalar F, real colvector da
> ta, real colvector weights, string scalar wtype)
          =        real scalar                   i
          =        real colvector                    results, adjustment, tmp_w
> eights
        ---------------------------------------------- begin ms_get_version ---
        - syntax anything(name=ado), [min_version(string) min_date(string)]
        - mata: st_local("package_version", get_version("`ado'"))
        = mata: st_local("package_version", get_version("reghdfe"))
        - c_local package_version "`package_version'"
        = c_local package_version "5.7.3 13nov2019"
        - loc _ `package_version'
        = loc _ 5.7.3 13nov2019
        - gettoken version_number _ : _
        - gettoken version_date _ : _
        - c_local version_number "`version_number'"
        = c_local version_number "5.7.3"
        - c_local version_date "`version_date'"
        = c_local version_date "13nov2019"
        - if ("`min_version'" != "") {
        = if ("" != "") {
          loc ok 0
          cap mata: st_local("ok", strofreal(strtoreal(tokens(subinstr("`versio
> n_number'", ".", " "))) * (1e5, 1e3, 1)' >= strtoreal(tokens(subinstr("`min_v
> ersion'", ".", " "))) * (1e5, 1e3, 1)'))
          _assert `ok', msg("you are using version `version_number' of `ado', b
> ut require version `min_version'")
          }
        - if ("`min_date'" != "") {
        = if ("" != "") {
          loc ok = !mi(date("`version_date'", "DMY")) & (date("`version_date'",
>  "DMY") >= date("`min_date'", "DMY"))
          _assert `ok', msg("you are using `ado' from `version_date', but requi
> re a version from at `min_date' or later")
          }
        ------------------------------------------------ end ms_get_version ---
        ---------------------------------------------------- begin findfile ---
        - version 8
        - gettoken fn 0 : 0, parse(" ,")
        - syntax [, ALL noDEScend PATH(string)]
        - if `"`path'"'=="" {
        = if `""'=="" {
        - local path `"`c(adopath)'"'
        = local path `"`"..\"';BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
        - }
        - local n 0
        - local subdir : adosubdir `"`fn'"'
        = local subdir : adosubdir `"reghdfe_bipartite.mata"'
        - if `"`subdir'"' != "" {
        = if `"r"' != "" {
        - gettoken d path : path, parse(";")
        - while `"`d'"'!="" {
        = while `"..\"'!="" {
        - if `"`d'"' != ";" {
        = if `"..\"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"..\"'
        - local ffn `"`d'`fn'"'
        = local ffn `"../reghdfe_bipartite.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"../reghdfe_bipartite.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"../r/reghdfe_bipartite.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"../r/reghdfe_bipartite.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"BASE"'!="" {
        - if `"`d'"' != ";" {
        = if `"BASE"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"BASE"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\base/reghdfe_bipartite.mata"
> '
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\base/reghdfe_bipa
> rtite.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\base/r/reghdfe_bipartite.mat
> a"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\base/r/reghdfe_bi
> partite.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"SITE"'!="" {
        - if `"`d'"' != ";" {
        = if `"SITE"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"SITE"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\site/reghdfe_bipartite.mata"
> '
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\site/reghdfe_bipa
> rtite.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\site/r/reghdfe_bipartite.mat
> a"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\site/r/reghdfe_bi
> partite.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"."'!="" {
        - if `"`d'"' != ";" {
        = if `"."' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"."'
        - local ffn `"`d'`fn'"'
        = local ffn `"./reghdfe_bipartite.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"./reghdfe_bipartite.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"./r/reghdfe_bipartite.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"./r/reghdfe_bipartite.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"PERSONAL"'!="" {
        - if `"`d'"' != ";" {
        = if `"PERSONAL"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"PERSONAL"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Users\dballaelliott\ado\personal/reghdfe_bipartite.mat
> a"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Users\dballaelliott\ado\personal/reghdfe_bi
> partite.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Users\dballaelliott\ado\personal/r/reghdfe_bipartite.m
> ata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Users\dballaelliott\ado\personal/r/reghdfe_
> bipartite.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"PLUS"'!="" {
        - if `"`d'"' != ";" {
        = if `"PLUS"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"PLUS"'
        - local ffn `"`d'`fn'"'
        = local ffn `"c:\ado\plus/reghdfe_bipartite.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"c:\ado\plus/reghdfe_bipartite.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"c:\ado\plus/r/reghdfe_bipartite.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"c:\ado\plus/r/reghdfe_bipartite.mata"'
        - if _rc==0 {
        - di as txt `"`ffn'"'
        = di as txt `"c:\ado\plus/r/reghdfe_bipartite.mata"'
        - if "`all'"=="" {
        = if ""=="" {
        - ret local fn `"`ffn'"'
        = ret local fn `"c:\ado\plus/r/reghdfe_bipartite.mata"'
        - exit
        ------------------------------------------------------ end findfile ---
        =        real scalar                               verbose
        =        real scalar                               N
        =        real scalar                               N1
        =        real scalar                               N2
        =        real scalar                               N12
        =        pointer(class Factor scalar) scalar                 PF1
        =        pointer(class Factor scalar) scalar                 PF2
        =        class Factor scalar                                F12
        =        class Factor scalar                                F12_1
        =        class Factor scalar                                F12_2
        =        real colvector                                queue
        =        real colvector                                stack
        =        real colvector                                keys1_by_2
        =        real colvector                                keys2_by_1
        =        real scalar                               num_subgraphs
        =        real colvector                              subgraph_id
        =        real colvector                                cores
        =        real colvector                                drop_order
        =        real scalar               N_drop
        =        real colvector              mask
        =        real scalar               prune
        =        real colvector                drop2idx
        =        real matrix                drop2info
        =        real colvector              sorted_w
        =        real scalar                               has_weights
        =        real colvector              sorted_true_weight
        =        void                                  init()
        =        real scalar                                  init_zigzag()
        =        void                                  compute_cores()
        =        void                                  prune_1core()
        =        real matrix                             expand_1core()
        =        real matrix                             partial_out()
        =        real matrix                             __partial_out_map()
        =        real matrix                             __partial_out_laplacia
> n()
        =void BipartiteGraph::init(pointer(class Factor scalar) scalar PF1,
        =                            pointer(class Factor scalar) scalar PF2,
        =                            real scalar verbose)
        =real scalar BipartiteGraph::init_zigzag(| real scalar save_subgraphs)
        =        real colvector                                counter1
        =        real colvector                                counter2
        =        real colvector                                done1
        =        real colvector                                done2
        =        real scalar                               i_stack
        =        real scalar                               last_i
        =        real scalar                               start_j
        =        real scalar                               i_queue
        =        real scalar                               id
        =        real scalar                               j
        =        real scalar                               k
        =        real scalar                               c
        =        real scalar                               i
        =        real matrix                                matches
        =void BipartiteGraph::compute_cores()
        =        class Factor scalar                                Fbin
        =        real scalar                               is_firm
        =        real scalar                               M, ND, j, jj
        =        real scalar                               i_v, i_u, i_w
        =        real scalar                               pv, pu, pw
        =        real scalar                               v, u, w
        =        real scalar                               dv, du
        =        real colvector                                bin, deg, pos, i
> nvpos, vert, neighbors
        =void BipartiteGraph::prune_1core(| real colvector weight)
        =        real scalar               N_drop2, i, j, i1, i2, j1, j2, K_dro
> p2
        =        real colvector                drop1, drop2
        =        real colvector                tmp_mask
        =        real colvector                proj1, proj2
        =        real colvector              w, tmp_weight
        =        drop1 = selectindex(cores[1..N1] :== 1)
        =        tmp_weight[selectindex(mask)] = J(sum(mask), 1, 0)
        =        asarray((*PF1).extra, "weighted_counts", panelsum(w, (*PF1).in
> fo))
        =        asarray((*PF2).extra, "weighted_counts", panelsum(w, (*PF2).in
> fo))
        =real matrix BipartiteGraph::expand_1core(real matrix y)
        =    real scalar               zero_weights
        =    real colvector              sorted_y
        =    real scalar               i, j, j1, j2, i2, k1, k2, nk
        =    real matrix                tmp_y
        =    real colvector                tmp_w, tmp_idx, new_w
        =    real rowvector             tmp_mean
        =real matrix BipartiteGraph::partial_out(real matrix y)
        =real matrix BipartiteGraph::__partial_out_map(real matrix y)
        =real matrix BipartiteGraph::__partial_out_laplacian(real matrix y)
        ---------------------------------------------------- begin findfile ---
        - version 8
        - gettoken fn 0 : 0, parse(" ,")
        - syntax [, ALL noDEScend PATH(string)]
        - if `"`path'"'=="" {
        = if `""'=="" {
        - local path `"`c(adopath)'"'
        = local path `"`"..\"';BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
        - }
        - local n 0
        - local subdir : adosubdir `"`fn'"'
        = local subdir : adosubdir `"reghdfe_class.mata"'
        - if `"`subdir'"' != "" {
        = if `"r"' != "" {
        - gettoken d path : path, parse(";")
        - while `"`d'"'!="" {
        = while `"..\"'!="" {
        - if `"`d'"' != ";" {
        = if `"..\"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"..\"'
        - local ffn `"`d'`fn'"'
        = local ffn `"../reghdfe_class.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"../reghdfe_class.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"../r/reghdfe_class.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"../r/reghdfe_class.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"BASE"'!="" {
        - if `"`d'"' != ";" {
        = if `"BASE"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"BASE"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\base/reghdfe_class.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\base/reghdfe_clas
> s.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\base/r/reghdfe_class.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\base/r/reghdfe_cl
> ass.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"SITE"'!="" {
        - if `"`d'"' != ";" {
        = if `"SITE"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"SITE"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\site/reghdfe_class.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\site/reghdfe_clas
> s.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\site/r/reghdfe_class.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\site/r/reghdfe_cl
> ass.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"."'!="" {
        - if `"`d'"' != ";" {
        = if `"."' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"."'
        - local ffn `"`d'`fn'"'
        = local ffn `"./reghdfe_class.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"./reghdfe_class.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"./r/reghdfe_class.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"./r/reghdfe_class.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"PERSONAL"'!="" {
        - if `"`d'"' != ";" {
        = if `"PERSONAL"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"PERSONAL"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Users\dballaelliott\ado\personal/reghdfe_class.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Users\dballaelliott\ado\personal/reghdfe_cl
> ass.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Users\dballaelliott\ado\personal/r/reghdfe_class.mata"
> '
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Users\dballaelliott\ado\personal/r/reghdfe_
> class.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"PLUS"'!="" {
        - if `"`d'"' != ";" {
        = if `"PLUS"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"PLUS"'
        - local ffn `"`d'`fn'"'
        = local ffn `"c:\ado\plus/reghdfe_class.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"c:\ado\plus/reghdfe_class.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"c:\ado\plus/r/reghdfe_class.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"c:\ado\plus/r/reghdfe_class.mata"'
        - if _rc==0 {
        - di as txt `"`ffn'"'
        = di as txt `"c:\ado\plus/r/reghdfe_class.mata"'
        - if "`all'"=="" {
        = if ""=="" {
        - ret local fn `"`ffn'"'
        = ret local fn `"c:\ado\plus/r/reghdfe_class.mata"'
        - exit
        ------------------------------------------------------ end findfile ---
        =        real scalar               G
        =        real scalar               N
        =        real scalar               M
        =        class Factor rowvector               factors
        =        real colvector                sample
        =        string rowvector               absvars
        =        string rowvector               ivars
        =        string rowvector               cvars
        =        real scalar               has_intercept
        =        real rowvector             intercepts
        =        real rowvector             num_slopes
        =        real scalar               num_singletons
        =        real scalar               save_any_fe
        =        real scalar               save_all_fe
        =        string rowvector               targets
        =        real rowvector             save_fe
        =        real scalar               report_constant
        =        real scalar               compute_constant
        =        real scalar                  tolerance
        =        real scalar                  extra_tolerance
        =        real scalar               maxiter
        =        string scalar                transform
        =        string scalar                acceleration
        =        real scalar               accel_start
        =                        slope_method
        =        real scalar               prune
        =        real scalar               abort
        =        real scalar               accel_freq
        =        real scalar               storing_alphas
        =        real scalar                  conlim
        =        real scalar                  btol
        =        real scalar                               always_run_lsmr_prec
> onditioner
        =        real scalar                               min_ok
        =        class BipartiteGraph scalar        bg
        =        real colvector                pruned_weight
        =        real scalar               prune_g1
        =        real scalar               prune_g2
        =        real scalar               num_pruned
        =        real scalar               verbose
        =        real scalar               timeit
        =        real scalar               compact
        =        real scalar               poolsize
        =        real scalar               store_sample
        =        real scalar                  finite_condition
        =        real scalar                  compute_rre
        =        real scalar                  rre_depvar_norm
        =        real colvector                rre_varname
        =        real colvector                rre_true_residual
        =        string scalar                panelvar
        =        string scalar                timevar
        =        real rowvector             not_basevar
        =        string scalar                fullindepvars
        =        real scalar               has_weights
        =        real colvector              weight
        =        string scalar                weight_var
        =        string scalar                weight_type
        =        real scalar               G_extended
        =        real scalar               df_a_redundant
        =        real scalar               df_a_initial
        =        real scalar               df_a
        =        real colvector                doflist_M
        =        real colvector                doflist_K
        =        real colvector                doflist_M_is_exact
        =        real colvector                doflist_M_is_nested
        =        real colvector                is_slope
        =        real scalar               df_a_nested
        =        string scalar                vcetype
        =        real scalar               num_clusters
        =        string rowvector               clustervars
        =        string rowvector               base_clustervars
        =        string scalar                vceextra
        =        string scalar                varlist
        =        string scalar                depvar
        =        string scalar                indepvars
        =        string scalar                tousevar
        =        real scalar               drop_singletons
        =        string scalar                absorb
        =        string scalar                select_if
        =        string scalar                select_in
        =        string scalar                model
        =        string scalar                summarize_stats
        =        real scalar               summarize_quietly
        =        string rowvector       dofadjustments
        =        string scalar               groupvar
        =        string scalar                residuals
        =        real colvector              residuals_vector
        =        real rowvector             kept
        =        string scalar                diopts
        =        string scalar                cmdline
        =        string scalar                subcmd
        =        string scalar                title
        =        real scalar               converged
        =        real scalar               iteration_count
        =        string rowvector               extended_absvars
        =        string scalar                notes
        =        real scalar               df_r
        =        real scalar               df_m
        =        real scalar               N_clust
        =        real scalar               N_clust_list
        =        real scalar                  rss
        =        real scalar                  rmse
        =        real scalar                  F
        =        real scalar                  tss
        =        real scalar                  tss_within
        =        real scalar                  sumweights
        =        real scalar                  r2
        =        real scalar                  r2_within
        =        real scalar                  r2_a
        =        real scalar                  r2_a_within
        =        real scalar                  ll
        =        real scalar                  ll_0
        =        real scalar                  accuracy
        =        real rowvector             means
        =        real rowvector                             all_stdevs
        =        void                  new()
        =        void                  destroy()
        =        void                  load_weights()
        =        void                  update_sorted_weights()
        =        void                  update_cvar_objects()
        =        real matrix                partial_out()
        =        real matrix                partial_out_pool()
        =        void                  _partial_out()
        =        real matrix             project_one_fe()
        =        void                  prune_1core()
        =        void                  _expand_1core()
        =        void                  estimate_dof()
        =        void                  estimate_cond()
        =        void                  save_touse()
        =        void                  store_alphas()
        =        void                  save_variable()
        =        void                  post_footnote()
        =        void                  post()
        =        class FixedEffects scalar          reload()
        =        real scalar                  lsmr_norm()
        =        real colvector                lsmr_A_mult()
        =        real colvector                lsmr_At_mult()
        =void FixedEffects::new()
        =void FixedEffects::destroy()
        =void FixedEffects::load_weights(string scalar weighttype, string scala
> r weightvar, real colvector weight, real scalar verbose)
        =        real scalar                               g
        =        pointer(class Factor scalar) scalar         pf
        =        real matrix                precond
        =        string scalar               cvars_g
        =void FixedEffects::update_sorted_weights(real colvector weight)
        =        real scalar               g
        =        real scalar                  min_w
        =        real colvector              w
        =        pointer(class Factor scalar) scalar         pf
        =                asarray((*pf).extra, "weighted_counts", panelsum(w, (*
> pf).info))
        =void FixedEffects::update_cvar_objects()
        =        real scalar               g
        =        pointer(class Factor scalar) scalar         pf
        =real matrix FixedEffects::partial_out(transmorphic matrix data,
        =                                                                      
>   | real scalar save_tss,
        =                                                                      
>     real scalar standardize_data,
        =                                                                      
>     real scalar first_is_depvar)
        =        real matrix             y
        =        string rowvector               vars
        =        real scalar               i
        =        real scalar               k
        =real matrix FixedEffects::partial_out_pool(transmorphic matrix vars,
        =                                                                      
>              real scalar save_tss,
        =                                                                      
>              real scalar standardize_data,
        =                                                                      
>              real scalar first_is_depvar,
        =                                                                      
>              real scalar step,
        =                                                                      
>              real matrix y)
        =        real matrix             part_y
        =        real scalar               i, j, ii
        =        real scalar               k
        =        string rowvector       keepvars
        =void FixedEffects::store_alphas(transmorphic matrix d_varname)
        =        real scalar               g, i, j
        =        string rowvector       varlabel
        =        real colvector              d
        =        real rowvector             tmp_stdev
        =void FixedEffects::_partial_out(real matrix y,
        =                                                                | real
>  scalar save_tss,
        =                                                                  real
>  scalar standardize_data,
        =                                                                  real
>  scalar first_is_depvar,
        =                                                                  real
>  scalar flush)
        =        real rowvector             stdevs, needs_zeroing, kept2
        =        pointer(real matrix function) scalar             funct_transfo
> rm, func_accel
        =        real scalar                  y_mean, collinear_tol
        =        real colvector                lhs
        =        real colvector                alphas
        =        string rowvector       vars
        =        real scalar               i
        =        needs_zeroing = selectindex(!kept2)
        =real matrix FixedEffects::project_one_fe(real matrix y, real scalar g)
        =        class Factor scalar                f
        =        real scalar               store_these_alphas
        =        real matrix                alphas, proj_y
        =void FixedEffects::estimate_dof()
        =        real scalar               has_int
        =        real scalar               g, h
        =        real scalar               num_intercepts
        =        real scalar               i_cluster, i_intercept, j_intercept
        =        real scalar               i
        =        real scalar               j
        =        real scalar               bg_verbose
        =        real scalar               m
        =        real rowvector             SubGs
        =        real rowvector             offsets, idx, zeros, results
        =        real matrix                tmp
        =        real matrix             data
        =        transmorphic colvector               cluster_data
        =        string scalar                absvar, clustervar
        =        class Factor scalar                F
        =        class BipartiteGraph scalar        BG
        =        real scalar               pair_count
        =        idx = selectindex(intercepts)
        =void FixedEffects::prune_1core()
        =        real scalar               i, j, g
        =        real colvector                subgraph_id
        =        real colvector                idx
        =        real rowvector             i_prune
        =void FixedEffects::_expand_1core(real matrix y)
        =void FixedEffects::save_touse(| string scalar touse, real scalar repla
> ce)
        =        real scalar               idx
        =        real colvector                mask
        =void FixedEffects::save_variable(string scalar varname,
        =                                                                   rea
> l matrix data,
        =                                                                 | str
> ing rowvector varlabel)
        =        real rowvector               idx
        =        real scalar               i
        =void FixedEffects::post_footnote()
        =        real matrix                table
        =        string colvector          rowstripe
        =        string rowvector       colstripe
        =        string scalar                text
        =void FixedEffects::post()
        =        string scalar        text
        =        real scalar       i
        =class FixedEffects scalar FixedEffects::reload(real scalar copy)
        =        class FixedEffects scalar ans
        =void FixedEffects::estimate_cond()
        =        real matrix                D1, D2, L
        =        real colvector                lambda
        =        real rowvector             tmp
        =        class Factor scalar                F12
        =real scalar FixedEffects::lsmr_norm(real matrix x)
        =real colvector FixedEffects::lsmr_A_mult(real colvector x)
        =        real scalar g, k, idx_start, idx_end, i
        =        real colvector ans
        =        pointer(class Factor scalar) scalar         pf
        =real colvector FixedEffects::lsmr_At_mult(real colvector x)
        =        real scalar m, g, i, idx_start, idx_end, k
        =        real colvector ans
        =        pointer(class Factor scalar) scalar         pf
        =        real colvector alphas
        =        real matrix tmp_alphas
        =                                alphas[| idx_start , 1 \ idx_end , 1 |
> ] = panelsum((*pf).sort(x :* weight), (*pf).info) :* asarray((*pf).extra, "pr
> econd_intercept")
        =                                alphas[| idx_start , 1 \ idx_end , 1 |
> ] = panelsum((*pf).sort(x), (*pf).info) :* asarray((*pf).extra, "precond_inte
> rcept")
        =                                tmp_alphas = panelsum((*pf).sort(x :* 
> weight :* asarray((*pf).extra, "precond_slopes")), (*pf).info)
        =                                tmp_alphas = panelsum((*pf).sort(x :* 
> asarray((*pf).extra, "precond_slopes")), (*pf).info)
        ---------------------------------------------------- begin findfile ---
        - version 8
        - gettoken fn 0 : 0, parse(" ,")
        - syntax [, ALL noDEScend PATH(string)]
        - if `"`path'"'=="" {
        = if `""'=="" {
        - local path `"`c(adopath)'"'
        = local path `"`"..\"';BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
        - }
        - local n 0
        - local subdir : adosubdir `"`fn'"'
        = local subdir : adosubdir `"reghdfe_constructor.mata"'
        - if `"`subdir'"' != "" {
        = if `"r"' != "" {
        - gettoken d path : path, parse(";")
        - while `"`d'"'!="" {
        = while `"..\"'!="" {
        - if `"`d'"' != ";" {
        = if `"..\"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"..\"'
        - local ffn `"`d'`fn'"'
        = local ffn `"../reghdfe_constructor.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"../reghdfe_constructor.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"../r/reghdfe_constructor.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"../r/reghdfe_constructor.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"BASE"'!="" {
        - if `"`d'"' != ";" {
        = if `"BASE"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"BASE"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\base/reghdfe_constructor.mat
> a"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\base/reghdfe_cons
> tructor.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\base/r/reghdfe_constructor.m
> ata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\base/r/reghdfe_co
> nstructor.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"SITE"'!="" {
        - if `"`d'"' != ";" {
        = if `"SITE"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"SITE"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\site/reghdfe_constructor.mat
> a"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\site/reghdfe_cons
> tructor.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\site/r/reghdfe_constructor.m
> ata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\site/r/reghdfe_co
> nstructor.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"."'!="" {
        - if `"`d'"' != ";" {
        = if `"."' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"."'
        - local ffn `"`d'`fn'"'
        = local ffn `"./reghdfe_constructor.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"./reghdfe_constructor.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"./r/reghdfe_constructor.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"./r/reghdfe_constructor.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"PERSONAL"'!="" {
        - if `"`d'"' != ";" {
        = if `"PERSONAL"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"PERSONAL"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Users\dballaelliott\ado\personal/reghdfe_constructor.m
> ata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Users\dballaelliott\ado\personal/reghdfe_co
> nstructor.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Users\dballaelliott\ado\personal/r/reghdfe_constructor
> .mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Users\dballaelliott\ado\personal/r/reghdfe_
> constructor.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"PLUS"'!="" {
        - if `"`d'"' != ";" {
        = if `"PLUS"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"PLUS"'
        - local ffn `"`d'`fn'"'
        = local ffn `"c:\ado\plus/reghdfe_constructor.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"c:\ado\plus/reghdfe_constructor.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"c:\ado\plus/r/reghdfe_constructor.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"c:\ado\plus/r/reghdfe_constructor.mata"'
        - if _rc==0 {
        - di as txt `"`ffn'"'
        = di as txt `"c:\ado\plus/r/reghdfe_constructor.mata"'
        - if "`all'"=="" {
        = if ""=="" {
        - ret local fn `"`ffn'"'
        = ret local fn `"c:\ado\plus/r/reghdfe_constructor.mata"'
        - exit
        ------------------------------------------------------ end findfile ---
        =class FixedEffects scalar fixed_effects(string rowvector absvars,
        =                                                   | string scalar tou
> se,
        =                                                         string scalar
>  weighttype,
        =                                                         string scalar
>  weightvar,
        =                                                         real scalar d
> rop_singletons,
        =                                                         real scalar v
> erbose)
        =        class FixedEffects scalar          S
        =        string scalar               absvar, cvars
        =        real scalar               i, j, g, gg, remaining
        =        real colvector                idx
        =        real scalar               spaces
        =        real scalar               num_singletons_i
        =        real matrix             cvar_data
        =        pointer(class Factor scalar) scalar         pf
        =        S.sample = selectindex(st_data(., touse))
        ---------------------------------------------------- begin findfile ---
        - version 8
        - gettoken fn 0 : 0, parse(" ,")
        - syntax [, ALL noDEScend PATH(string)]
        - if `"`path'"'=="" {
        = if `""'=="" {
        - local path `"`c(adopath)'"'
        = local path `"`"..\"';BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
        - }
        - local n 0
        - local subdir : adosubdir `"`fn'"'
        = local subdir : adosubdir `"reghdfe_common.mata"'
        - if `"`subdir'"' != "" {
        = if `"r"' != "" {
        - gettoken d path : path, parse(";")
        - while `"`d'"'!="" {
        = while `"..\"'!="" {
        - if `"`d'"' != ";" {
        = if `"..\"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"..\"'
        - local ffn `"`d'`fn'"'
        = local ffn `"../reghdfe_common.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"../reghdfe_common.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"../r/reghdfe_common.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"../r/reghdfe_common.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"BASE"'!="" {
        - if `"`d'"' != ";" {
        = if `"BASE"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"BASE"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\base/reghdfe_common.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\base/reghdfe_comm
> on.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\base/r/reghdfe_common.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\base/r/reghdfe_co
> mmon.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"SITE"'!="" {
        - if `"`d'"' != ";" {
        = if `"SITE"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"SITE"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\site/reghdfe_common.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\site/reghdfe_comm
> on.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\site/r/reghdfe_common.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\site/r/reghdfe_co
> mmon.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"."'!="" {
        - if `"`d'"' != ";" {
        = if `"."' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"."'
        - local ffn `"`d'`fn'"'
        = local ffn `"./reghdfe_common.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"./reghdfe_common.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"./r/reghdfe_common.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"./r/reghdfe_common.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"PERSONAL"'!="" {
        - if `"`d'"' != ";" {
        = if `"PERSONAL"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"PERSONAL"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Users\dballaelliott\ado\personal/reghdfe_common.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Users\dballaelliott\ado\personal/reghdfe_co
> mmon.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Users\dballaelliott\ado\personal/r/reghdfe_common.mata
> "'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Users\dballaelliott\ado\personal/r/reghdfe_
> common.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"PLUS"'!="" {
        - if `"`d'"' != ";" {
        = if `"PLUS"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"PLUS"'
        - local ffn `"`d'`fn'"'
        = local ffn `"c:\ado\plus/reghdfe_common.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"c:\ado\plus/reghdfe_common.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"c:\ado\plus/r/reghdfe_common.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"c:\ado\plus/r/reghdfe_common.mata"'
        - if _rc==0 {
        - di as txt `"`ffn'"'
        = di as txt `"c:\ado\plus/r/reghdfe_common.mata"'
        - if "`all'"=="" {
        = if ""=="" {
        - ret local fn `"`ffn'"'
        = ret local fn `"c:\ado\plus/r/reghdfe_common.mata"'
        - exit
        ------------------------------------------------------ end findfile ---
        =string rowvector clean_tokens(string scalar vars)
        =        string rowvector               ans
        =        real scalar                               i
        =void _st_data_wrapper(real matrix index, string rowvector vars, real m
> atrix data, real scalar verbose)
        =        real rowvector                     is_interaction
        =        string rowvector       fixed_vars
        =        real scalar                       i, k
        =real rowvector function reghdfe_standardize(real matrix A)
        =        real rowvector                             stdevs, means
        =        real scalar                               K, N
        =real rowvector safe_divide(real rowvector numerator, real rowvector de
> nominator, | real scalar epsi) {
        =real matrix function reghdfe_cholqrsolve(real matrix A,
        =                                      real matrix B,
        =                                    | real scalar useqr)
        =        real matrix C
        =void function reghdfe_post_ols(class FixedEffects scalar S,
        =                                 real matrix X,
        =                                 string scalar bname,
        =                                 string scalar Vname,
        =                                 string scalar nname,
        =                                 string scalar rname,
        =                                 string scalar dfrname)
        =        real scalar                               N
        =        real scalar                               rank
        =        real scalar                               df_r
        =        real colvector                                b
        =        real matrix                                V
        =        real colvector                              resid
        =        real scalar                                  eps
        =        real scalar                               i
        =        real rowvector                             kept
        =        real colvector                                not_basevar
        =        real colvector                                idx
        =        real colvector                                temp_b
        =        real matrix                                temp_V
        =        real scalar                               k
        =                idx = selectindex(S.not_basevar)
        =void function reghdfe_solve_ols(class FixedEffects scalar S,
        =                                  real matrix X,
        =                                  real colvector b,
        =                                  real matrix V,
        =                                  real scalar N,
        =                                  real scalar rank,
        =                                  real scalar df_r,
        =                                  real colvector resid,
        =                                  real rowvector kept,
        =                                  string scalar vce_mode,
        =                                | real colvector true_w)
        =        real scalar                               K, KK, tmp_N
        =        real matrix                                xx, inv_xx, W, inv_
> V, just_X
        =        real colvector                                w
        =        real scalar                               used_df_r
        =        real scalar                               dof_adj
        =        real scalar                               is_standardized
        =        real scalar                                  stdev_y
        =        real rowvector                             stdev_x
        =real matrix reghdfe_robust(class FixedEffects scalar S,
        =                        real matrix X,
        =                                                real matrix D,
        =                                                real colvector resid,
        =                                                real colvector w,
        =                                                real scalar N,
        =                                                real scalar K,
        =                                                string scalar vce_mode
> ,
        =                                            real colvector true_w)
        =        real matrix                                M, V
        =        real scalar                               dof_adj
        =real matrix reghdfe_cluster(class FixedEffects scalar S,
        =                        real matrix X,
        =                                                real matrix D,
        =                                                real colvector resid,
        =                                                real colvector w,
        =                                                real scalar N,
        =                                                real scalar K,
        =                                                string scalar vce_mode
> )
        =        real matrix                                M, V
        =        real scalar                               dof_adj, N_clust, df
> _r, nested_adj
        =        real scalar                               Q, q, g, sign, i, j
        =        pointer(class Factor scalar) rowvector FPlist
        =        pointer(class Factor scalar) scalar                 FP
        =        string rowvector                               vars
        =        string scalar                                var, var_with_spa
> ces
        =        real scalar                               clustervar_is_absvar
> , required_fix
        =        real matrix                                tuples
        =        real rowvector                             tuple
        =        real rowvector                             N_clust_list
        =        real matrix                                joined_levels
        =        real scalar                               Msize
        =real matrix reghdfe_vce_cluster_meat(pointer(class Factor scalar) scal
> ar FP,
        =                                  real matrix X,
        =                                  real colvector resid,
        =                                  real scalar Msize,
        =                                  real scalar compute_constant)
        =        real scalar                               i, N_clust
        =        real matrix                             X_sorted
        =        real colvector                              resid_sorted
        =        real matrix                                X_tmp
        =        real colvector                                resid_tmp
        =        real rowvector                             Xe_tmp
        =        real matrix                                M
        =real matrix reghdfe_choose_n_k(real scalar n, real scalar k, real matr
> ix prev_ans)
        =        real rowvector v
        =        real scalar q
        =        real matrix candidate
        =        real matrix ans
        =real scalar function reghdfe_fix_psd(real matrix V) {
        =        real matrix                                U
        =        real matrix                                lambda
        =        real scalar                               required_fix
        =real matrix reghdfe_rmcoll(string rowvector varnames,
        =                        real matrix xx,
        =                        real rowvector kept)
        =        real scalar                               K, num_dropped
        =        real matrix                                inv_xx, smat, alt_i
> nv_xx
        =        real rowvector                             vl_drop, vl_keep
        =        kept = selectindex(!smat)
        =void reghdfe_extend_b_and_inv_xx(
        =        real rowvector     means,
        =        real scalar               N,
        =        real colvector                b,
        =        real matrix                inv_xx)
        =        real rowvector             means_x, side
        =        real scalar                  corner
        ---------------------------------------------------- begin findfile ---
        - version 8
        - gettoken fn 0 : 0, parse(" ,")
        - syntax [, ALL noDEScend PATH(string)]
        - if `"`path'"'=="" {
        = if `""'=="" {
        - local path `"`c(adopath)'"'
        = local path `"`"..\"';BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
        - }
        - local n 0
        - local subdir : adosubdir `"`fn'"'
        = local subdir : adosubdir `"reghdfe_projections.mata"'
        - if `"`subdir'"' != "" {
        = if `"r"' != "" {
        - gettoken d path : path, parse(";")
        - while `"`d'"'!="" {
        = while `"..\"'!="" {
        - if `"`d'"' != ";" {
        = if `"..\"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"..\"'
        - local ffn `"`d'`fn'"'
        = local ffn `"../reghdfe_projections.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"../reghdfe_projections.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"../r/reghdfe_projections.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"../r/reghdfe_projections.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"BASE"'!="" {
        - if `"`d'"' != ";" {
        = if `"BASE"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"BASE"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\base/reghdfe_projections.mat
> a"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\base/reghdfe_proj
> ections.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\base/r/reghdfe_projections.m
> ata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\base/r/reghdfe_pr
> ojections.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"SITE"'!="" {
        - if `"`d'"' != ";" {
        = if `"SITE"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"SITE"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\site/reghdfe_projections.mat
> a"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\site/reghdfe_proj
> ections.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\site/r/reghdfe_projections.m
> ata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\site/r/reghdfe_pr
> ojections.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"."'!="" {
        - if `"`d'"' != ";" {
        = if `"."' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"."'
        - local ffn `"`d'`fn'"'
        = local ffn `"./reghdfe_projections.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"./reghdfe_projections.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"./r/reghdfe_projections.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"./r/reghdfe_projections.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"PERSONAL"'!="" {
        - if `"`d'"' != ";" {
        = if `"PERSONAL"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"PERSONAL"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Users\dballaelliott\ado\personal/reghdfe_projections.m
> ata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Users\dballaelliott\ado\personal/reghdfe_pr
> ojections.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Users\dballaelliott\ado\personal/r/reghdfe_projections
> .mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Users\dballaelliott\ado\personal/r/reghdfe_
> projections.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"PLUS"'!="" {
        - if `"`d'"' != ";" {
        = if `"PLUS"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"PLUS"'
        - local ffn `"`d'`fn'"'
        = local ffn `"c:\ado\plus/reghdfe_projections.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"c:\ado\plus/reghdfe_projections.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"c:\ado\plus/r/reghdfe_projections.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"c:\ado\plus/r/reghdfe_projections.mata"'
        - if _rc==0 {
        - di as txt `"`ffn'"'
        = di as txt `"c:\ado\plus/r/reghdfe_projections.mata"'
        - if "`all'"=="" {
        = if ""=="" {
        - ret local fn `"`ffn'"'
        = ret local fn `"c:\ado\plus/r/reghdfe_projections.mata"'
        - exit
        ------------------------------------------------------ end findfile ---
        =real matrix panelmean(real matrix y,
        =                      class Factor scalar f)
        =    pointer(real colvector)              Pw, Pcounts
        =    real scalar has_weights
        =        return(editmissing(panelsum(y, *Pw, f.info) :/ *Pcounts, 0))
        =        return(panelsum(y, f.info) :/ f.counts)
        =real matrix precompute_inv_xx(class Factor scalar f,
        =                           real scalar has_intercept)
        =    real scalar               i, L, K, offset
        =    real matrix             x, tmp_x
        =    real colvector              w, tmp_w
        =    real matrix                xmeans, inv_xx
        =    real rowvector             tmp_xmeans
        =    real matrix                tmp_inv_xx
        =    real scalar               has_weights
        =real matrix panelsolve_invsym(real matrix y,
        =                              class Factor scalar f,
        =                              real scalar has_intercept,
        =                            | real matrix alphas)
        =    real scalar               i, L, K, offset
        =    real matrix             x, tmp_x, tmp_y, xbd, tmp_xbd
        =    real colvector              w, tmp_w
        =    real matrix                xmeans, inv_xx
        =    real rowvector             tmp_xmeans, tmp_ymeans
        =    real matrix                tmp_xy, tmp_inv_xx
        =    real scalar               has_weights
        =    real scalar               save_alphas
        =    real colvector                b
        =real matrix reghdfe_panel_precondition(real matrix y, class Factor sca
> lar f)
        =    real colvector ans
        =    pointer(real colvector)              Pw
        =    real scalar has_weights
        =        ans = panelsum(y:^2, *Pw, f.info)
        =        ans = panelsum(y, f.info)
        ---------------------------------------------------- begin findfile ---
        - version 8
        - gettoken fn 0 : 0, parse(" ,")
        - syntax [, ALL noDEScend PATH(string)]
        - if `"`path'"'=="" {
        = if `""'=="" {
        - local path `"`c(adopath)'"'
        = local path `"`"..\"';BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
        - }
        - local n 0
        - local subdir : adosubdir `"`fn'"'
        = local subdir : adosubdir `"reghdfe_transforms.mata"'
        - if `"`subdir'"' != "" {
        = if `"r"' != "" {
        - gettoken d path : path, parse(";")
        - while `"`d'"'!="" {
        = while `"..\"'!="" {
        - if `"`d'"' != ";" {
        = if `"..\"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"..\"'
        - local ffn `"`d'`fn'"'
        = local ffn `"../reghdfe_transforms.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"../reghdfe_transforms.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"../r/reghdfe_transforms.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"../r/reghdfe_transforms.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"BASE"'!="" {
        - if `"`d'"' != ";" {
        = if `"BASE"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"BASE"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\base/reghdfe_transforms.mata
> "'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\base/reghdfe_tran
> sforms.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\base/r/reghdfe_transforms.ma
> ta"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\base/r/reghdfe_tr
> ansforms.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"SITE"'!="" {
        - if `"`d'"' != ";" {
        = if `"SITE"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"SITE"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\site/reghdfe_transforms.mata
> "'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\site/reghdfe_tran
> sforms.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\site/r/reghdfe_transforms.ma
> ta"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\site/r/reghdfe_tr
> ansforms.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"."'!="" {
        - if `"`d'"' != ";" {
        = if `"."' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"."'
        - local ffn `"`d'`fn'"'
        = local ffn `"./reghdfe_transforms.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"./reghdfe_transforms.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"./r/reghdfe_transforms.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"./r/reghdfe_transforms.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"PERSONAL"'!="" {
        - if `"`d'"' != ";" {
        = if `"PERSONAL"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"PERSONAL"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Users\dballaelliott\ado\personal/reghdfe_transforms.ma
> ta"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Users\dballaelliott\ado\personal/reghdfe_tr
> ansforms.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Users\dballaelliott\ado\personal/r/reghdfe_transforms.
> mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Users\dballaelliott\ado\personal/r/reghdfe_
> transforms.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"PLUS"'!="" {
        - if `"`d'"' != ";" {
        = if `"PLUS"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"PLUS"'
        - local ffn `"`d'`fn'"'
        = local ffn `"c:\ado\plus/reghdfe_transforms.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"c:\ado\plus/reghdfe_transforms.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"c:\ado\plus/r/reghdfe_transforms.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"c:\ado\plus/r/reghdfe_transforms.mata"'
        - if _rc==0 {
        - di as txt `"`ffn'"'
        = di as txt `"c:\ado\plus/r/reghdfe_transforms.mata"'
        - if "`all'"=="" {
        = if ""=="" {
        - ret local fn `"`ffn'"'
        = ret local fn `"c:\ado\plus/r/reghdfe_transforms.mata"'
        - exit
        ------------------------------------------------------ end findfile ---
        =void function transform_cimmino(class FixedEffects scalar S, real matr
> ix y, real matrix ans,| real scalar get_proj) {
        =        real scalar       g
        =void function transform_kaczmarz(class FixedEffects scalar S, real mat
> rix y, real matrix ans,| real scalar get_proj) {
        =        real scalar       g
        =void function transform_rand_kaczmarz(class FixedEffects scalar S, rea
> l matrix y, real matrix ans,| real scalar get_proj) {
        =        real scalar       g
        =        real colvector rand
        = void function transform_sym_kaczmarz(class FixedEffects scalar S, rea
> l matrix y, real matrix ans,| real scalar get_proj) {
        =        real scalar       g
        ---------------------------------------------------- begin findfile ---
        - version 8
        - gettoken fn 0 : 0, parse(" ,")
        - syntax [, ALL noDEScend PATH(string)]
        - if `"`path'"'=="" {
        = if `""'=="" {
        - local path `"`c(adopath)'"'
        = local path `"`"..\"';BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
        - }
        - local n 0
        - local subdir : adosubdir `"`fn'"'
        = local subdir : adosubdir `"reghdfe_accelerations.mata"'
        - if `"`subdir'"' != "" {
        = if `"r"' != "" {
        - gettoken d path : path, parse(";")
        - while `"`d'"'!="" {
        = while `"..\"'!="" {
        - if `"`d'"' != ";" {
        = if `"..\"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"..\"'
        - local ffn `"`d'`fn'"'
        = local ffn `"../reghdfe_accelerations.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"../reghdfe_accelerations.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"../r/reghdfe_accelerations.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"../r/reghdfe_accelerations.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"BASE"'!="" {
        - if `"`d'"' != ";" {
        = if `"BASE"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"BASE"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\base/reghdfe_accelerations.m
> ata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\base/reghdfe_acce
> lerations.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\base/r/reghdfe_accelerations
> .mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\base/r/reghdfe_ac
> celerations.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"SITE"'!="" {
        - if `"`d'"' != ";" {
        = if `"SITE"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"SITE"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\site/reghdfe_accelerations.m
> ata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\site/reghdfe_acce
> lerations.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\site/r/reghdfe_accelerations
> .mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\site/r/reghdfe_ac
> celerations.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"."'!="" {
        - if `"`d'"' != ";" {
        = if `"."' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"."'
        - local ffn `"`d'`fn'"'
        = local ffn `"./reghdfe_accelerations.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"./reghdfe_accelerations.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"./r/reghdfe_accelerations.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"./r/reghdfe_accelerations.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"PERSONAL"'!="" {
        - if `"`d'"' != ";" {
        = if `"PERSONAL"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"PERSONAL"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Users\dballaelliott\ado\personal/reghdfe_accelerations
> .mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Users\dballaelliott\ado\personal/reghdfe_ac
> celerations.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Users\dballaelliott\ado\personal/r/reghdfe_acceleratio
> ns.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Users\dballaelliott\ado\personal/r/reghdfe_
> accelerations.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"PLUS"'!="" {
        - if `"`d'"' != ";" {
        = if `"PLUS"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"PLUS"'
        - local ffn `"`d'`fn'"'
        = local ffn `"c:\ado\plus/reghdfe_accelerations.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"c:\ado\plus/reghdfe_accelerations.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"c:\ado\plus/r/reghdfe_accelerations.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"c:\ado\plus/r/reghdfe_accelerations.mata"'
        - if _rc==0 {
        - di as txt `"`ffn'"'
        = di as txt `"c:\ado\plus/r/reghdfe_accelerations.mata"'
        - if "`all'"=="" {
        = if ""=="" {
        - ret local fn `"`ffn'"'
        = ret local fn `"c:\ado\plus/r/reghdfe_accelerations.mata"'
        - exit
        ------------------------------------------------------ end findfile ---
        =real matrix function accelerate_test(class FixedEffects scalar S, real
>  matrix y, pointer(real matrix function) scalar T) {
        =        real scalar       iter, g
        =        real matrix             resid
        =        class Factor scalar f
        =real matrix function accelerate_none(class FixedEffects scalar S, real
>  matrix y, pointer(real matrix function) scalar T) {
        =        real scalar       iter
        =        real matrix             resid
        =real matrix function accelerate_hybrid(class FixedEffects scalar S, re
> al matrix y, pointer(real matrix function) scalar T) {
        =        real scalar iter, accel_start
        =        real matrix resid
        =real matrix function accelerate_cg(class FixedEffects scalar S, real m
> atrix y, pointer(real matrix function) scalar T) {
        =        real scalar       iter, d, Q
        =        real matrix             r, u, v
        =        real rowvector alpha, beta, ssr, ssr_old, improvement_potentia
> l
        =        real matrix recent_ssr
        =real matrix function accelerate_sd(class FixedEffects scalar S, real m
> atrix y, pointer(real matrix function) scalar T) {
        =        real scalar       iter, g
        =        real matrix proj
        =        real rowvector t
        =real matrix function accelerate_aitken(class FixedEffects scalar S, re
> al matrix y, pointer(real matrix function) scalar T) {
        =        real scalar       iter
        =        real matrix             resid, y_old, delta_sq
        =        real scalar       accelerate
        =        real rowvector t
        =real scalar check_convergence(class FixedEffects scalar S, real scalar
>  iter, real matrix y_new, real matrix y_old,| string scalar method) {
        =        real scalar       is_last_iter
        =        real scalar          update_error
        =        real scalar          eps_threshold
        =real matrix weighted_quadcolsum(class FixedEffects scalar S, real matr
> ix x, real matrix y) {
        =real scalar reghdfe_rre_benchmark(real colvector resid, real colvector
>  true_resid, real scalar norm_y) {
        =        real scalar ans
        ---------------------------------------------------- begin findfile ---
        - version 8
        - gettoken fn 0 : 0, parse(" ,")
        - syntax [, ALL noDEScend PATH(string)]
        - if `"`path'"'=="" {
        = if `""'=="" {
        - local path `"`c(adopath)'"'
        = local path `"`"..\"';BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
        - }
        - local n 0
        - local subdir : adosubdir `"`fn'"'
        = local subdir : adosubdir `"reghdfe_lsmr.mata"'
        - if `"`subdir'"' != "" {
        = if `"r"' != "" {
        - gettoken d path : path, parse(";")
        - while `"`d'"'!="" {
        = while `"..\"'!="" {
        - if `"`d'"' != ";" {
        = if `"..\"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"..\"'
        - local ffn `"`d'`fn'"'
        = local ffn `"../reghdfe_lsmr.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"../reghdfe_lsmr.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"../r/reghdfe_lsmr.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"../r/reghdfe_lsmr.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"BASE"'!="" {
        - if `"`d'"' != ";" {
        = if `"BASE"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"BASE"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\base/reghdfe_lsmr.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\base/reghdfe_lsmr
> .mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\base/r/reghdfe_lsmr.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\base/r/reghdfe_ls
> mr.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"SITE"'!="" {
        - if `"`d'"' != ";" {
        = if `"SITE"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"SITE"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\site/reghdfe_lsmr.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\site/reghdfe_lsmr
> .mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Program Files\Stata16\ado\site/r/reghdfe_lsmr.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Program Files\Stata16\ado\site/r/reghdfe_ls
> mr.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"."'!="" {
        - if `"`d'"' != ";" {
        = if `"."' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"."'
        - local ffn `"`d'`fn'"'
        = local ffn `"./reghdfe_lsmr.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"./reghdfe_lsmr.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"./r/reghdfe_lsmr.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"./r/reghdfe_lsmr.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"PERSONAL"'!="" {
        - if `"`d'"' != ";" {
        = if `"PERSONAL"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"PERSONAL"'
        - local ffn `"`d'`fn'"'
        = local ffn `"C:\Users\dballaelliott\ado\personal/reghdfe_lsmr.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Users\dballaelliott\ado\personal/reghdfe_ls
> mr.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"C:\Users\dballaelliott\ado\personal/r/reghdfe_lsmr.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"C:\Users\dballaelliott\ado\personal/r/reghdfe_
> lsmr.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
        - }
        - }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `";"'!="" {
        - if `"`d'"' != ";" {
        = if `";"' != ";" {
          local d : sysdir `"`d'"'
          local ffn `"`d'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
          if "`descend'"=="" {
          local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
          capture confirm file `"`ffn'"'
          if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `"`ffn'"'
          local n 1
          }
          }
          }
        - gettoken d path : path, parse(" ;")
        - }
        - while `"`d'"'!="" {
        = while `"PLUS"'!="" {
        - if `"`d'"' != ";" {
        = if `"PLUS"' != ";" {
        - local d : sysdir `"`d'"'
        = local d : sysdir `"PLUS"'
        - local ffn `"`d'`fn'"'
        = local ffn `"c:\ado\plus/reghdfe_lsmr.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"c:\ado\plus/reghdfe_lsmr.mata"'
        - if _rc==0 {
          di as txt `"`ffn'"'
          if "`all'"=="" {
          ret local fn `"`ffn'"'
          exit
          }
          if `n' {
          ret local fn `"`return(fn)' "`ffn'""'
          }
          else ret local fn `""`ffn'""'
          local n 1
          }
        - if "`descend'"=="" {
        = if ""=="" {
        - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
        = local ffn `"c:\ado\plus/r/reghdfe_lsmr.mata"'
        - capture confirm file `"`ffn'"'
        = capture confirm file `"c:\ado\plus/r/reghdfe_lsmr.mata"'
        - if _rc==0 {
        - di as txt `"`ffn'"'
        = di as txt `"c:\ado\plus/r/reghdfe_lsmr.mata"'
        - if "`all'"=="" {
        = if ""=="" {
        - ret local fn `"`ffn'"'
        = ret local fn `"c:\ado\plus/r/reghdfe_lsmr.mata"'
        - exit
        ------------------------------------------------------ end findfile ---
        =real colvector lsmr(class FixedEffects scalar S, real colvector b, rea
> l colvector x) {
        =    real scalar eps
        =    real scalar iter
        =    real scalar beta, zetabar, alphabar, rho, rhobar, cbar, sbar
        =    real scalar betadd, betad, rhodold, tautildeold, thetatilde, zeta,
>  d
        =    real scalar normA2, maxrbar, minrbar
        =    real scalar normb, normr
        =    real scalar test1, test2, test3
        =    real colvector u, v, h, hbar
        =    real scalar alpha, alphahat, lambda, chat, shat, rhoold, c, s, the
> tanew, rhobarold, zetaold, stildeold
        =    real scalar thetabar, rhotemp, betaacute, betacheck, betahat, thet
> atildeold, rhotildeold, ctildeold, taud
        =    real scalar normA, normAr, condA, normx, rtol
    --------------------------------------------------------- begin reghdfe ---
    - cap syntax, version old
    - if !c(rc) {
      reghdfe_old, version
      exit
      }
    - cap syntax anything(everything) [fw aw pw/], [*] old
    - if !c(rc) {
      di as error "(running historical version of reghdfe)"
      if ("`weight'"!="") local weightexp [`weight'=`exp']
      reghdfe_old `anything' `weightexp', `options'
      exit
      }
    - cap syntax, [*]
    - if inlist("`options'", "check", "compile", "reload", "update", "version",
>  "requirements", "store_alphas") {
    = if inlist("", "check", "compile", "reload", "update", "version", "require
> ments", "store_alphas") {
      if ("`options'"=="compile") loc args force
      if ("`options'"=="check") loc options compile
      if ("`options'"=="update") {
      loc args 1
      loc options reload
      }
      loc subcmd = proper("`options'")
      `subcmd' `args'
      }
    - else if replay() {
      Replay `0'
      }
    - else {
    - Cleanup 0
      ----------------------------------------------- begin reghdfe.Cleanup ---
      - args rc
      - cap mata: mata drop HDFE
      - cap mata: mata drop hdfe_*
      - cap drop __temp_reghdfe_resid__
      - cap matrix drop reghdfe_statsmatrix
      - if (`rc' == 132) {
      = if (0 == 132) {
        di as text "- If you got the {it:parentheses unbalanced} error, note th
> at IV/2SLS was moved to {help ivreghdfe}"
        di as smcl `"- Latest version: {browse "https://github.com/sergiocorrei
> a/ivreghdfe":https://github.com/sergiocorreia/ivreghdfe}"'
        di as smcl `"- SSC version: {stata "net describe ivreghdfe, from(http:/
> /fmwww.bc.edu/RePEc/bocode/i)"}"'
        di as smcl `"- Note: the older functionality can still be accessed thro
> ugh the {it:old} option"'
        }
      - if (`rc') exit `rc'
      = if (0) exit 0
      ------------------------------------------------- end reghdfe.Cleanup ---
    - ms_get_version ftools, min_version("2.36.1")
      ------------------------------------------------ begin ms_get_version ---
      - syntax anything(name=ado), [min_version(string) min_date(string)]
      - mata: st_local("package_version", get_version("`ado'"))
      = mata: st_local("package_version", get_version("ftools"))
      - c_local package_version "`package_version'"
      = c_local package_version "2.37.0 16aug2019"
      - loc _ `package_version'
      = loc _ 2.37.0 16aug2019
      - gettoken version_number _ : _
      - gettoken version_date _ : _
      - c_local version_number "`version_number'"
      = c_local version_number "2.37.0"
      - c_local version_date "`version_date'"
      = c_local version_date "16aug2019"
      - if ("`min_version'" != "") {
      = if ("2.36.1" != "") {
      - loc ok 0
      - cap mata: st_local("ok", strofreal(strtoreal(tokens(subinstr("`version_
> number'", ".", " "))) * (1e5, 1e3, 1)' >= strtoreal(tokens(subinstr("`min_ver
> sion'", ".", " "))) * (1e5, 1e3, 1)'))
      = cap mata: st_local("ok", strofreal(strtoreal(tokens(subinstr("2.37.0", 
> ".", " "))) * (1e5, 1e3, 1)' >= strtoreal(tokens(subinstr("2.36.1", ".", " ")
> )) * (1e5, 1e3, 1)'))
      - _assert `ok', msg("you are using version `version_number' of `ado', but
>  require version `min_version'")
      = _assert 1, msg("you are using version 2.37.0 of ftools, but require ver
> sion 2.36.1")
        ----------------------------------------------------- begin _assert ---
        - version 8
        - syntax anything [ , msg(str) rc(str) ]
        - capture assert `anything'
        = capture assert 1
        - local rcc = _rc
        - if `rcc' {
        = if 0 {
          if `"`msg'"' != "" {
          dis as err `"`msg'"'
          }
          else {
          dis as err `"assert failed: `anything'"'
          }
          if "`rc'" != "" {
          exit `rc'
          }
          else {
          exit `rcc'
          }
          }
        ------------------------------------------------------- end _assert ---
      - }
      - if ("`min_date'" != "") {
      = if ("" != "") {
        loc ok = !mi(date("`version_date'", "DMY")) & (date("`version_date'", "
> DMY") >= date("`min_date'", "DMY"))
        _assert `ok', msg("you are using `ado' from `version_date', but require
>  a version from at `min_date' or later")
        }
      -------------------------------------------------- end ms_get_version ---
    - cap noi Estimate `0'
    = cap noi Estimate paygrade  F20_to_male_mgr i.male#c.F20_to_male_mgr F19_t
> o_male_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr 
> F17_to_male_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male
> _mgr F15_to_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_to
> _male_mgr F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.F
> 12_to_male_mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.mal
> e#c.F10_to_male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.m
> ale#c.F8_to_male_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr F6_to_male_mgr i.
> male#c.F6_to_male_mgr F5_to_male_mgr i.male#c.F5_to_male_mgr F4_to_male_mgr i
> .male#c.F4_to_male_mgr F3_to_male_mgr i.male#c.F3_to_male_mgr F2_to_male_mgr 
> i.male#c.F2_to_male_mgr F1_to_male_mgr i.male#c.F1_to_male_mgr  L0_to_male_mg
> r i.male#c.L0_to_male_mgr L1_to_male_mgr i.male#c.L1_to_male_mgr L2_to_male_m
> gr i.male#c.L2_to_male_mgr L3_to_male_mgr i.male#c.L3_to_male_mgr L4_to_male_
> mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i.male#c.L5_to_male_mgr L6_to_male
> _mgr i.male#c.L6_to_male_mgr L7_to_male_mgr i.male#c.L7_to_male_mgr L8_to_mal
> e_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr i.male#c.L9_to_male_mgr L10_to_m
> ale_mgr i.male#c.L10_to_male_mgr L11_to_male_mgr i.male#c.L11_to_male_mgr L12
> _to_male_mgr i.male#c.L12_to_male_mgr L13_to_male_mgr i.male#c.L13_to_male_mg
> r L14_to_male_mgr i.male#c.L14_to_male_mgr L15_to_male_mgr i.male#c.L15_to_ma
> le_mgr L16_to_male_mgr i.male#c.L16_to_male_mgr L17_to_male_mgr i.male#c.L17_
> to_male_mgr L18_to_male_mgr i.male#c.L18_to_male_mgr L19_to_male_mgr i.male#c
> .L19_to_male_mgr L20_to_male_mgr i.male#c.L20_to_male_mgr L21_to_male_mgr i.m
> ale#c.L21_to_male_mgr L22_to_male_mgr i.male#c.L22_to_male_mgr L23_to_male_mg
> r i.male#c.L23_to_male_mgr L24_to_male_mgr i.male#c.L24_to_male_mgr L25_to_ma
> le_mgr i.male#c.L25_to_male_mgr L26_to_male_mgr i.male#c.L26_to_male_mgr L27_
> to_male_mgr i.male#c.L27_to_male_mgr L28_to_male_mgr i.male#c.L28_to_male_mgr
>  L29_to_male_mgr i.male#c.L29_to_male_mgr L30_to_male_mgr i.male#c.L30_to_mal
> e_mgr  i.male#(                            F47_to_male_mgr F46_to_male_mgr F4
> 5_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_male_mgr
>  F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36_to_male_
> mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr F31_to_ma
> le_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_mgr F26_to
> _male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_male_mgr F21
> _to_male_mgr  L31_to_male_mgr  L32_to_male_mgr  L33_to_male_mgr  L34_to_male_
> mgr  L35_to_male_mgr  L36_to_male_mgr  L37_to_male_mgr  L38_to_male_mgr  L39_
> to_male_mgr  L40_to_male_mgr  L41_to_male_mgr  L42_to_male_mgr  L43_to_male_m
> gr  L44_to_male_mgr  L45_to_male_mgr  L46_to_male_mgr  L47_to_male_mgr )    ,
>  noabsorb 
      ---------------------------------------------- begin reghdfe.Estimate ---
      - ereturn clear
      - Parse `0'
      = Parse paygrade  F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mg
> r i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F17_to_ma
> le_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male_mgr F15_
> to_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_to_male_mgr
>  F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.F12_to_mal
> e_mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.male#c.F10_t
> o_male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.male#c.F8_
> to_male_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr F6_to_male_mgr i.male#c.F6
> _to_male_mgr F5_to_male_mgr i.male#c.F5_to_male_mgr F4_to_male_mgr i.male#c.F
> 4_to_male_mgr F3_to_male_mgr i.male#c.F3_to_male_mgr F2_to_male_mgr i.male#c.
> F2_to_male_mgr F1_to_male_mgr i.male#c.F1_to_male_mgr  L0_to_male_mgr i.male#
> c.L0_to_male_mgr L1_to_male_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male
> #c.L2_to_male_mgr L3_to_male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.mal
> e#c.L4_to_male_mgr L5_to_male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.ma
> le#c.L6_to_male_mgr L7_to_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.m
> ale#c.L8_to_male_mgr L9_to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i
> .male#c.L10_to_male_mgr L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_
> mgr i.male#c.L12_to_male_mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L14_to_
> male_mgr i.male#c.L14_to_male_mgr L15_to_male_mgr i.male#c.L15_to_male_mgr L1
> 6_to_male_mgr i.male#c.L16_to_male_mgr L17_to_male_mgr i.male#c.L17_to_male_m
> gr L18_to_male_mgr i.male#c.L18_to_male_mgr L19_to_male_mgr i.male#c.L19_to_m
> ale_mgr L20_to_male_mgr i.male#c.L20_to_male_mgr L21_to_male_mgr i.male#c.L21
> _to_male_mgr L22_to_male_mgr i.male#c.L22_to_male_mgr L23_to_male_mgr i.male#
> c.L23_to_male_mgr L24_to_male_mgr i.male#c.L24_to_male_mgr L25_to_male_mgr i.
> male#c.L25_to_male_mgr L26_to_male_mgr i.male#c.L26_to_male_mgr L27_to_male_m
> gr i.male#c.L27_to_male_mgr L28_to_male_mgr i.male#c.L28_to_male_mgr L29_to_m
> ale_mgr i.male#c.L29_to_male_mgr L30_to_male_mgr i.male#c.L30_to_male_mgr  i.
> male#(                            F47_to_male_mgr F46_to_male_mgr F45_to_male
> _mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_mgr F41_to_male_mgr F40_to_m
> ale_mgr F39_to_male_mgr F38_to_male_mgr F37_to_male_mgr F36_to_male_mgr F35_t
> o_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to_male_mgr F31_to_male_mgr F3
> 0_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27_to_male_mgr F26_to_male_mgr
>  F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr F22_to_male_mgr F21_to_male_
> mgr  L31_to_male_mgr  L32_to_male_mgr  L33_to_male_mgr  L34_to_male_mgr  L35_
> to_male_mgr  L36_to_male_mgr  L37_to_male_mgr  L38_to_male_mgr  L39_to_male_m
> gr  L40_to_male_mgr  L41_to_male_mgr  L42_to_male_mgr  L43_to_male_mgr  L44_t
> o_male_mgr  L45_to_male_mgr  L46_to_male_mgr  L47_to_male_mgr )    , noabsorb
>  
        ----------------------------------------------- begin reghdfe.Parse ---
        - mata: st_local("0", stritrim(st_local("0")))
        - syntax varlist(fv ts numeric) [if] [in] [aw pw fw/] , [ Absorb(string
> ) NOAbsorb SUmmarize SUmmarize2(string asis) VCE(string) CLuster(string) Verb
> ose(numlist min=1 max=1 >=-1 <=5 integer) TIMEit NOSAMPle COMPACT noHEader no
> TABle noFOOTnote KEEPSINgletons OLD NOTES(string) ] [*]
        - if ("`verbose'" == "") loc verbose 0
        = if ("" == "") loc verbose 0
        - loc timeit = ("`timeit'"!="")
        = loc timeit = (""!="")
        - loc drop_singletons = ("`keepsingletons'" == "")
        = loc drop_singletons = ("" == "")
        - loc compact = ("`compact'" != "")
        = loc compact = ("" != "")
        - if (`timeit') timer on 29
        = if (0) timer on 29
        - if (`verbose'>-1 & "`keepsingletons'"!="") {
        = if (0>-1 & ""!="") {
          loc url "http://scorreia.com/reghdfe/nested_within_cluster.pdf"
          loc msg "WARNING: Singleton observations not dropped; statistical sig
> nificance is biased"
          di as error `"`msg' {browse "`url'":(link)}"'
          }
        - if ("`cluster'"!="") {
        = if (""!="") {
          _assert ("`vce'"==""), msg("cannot specify both cluster() and vce()")
          loc vce cluster `cluster'
          loc cluster
          }
        - ms_parse_varlist `varlist'
        = ms_parse_varlist paygrade F20_to_male_mgr i.male#c.F20_to_male_mgr F1
> 9_to_male_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_m
> gr F17_to_male_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_m
> ale_mgr F15_to_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14
> _to_male_mgr F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#
> c.F12_to_male_mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.
> male#c.F10_to_male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr 
> i.male#c.F8_to_male_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr F6_to_male_mgr
>  i.male#c.F6_to_male_mgr F5_to_male_mgr i.male#c.F5_to_male_mgr F4_to_male_mg
> r i.male#c.F4_to_male_mgr F3_to_male_mgr i.male#c.F3_to_male_mgr F2_to_male_m
> gr i.male#c.F2_to_male_mgr F1_to_male_mgr i.male#c.F1_to_male_mgr L0_to_male_
> mgr i.male#c.L0_to_male_mgr L1_to_male_mgr i.male#c.L1_to_male_mgr L2_to_male
> _mgr i.male#c.L2_to_male_mgr L3_to_male_mgr i.male#c.L3_to_male_mgr L4_to_mal
> e_mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i.male#c.L5_to_male_mgr L6_to_ma
> le_mgr i.male#c.L6_to_male_mgr L7_to_male_mgr i.male#c.L7_to_male_mgr L8_to_m
> ale_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr i.male#c.L9_to_male_mgr L10_to
> _male_mgr i.male#c.L10_to_male_mgr L11_to_male_mgr i.male#c.L11_to_male_mgr L
> 12_to_male_mgr i.male#c.L12_to_male_mgr L13_to_male_mgr i.male#c.L13_to_male_
> mgr L14_to_male_mgr i.male#c.L14_to_male_mgr L15_to_male_mgr i.male#c.L15_to_
> male_mgr L16_to_male_mgr i.male#c.L16_to_male_mgr L17_to_male_mgr i.male#c.L1
> 7_to_male_mgr L18_to_male_mgr i.male#c.L18_to_male_mgr L19_to_male_mgr i.male
> #c.L19_to_male_mgr L20_to_male_mgr i.male#c.L20_to_male_mgr L21_to_male_mgr i
> .male#c.L21_to_male_mgr L22_to_male_mgr i.male#c.L22_to_male_mgr L23_to_male_
> mgr i.male#c.L23_to_male_mgr L24_to_male_mgr i.male#c.L24_to_male_mgr L25_to_
> male_mgr i.male#c.L25_to_male_mgr L26_to_male_mgr i.male#c.L26_to_male_mgr L2
> 7_to_male_mgr i.male#c.L27_to_male_mgr L28_to_male_mgr i.male#c.L28_to_male_m
> gr L29_to_male_mgr i.male#c.L29_to_male_mgr L30_to_male_mgr i.male#c.L30_to_m
> ale_mgr i.male#i.F47_to_male_mgr i.male#i.F46_to_male_mgr i.male#i.F45_to_mal
> e_mgr i.male#i.F44_to_male_mgr i.male#i.F43_to_male_mgr i.male#i.F42_to_male_
> mgr i.male#i.F41_to_male_mgr i.male#i.F40_to_male_mgr i.male#i.F39_to_male_mg
> r i.male#i.F38_to_male_mgr i.male#i.F37_to_male_mgr i.male#i.F36_to_male_mgr 
> i.male#i.F35_to_male_mgr i.male#i.F34_to_male_mgr i.male#i.F33_to_male_mgr i.
> male#i.F32_to_male_mgr i.male#i.F31_to_male_mgr i.male#i.F30_to_male_mgr i.ma
> le#i.F29_to_male_mgr i.male#i.F28_to_male_mgr i.male#i.F27_to_male_mgr i.male
> #i.F26_to_male_mgr i.male#i.F25_to_male_mgr i.male#i.F24_to_male_mgr i.male#i
> .F23_to_male_mgr i.male#i.F22_to_male_mgr i.male#i.F21_to_male_mgr i.male#i.L
> 31_to_male_mgr i.male#i.L32_to_male_mgr i.male#i.L33_to_male_mgr i.male#i.L34
> _to_male_mgr i.male#i.L35_to_male_mgr i.male#i.L36_to_male_mgr i.male#i.L37_t
> o_male_mgr i.male#i.L38_to_male_mgr i.male#i.L39_to_male_mgr i.male#i.L40_to_
> male_mgr i.male#i.L41_to_male_mgr i.male#i.L42_to_male_mgr i.male#i.L43_to_ma
> le_mgr i.male#i.L44_to_male_mgr i.male#i.L45_to_male_mgr i.male#i.L46_to_male
> _mgr i.male#i.L47_to_male_mgr
          ------------------------------------------ begin ms_parse_varlist ---
          - gettoken depvar 0 : 0, bind
          - fvexpand `depvar'
          = fvexpand paygrade
          - loc depvar `r(varlist)'
          = loc depvar paygrade
          - loc n : word count `depvar'
          = loc n : word count paygrade
          - _assert (`n'==1), msg("more than one depvar specified: `depvar'")
          = _assert (1==1), msg("more than one depvar specified: paygrade")
            ------------------------------------------------- begin _assert ---
            - version 8
            - syntax anything [ , msg(str) rc(str) ]
            - capture assert `anything'
            = capture assert (1==1)
            - local rcc = _rc
            - if `rcc' {
            = if 0 {
              if `"`msg'"' != "" {
              dis as err `"`msg'"'
              }
              else {
              dis as err `"assert failed: `anything'"'
              }
              if "`rc'" != "" {
              exit `rc'
              }
              else {
              exit `rcc'
              }
              }
            --------------------------------------------------- end _assert ---
          - _assert (!strpos("`depvar'", "o.")), msg("the values of depvar are 
> omitted: `depvar'")
          = _assert (!strpos("paygrade", "o.")), msg("the values of depvar are 
> omitted: paygrade")
            ------------------------------------------------- begin _assert ---
            - version 8
            - syntax anything [ , msg(str) rc(str) ]
            - capture assert `anything'
            = capture assert (!strpos("paygrade", "o."))
            - local rcc = _rc
            - if `rcc' {
            = if 0 {
              if `"`msg'"' != "" {
              dis as err `"`msg'"'
              }
              else {
              dis as err `"assert failed: `anything'"'
              }
              if "`rc'" != "" {
              exit `rc'
              }
              else {
              exit `rcc'
              }
              }
            --------------------------------------------------- end _assert ---
          - fvrevar `depvar', list
          = fvrevar paygrade, list
          - loc fe_format : format `r(varlist)'
          = loc fe_format : format paygrade
          - fvrevar `depvar' `0', list
          = fvrevar paygrade  F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_m
> ale_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F17
> _to_male_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male_mg
> r F15_to_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_to_ma
> le_mgr F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.F12_
> to_male_mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.male#c
> .F10_to_male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.male
> #c.F8_to_male_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr F6_to_male_mgr i.mal
> e#c.F6_to_male_mgr F5_to_male_mgr i.male#c.F5_to_male_mgr F4_to_male_mgr i.ma
> le#c.F4_to_male_mgr F3_to_male_mgr i.male#c.F3_to_male_mgr F2_to_male_mgr i.m
> ale#c.F2_to_male_mgr F1_to_male_mgr i.male#c.F1_to_male_mgr L0_to_male_mgr i.
> male#c.L0_to_male_mgr L1_to_male_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i
> .male#c.L2_to_male_mgr L3_to_male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr 
> i.male#c.L4_to_male_mgr L5_to_male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr
>  i.male#c.L6_to_male_mgr L7_to_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mg
> r i.male#c.L8_to_male_mgr L9_to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_
> mgr i.male#c.L10_to_male_mgr L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_
> male_mgr i.male#c.L12_to_male_mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L1
> 4_to_male_mgr i.male#c.L14_to_male_mgr L15_to_male_mgr i.male#c.L15_to_male_m
> gr L16_to_male_mgr i.male#c.L16_to_male_mgr L17_to_male_mgr i.male#c.L17_to_m
> ale_mgr L18_to_male_mgr i.male#c.L18_to_male_mgr L19_to_male_mgr i.male#c.L19
> _to_male_mgr L20_to_male_mgr i.male#c.L20_to_male_mgr L21_to_male_mgr i.male#
> c.L21_to_male_mgr L22_to_male_mgr i.male#c.L22_to_male_mgr L23_to_male_mgr i.
> male#c.L23_to_male_mgr L24_to_male_mgr i.male#c.L24_to_male_mgr L25_to_male_m
> gr i.male#c.L25_to_male_mgr L26_to_male_mgr i.male#c.L26_to_male_mgr L27_to_m
> ale_mgr i.male#c.L27_to_male_mgr L28_to_male_mgr i.male#c.L28_to_male_mgr L29
> _to_male_mgr i.male#c.L29_to_male_mgr L30_to_male_mgr i.male#c.L30_to_male_mg
> r i.male#i.F47_to_male_mgr i.male#i.F46_to_male_mgr i.male#i.F45_to_male_mgr 
> i.male#i.F44_to_male_mgr i.male#i.F43_to_male_mgr i.male#i.F42_to_male_mgr i.
> male#i.F41_to_male_mgr i.male#i.F40_to_male_mgr i.male#i.F39_to_male_mgr i.ma
> le#i.F38_to_male_mgr i.male#i.F37_to_male_mgr i.male#i.F36_to_male_mgr i.male
> #i.F35_to_male_mgr i.male#i.F34_to_male_mgr i.male#i.F33_to_male_mgr i.male#i
> .F32_to_male_mgr i.male#i.F31_to_male_mgr i.male#i.F30_to_male_mgr i.male#i.F
> 29_to_male_mgr i.male#i.F28_to_male_mgr i.male#i.F27_to_male_mgr i.male#i.F26
> _to_male_mgr i.male#i.F25_to_male_mgr i.male#i.F24_to_male_mgr i.male#i.F23_t
> o_male_mgr i.male#i.F22_to_male_mgr i.male#i.F21_to_male_mgr i.male#i.L31_to_
> male_mgr i.male#i.L32_to_male_mgr i.male#i.L33_to_male_mgr i.male#i.L34_to_ma
> le_mgr i.male#i.L35_to_male_mgr i.male#i.L36_to_male_mgr i.male#i.L37_to_male
> _mgr i.male#i.L38_to_male_mgr i.male#i.L39_to_male_mgr i.male#i.L40_to_male_m
> gr i.male#i.L41_to_male_mgr i.male#i.L42_to_male_mgr i.male#i.L43_to_male_mgr
>  i.male#i.L44_to_male_mgr i.male#i.L45_to_male_mgr i.male#i.L46_to_male_mgr i
> .male#i.L47_to_male_mgr, list
          - loc basevars `r(varlist)'
          = loc basevars paygrade F20_to_male_mgr F19_to_male_mgr F18_to_male_m
> gr F17_to_male_mgr F16_to_male_mgr F15_to_male_mgr F14_to_male_mgr F13_to_mal
> e_mgr F12_to_male_mgr F11_to_male_mgr F10_to_male_mgr F9_to_male_mgr F8_to_ma
> le_mgr F7_to_male_mgr F6_to_male_mgr F5_to_male_mgr F4_to_male_mgr F3_to_male
> _mgr F2_to_male_mgr F1_to_male_mgr L0_to_male_mgr L1_to_male_mgr L2_to_male_m
> gr L3_to_male_mgr L4_to_male_mgr L5_to_male_mgr L6_to_male_mgr L7_to_male_mgr
>  L8_to_male_mgr L9_to_male_mgr L10_to_male_mgr L11_to_male_mgr L12_to_male_mg
> r L13_to_male_mgr L14_to_male_mgr L15_to_male_mgr L16_to_male_mgr L17_to_male
> _mgr L18_to_male_mgr L19_to_male_mgr L20_to_male_mgr L21_to_male_mgr L22_to_m
> ale_mgr L23_to_male_mgr L24_to_male_mgr L25_to_male_mgr L26_to_male_mgr L27_t
> o_male_mgr L28_to_male_mgr L29_to_male_mgr L30_to_male_mgr male F47_to_male_m
> gr F46_to_male_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_mal
> e_mgr F41_to_male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_
> male_mgr F36_to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_
> to_male_mgr F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F
> 27_to_male_mgr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mg
> r F22_to_male_mgr F21_to_male_mgr L31_to_male_mgr L32_to_male_mgr L33_to_male
> _mgr L34_to_male_mgr L35_to_male_mgr L36_to_male_mgr L37_to_male_mgr L38_to_m
> ale_mgr L39_to_male_mgr L40_to_male_mgr L41_to_male_mgr L42_to_male_mgr L43_t
> o_male_mgr L44_to_male_mgr L45_to_male_mgr L46_to_male_mgr L47_to_male_mgr
          - return loc depvar `depvar'
          = return loc depvar paygrade
          - return loc fe_format `fe_format'
          = return loc fe_format %8.0g
          - return loc indepvars `0'
          = return loc indepvars  F20_to_male_mgr i.male#c.F20_to_male_mgr F19_
> to_male_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr
>  F17_to_male_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_mal
> e_mgr F15_to_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_t
> o_male_mgr F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.
> F12_to_male_mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.ma
> le#c.F10_to_male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.
> male#c.F8_to_male_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr F6_to_male_mgr i
> .male#c.F6_to_male_mgr F5_to_male_mgr i.male#c.F5_to_male_mgr F4_to_male_mgr 
> i.male#c.F4_to_male_mgr F3_to_male_mgr i.male#c.F3_to_male_mgr F2_to_male_mgr
>  i.male#c.F2_to_male_mgr F1_to_male_mgr i.male#c.F1_to_male_mgr L0_to_male_mg
> r i.male#c.L0_to_male_mgr L1_to_male_mgr i.male#c.L1_to_male_mgr L2_to_male_m
> gr i.male#c.L2_to_male_mgr L3_to_male_mgr i.male#c.L3_to_male_mgr L4_to_male_
> mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i.male#c.L5_to_male_mgr L6_to_male
> _mgr i.male#c.L6_to_male_mgr L7_to_male_mgr i.male#c.L7_to_male_mgr L8_to_mal
> e_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr i.male#c.L9_to_male_mgr L10_to_m
> ale_mgr i.male#c.L10_to_male_mgr L11_to_male_mgr i.male#c.L11_to_male_mgr L12
> _to_male_mgr i.male#c.L12_to_male_mgr L13_to_male_mgr i.male#c.L13_to_male_mg
> r L14_to_male_mgr i.male#c.L14_to_male_mgr L15_to_male_mgr i.male#c.L15_to_ma
> le_mgr L16_to_male_mgr i.male#c.L16_to_male_mgr L17_to_male_mgr i.male#c.L17_
> to_male_mgr L18_to_male_mgr i.male#c.L18_to_male_mgr L19_to_male_mgr i.male#c
> .L19_to_male_mgr L20_to_male_mgr i.male#c.L20_to_male_mgr L21_to_male_mgr i.m
> ale#c.L21_to_male_mgr L22_to_male_mgr i.male#c.L22_to_male_mgr L23_to_male_mg
> r i.male#c.L23_to_male_mgr L24_to_male_mgr i.male#c.L24_to_male_mgr L25_to_ma
> le_mgr i.male#c.L25_to_male_mgr L26_to_male_mgr i.male#c.L26_to_male_mgr L27_
> to_male_mgr i.male#c.L27_to_male_mgr L28_to_male_mgr i.male#c.L28_to_male_mgr
>  L29_to_male_mgr i.male#c.L29_to_male_mgr L30_to_male_mgr i.male#c.L30_to_mal
> e_mgr i.male#i.F47_to_male_mgr i.male#i.F46_to_male_mgr i.male#i.F45_to_male_
> mgr i.male#i.F44_to_male_mgr i.male#i.F43_to_male_mgr i.male#i.F42_to_male_mg
> r i.male#i.F41_to_male_mgr i.male#i.F40_to_male_mgr i.male#i.F39_to_male_mgr 
> i.male#i.F38_to_male_mgr i.male#i.F37_to_male_mgr i.male#i.F36_to_male_mgr i.
> male#i.F35_to_male_mgr i.male#i.F34_to_male_mgr i.male#i.F33_to_male_mgr i.ma
> le#i.F32_to_male_mgr i.male#i.F31_to_male_mgr i.male#i.F30_to_male_mgr i.male
> #i.F29_to_male_mgr i.male#i.F28_to_male_mgr i.male#i.F27_to_male_mgr i.male#i
> .F26_to_male_mgr i.male#i.F25_to_male_mgr i.male#i.F24_to_male_mgr i.male#i.F
> 23_to_male_mgr i.male#i.F22_to_male_mgr i.male#i.F21_to_male_mgr i.male#i.L31
> _to_male_mgr i.male#i.L32_to_male_mgr i.male#i.L33_to_male_mgr i.male#i.L34_t
> o_male_mgr i.male#i.L35_to_male_mgr i.male#i.L36_to_male_mgr i.male#i.L37_to_
> male_mgr i.male#i.L38_to_male_mgr i.male#i.L39_to_male_mgr i.male#i.L40_to_ma
> le_mgr i.male#i.L41_to_male_mgr i.male#i.L42_to_male_mgr i.male#i.L43_to_male
> _mgr i.male#i.L44_to_male_mgr i.male#i.L45_to_male_mgr i.male#i.L46_to_male_m
> gr i.male#i.L47_to_male_mgr
          - return loc basevars `basevars'
          = return loc basevars paygrade F20_to_male_mgr F19_to_male_mgr F18_to
> _male_mgr F17_to_male_mgr F16_to_male_mgr F15_to_male_mgr F14_to_male_mgr F13
> _to_male_mgr F12_to_male_mgr F11_to_male_mgr F10_to_male_mgr F9_to_male_mgr F
> 8_to_male_mgr F7_to_male_mgr F6_to_male_mgr F5_to_male_mgr F4_to_male_mgr F3_
> to_male_mgr F2_to_male_mgr F1_to_male_mgr L0_to_male_mgr L1_to_male_mgr L2_to
> _male_mgr L3_to_male_mgr L4_to_male_mgr L5_to_male_mgr L6_to_male_mgr L7_to_m
> ale_mgr L8_to_male_mgr L9_to_male_mgr L10_to_male_mgr L11_to_male_mgr L12_to_
> male_mgr L13_to_male_mgr L14_to_male_mgr L15_to_male_mgr L16_to_male_mgr L17_
> to_male_mgr L18_to_male_mgr L19_to_male_mgr L20_to_male_mgr L21_to_male_mgr L
> 22_to_male_mgr L23_to_male_mgr L24_to_male_mgr L25_to_male_mgr L26_to_male_mg
> r L27_to_male_mgr L28_to_male_mgr L29_to_male_mgr L30_to_male_mgr male F47_to
> _male_mgr F46_to_male_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42
> _to_male_mgr F41_to_male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr 
> F37_to_male_mgr F36_to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_m
> gr F32_to_male_mgr F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_mal
> e_mgr F27_to_male_mgr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_
> male_mgr F22_to_male_mgr F21_to_male_mgr L31_to_male_mgr L32_to_male_mgr L33_
> to_male_mgr L34_to_male_mgr L35_to_male_mgr L36_to_male_mgr L37_to_male_mgr L
> 38_to_male_mgr L39_to_male_mgr L40_to_male_mgr L41_to_male_mgr L42_to_male_mg
> r L43_to_male_mgr L44_to_male_mgr L45_to_male_mgr L46_to_male_mgr L47_to_male
> _mgr
          -------------------------------------------- end ms_parse_varlist ---
        - if (`verbose' > 0) {
        = if (0 > 0) {
          di as text _n "## Parsing varlist: {res}`varlist'"
          return list
          }
        - loc depvar `r(depvar)'
        = loc depvar paygrade
        - loc indepvars `r(indepvars)'
        = loc indepvars F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mg
> r i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F17_to_ma
> le_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male_mgr F15_
> to_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_to_male_mgr
>  F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.F12_to_mal
> e_mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.male#c.F10_t
> o_male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.male#c.F8_
> to_male_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr F6_to_male_mgr i.male#c.F6
> _to_male_mgr F5_to_male_mgr i.male#c.F5_to_male_mgr F4_to_male_mgr i.male#c.F
> 4_to_male_mgr F3_to_male_mgr i.male#c.F3_to_male_mgr F2_to_male_mgr i.male#c.
> F2_to_male_mgr F1_to_male_mgr i.male#c.F1_to_male_mgr L0_to_male_mgr i.male#c
> .L0_to_male_mgr L1_to_male_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#
> c.L2_to_male_mgr L3_to_male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male
> #c.L4_to_male_mgr L5_to_male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.mal
> e#c.L6_to_male_mgr L7_to_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.ma
> le#c.L8_to_male_mgr L9_to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.
> male#c.L10_to_male_mgr L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_m
> gr i.male#c.L12_to_male_mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L14_to_m
> ale_mgr i.male#c.L14_to_male_mgr L15_to_male_mgr i.male#c.L15_to_male_mgr L16
> _to_male_mgr i.male#c.L16_to_male_mgr L17_to_male_mgr i.male#c.L17_to_male_mg
> r L18_to_male_mgr i.male#c.L18_to_male_mgr L19_to_male_mgr i.male#c.L19_to_ma
> le_mgr L20_to_male_mgr i.male#c.L20_to_male_mgr L21_to_male_mgr i.male#c.L21_
> to_male_mgr L22_to_male_mgr i.male#c.L22_to_male_mgr L23_to_male_mgr i.male#c
> .L23_to_male_mgr L24_to_male_mgr i.male#c.L24_to_male_mgr L25_to_male_mgr i.m
> ale#c.L25_to_male_mgr L26_to_male_mgr i.male#c.L26_to_male_mgr L27_to_male_mg
> r i.male#c.L27_to_male_mgr L28_to_male_mgr i.male#c.L28_to_male_mgr L29_to_ma
> le_mgr i.male#c.L29_to_male_mgr L30_to_male_mgr i.male#c.L30_to_male_mgr i.ma
> le#i.F47_to_male_mgr i.male#i.F46_to_male_mgr i.male#i.F45_to_male_mgr i.male
> #i.F44_to_male_mgr i.male#i.F43_to_male_mgr i.male#i.F42_to_male_mgr i.male#i
> .F41_to_male_mgr i.male#i.F40_to_male_mgr i.male#i.F39_to_male_mgr i.male#i.F
> 38_to_male_mgr i.male#i.F37_to_male_mgr i.male#i.F36_to_male_mgr i.male#i.F35
> _to_male_mgr i.male#i.F34_to_male_mgr i.male#i.F33_to_male_mgr i.male#i.F32_t
> o_male_mgr i.male#i.F31_to_male_mgr i.male#i.F30_to_male_mgr i.male#i.F29_to_
> male_mgr i.male#i.F28_to_male_mgr i.male#i.F27_to_male_mgr i.male#i.F26_to_ma
> le_mgr i.male#i.F25_to_male_mgr i.male#i.F24_to_male_mgr i.male#i.F23_to_male
> _mgr i.male#i.F22_to_male_mgr i.male#i.F21_to_male_mgr i.male#i.L31_to_male_m
> gr i.male#i.L32_to_male_mgr i.male#i.L33_to_male_mgr i.male#i.L34_to_male_mgr
>  i.male#i.L35_to_male_mgr i.male#i.L36_to_male_mgr i.male#i.L37_to_male_mgr i
> .male#i.L38_to_male_mgr i.male#i.L39_to_male_mgr i.male#i.L40_to_male_mgr i.m
> ale#i.L41_to_male_mgr i.male#i.L42_to_male_mgr i.male#i.L43_to_male_mgr i.mal
> e#i.L44_to_male_mgr i.male#i.L45_to_male_mgr i.male#i.L46_to_male_mgr i.male#
> i.L47_to_male_mgr
        - loc fe_format "`r(fe_format)'"
        = loc fe_format "%8.0g"
        - loc basevars `r(basevars)'
        = loc basevars paygrade F20_to_male_mgr F19_to_male_mgr F18_to_male_mgr
>  F17_to_male_mgr F16_to_male_mgr F15_to_male_mgr F14_to_male_mgr F13_to_male_
> mgr F12_to_male_mgr F11_to_male_mgr F10_to_male_mgr F9_to_male_mgr F8_to_male
> _mgr F7_to_male_mgr F6_to_male_mgr F5_to_male_mgr F4_to_male_mgr F3_to_male_m
> gr F2_to_male_mgr F1_to_male_mgr L0_to_male_mgr L1_to_male_mgr L2_to_male_mgr
>  L3_to_male_mgr L4_to_male_mgr L5_to_male_mgr L6_to_male_mgr L7_to_male_mgr L
> 8_to_male_mgr L9_to_male_mgr L10_to_male_mgr L11_to_male_mgr L12_to_male_mgr 
> L13_to_male_mgr L14_to_male_mgr L15_to_male_mgr L16_to_male_mgr L17_to_male_m
> gr L18_to_male_mgr L19_to_male_mgr L20_to_male_mgr L21_to_male_mgr L22_to_mal
> e_mgr L23_to_male_mgr L24_to_male_mgr L25_to_male_mgr L26_to_male_mgr L27_to_
> male_mgr L28_to_male_mgr L29_to_male_mgr L30_to_male_mgr male F47_to_male_mgr
>  F46_to_male_mgr F45_to_male_mgr F44_to_male_mgr F43_to_male_mgr F42_to_male_
> mgr F41_to_male_mgr F40_to_male_mgr F39_to_male_mgr F38_to_male_mgr F37_to_ma
> le_mgr F36_to_male_mgr F35_to_male_mgr F34_to_male_mgr F33_to_male_mgr F32_to
> _male_mgr F31_to_male_mgr F30_to_male_mgr F29_to_male_mgr F28_to_male_mgr F27
> _to_male_mgr F26_to_male_mgr F25_to_male_mgr F24_to_male_mgr F23_to_male_mgr 
> F22_to_male_mgr F21_to_male_mgr L31_to_male_mgr L32_to_male_mgr L33_to_male_m
> gr L34_to_male_mgr L35_to_male_mgr L36_to_male_mgr L37_to_male_mgr L38_to_mal
> e_mgr L39_to_male_mgr L40_to_male_mgr L41_to_male_mgr L42_to_male_mgr L43_to_
> male_mgr L44_to_male_mgr L45_to_male_mgr L46_to_male_mgr L47_to_male_mgr
        - if ("`weight'"!="") {
        = if (""!="") {
          unab exp : `exp', min(1) max(1)
          }
        - ms_parse_vce, vce(`vce') weighttype(`weight')
        = ms_parse_vce, vce() weighttype()
          ---------------------------------------------- begin ms_parse_vce ---
          - sreturn clear
          - syntax, [vce(string) weighttype(string)]
          - loc 0 `vce'
          = loc 0 
          - syntax [anything(id="VCE type")] , [*]
          - gettoken vcetype clustervars : anything
          - if ("`clustervars'" != "") {
          = if ("" != "") {
            ms_fvunab clustervars : `clustervars', stringok
            loc clustervars : subinstr loc clustervars "i." "", all
            _assert !strpos("`clustervars'", "."), msg("unexpected dot in clust
> ervars: `clustervars'")
            unopvarlist `clustervars'
            loc base_clustervars `r(varlist)'
            }
          - if (substr("`vcetype'",1,3)=="ols") loc vcetype unadjusted
          = if (substr("",1,3)=="ols") loc vcetype unadjusted
          - if (substr("`vcetype'",1,2)=="un") loc vcetype unadjusted
          = if (substr("",1,2)=="un") loc vcetype unadjusted
          - if (substr("`vcetype'",1,1)=="r") loc vcetype robust
          = if (substr("",1,1)=="r") loc vcetype robust
          - if (substr("`vcetype'",1,2)=="cl") loc vcetype cluster
          = if (substr("",1,2)=="cl") loc vcetype cluster
          - if ("`vcetype'"=="conventional") loc vcetype unadjusted
          = if (""=="conventional") loc vcetype unadjusted
          - if ("`vcetype'"=="" & "`weighttype'"=="pweight") loc vcetype robust
          = if (""=="" & ""=="pweight") loc vcetype robust
          - if ("`vcetype'"=="") loc vcetype unadjusted
          = if (""=="") loc vcetype unadjusted
          - _assert inlist("`vcetype'", "unadjusted", "robust", "cluster"), msg
> ("vcetype '`vcetype'' not allowed")
          = _assert inlist("unadjusted", "unadjusted", "robust", "cluster"), ms
> g("vcetype 'unadjusted' not allowed")
            ------------------------------------------------- begin _assert ---
            - version 8
            - syntax anything [ , msg(str) rc(str) ]
            - capture assert `anything'
            = capture assert inlist("unadjusted", "unadjusted", "robust", "clus
> ter")
            - local rcc = _rc
            - if `rcc' {
            = if 0 {
              if `"`msg'"' != "" {
              dis as err `"`msg'"'
              }
              else {
              dis as err `"assert failed: `anything'"'
              }
              if "`rc'" != "" {
              exit `rc'
              }
              else {
              exit `rcc'
              }
              }
            --------------------------------------------------- end _assert ---
          - _assert !("`vcetype'"=="unadjusted" & "`weighttype'"=="pweight"), m
> sg("pweights do not work with vce(unadjusted), use a different vce()")
          = _assert !("unadjusted"=="unadjusted" & ""=="pweight"), msg("pweight
> s do not work with vce(unadjusted), use a different vce()")
            ------------------------------------------------- begin _assert ---
            - version 8
            - syntax anything [ , msg(str) rc(str) ]
            - capture assert `anything'
            = capture assert !("unadjusted"=="unadjusted" & ""=="pweight")
            - local rcc = _rc
            - if `rcc' {
            = if 0 {
              if `"`msg'"' != "" {
              dis as err `"`msg'"'
              }
              else {
              dis as err `"assert failed: `anything'"'
              }
              if "`rc'" != "" {
              exit `rc'
              }
              else {
              exit `rcc'
              }
              }
            --------------------------------------------------- end _assert ---
          - loc num_clusters : word count `clustervars'
          = loc num_clusters : word count 
          - _assert inlist( (`num_clusters'>0) + ("`vcetype'"=="cluster") , 0 ,
>  2), msg("Can't specify cluster without clustervars (and viceversa)")
          = _assert inlist( (0>0) + ("unadjusted"=="cluster") , 0 , 2), msg("Ca
> n't specify cluster without clustervars (and viceversa)")
            ------------------------------------------------- begin _assert ---
            - version 8
            - syntax anything [ , msg(str) rc(str) ]
            - capture assert `anything'
            = capture assert inlist( (0>0) + ("unadjusted"=="cluster") , 0 , 2)
            - local rcc = _rc
            - if `rcc' {
            = if 0 {
              if `"`msg'"' != "" {
              dis as err `"`msg'"'
              }
              else {
              dis as err `"assert failed: `anything'"'
              }
              if "`rc'" != "" {
              exit `rc'
              }
              else {
              exit `rcc'
              }
              }
            --------------------------------------------------- end _assert ---
          - _assert "`options'" == "", msg("VCE options not supported: `options
> '")
          = _assert "" == "", msg("VCE options not supported: ")
            ------------------------------------------------- begin _assert ---
            - version 8
            - syntax anything [ , msg(str) rc(str) ]
            - capture assert `anything'
            = capture assert "" == ""
            - local rcc = _rc
            - if `rcc' {
            = if 0 {
              if `"`msg'"' != "" {
              dis as err `"`msg'"'
              }
              else {
              dis as err `"assert failed: `anything'"'
              }
              if "`rc'" != "" {
              exit `rc'
              }
              else {
              exit `rcc'
              }
              }
            --------------------------------------------------- end _assert ---
          - sreturn loc vcetype `vcetype'
          = sreturn loc vcetype unadjusted
          - sreturn loc num_clusters `num_clusters'
          = sreturn loc num_clusters 0
          - sreturn loc clustervars `clustervars'
          = sreturn loc clustervars 
          - sreturn loc base_clustervars `base_clustervars'
          = sreturn loc base_clustervars 
          - sreturn loc vceextra `options'
          = sreturn loc vceextra 
          ------------------------------------------------ end ms_parse_vce ---
        - if (`verbose' > 0) {
        = if (0 > 0) {
          di as text _n "## Parsing vce({res}`vce'{txt})"
          sreturn list
          }
        - loc vcetype = "`s(vcetype)'"
        = loc vcetype = "unadjusted"
        - loc num_clusters = `s(num_clusters)'
        = loc num_clusters = 0
        - loc clustervars = "`s(clustervars)'"
        = loc clustervars = ""
        - loc base_clustervars = "`s(base_clustervars)'"
        = loc base_clustervars = ""
        - loc vceextra = "`s(vceextra)'"
        = loc vceextra = ""
        - loc varlist `depvar' `indepvars' `base_clustervars'
        = loc varlist paygrade F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_
> male_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F1
> 7_to_male_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male_m
> gr F15_to_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_to_m
> ale_mgr F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.F12
> _to_male_mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.male#
> c.F10_to_male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.mal
> e#c.F8_to_male_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr F6_to_male_mgr i.ma
> le#c.F6_to_male_mgr F5_to_male_mgr i.male#c.F5_to_male_mgr F4_to_male_mgr i.m
> ale#c.F4_to_male_mgr F3_to_male_mgr i.male#c.F3_to_male_mgr F2_to_male_mgr i.
> male#c.F2_to_male_mgr F1_to_male_mgr i.male#c.F1_to_male_mgr L0_to_male_mgr i
> .male#c.L0_to_male_mgr L1_to_male_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr 
> i.male#c.L2_to_male_mgr L3_to_male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr
>  i.male#c.L4_to_male_mgr L5_to_male_mgr i.male#c.L5_to_male_mgr L6_to_male_mg
> r i.male#c.L6_to_male_mgr L7_to_male_mgr i.male#c.L7_to_male_mgr L8_to_male_m
> gr i.male#c.L8_to_male_mgr L9_to_male_mgr i.male#c.L9_to_male_mgr L10_to_male
> _mgr i.male#c.L10_to_male_mgr L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to
> _male_mgr i.male#c.L12_to_male_mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L
> 14_to_male_mgr i.male#c.L14_to_male_mgr L15_to_male_mgr i.male#c.L15_to_male_
> mgr L16_to_male_mgr i.male#c.L16_to_male_mgr L17_to_male_mgr i.male#c.L17_to_
> male_mgr L18_to_male_mgr i.male#c.L18_to_male_mgr L19_to_male_mgr i.male#c.L1
> 9_to_male_mgr L20_to_male_mgr i.male#c.L20_to_male_mgr L21_to_male_mgr i.male
> #c.L21_to_male_mgr L22_to_male_mgr i.male#c.L22_to_male_mgr L23_to_male_mgr i
> .male#c.L23_to_male_mgr L24_to_male_mgr i.male#c.L24_to_male_mgr L25_to_male_
> mgr i.male#c.L25_to_male_mgr L26_to_male_mgr i.male#c.L26_to_male_mgr L27_to_
> male_mgr i.male#c.L27_to_male_mgr L28_to_male_mgr i.male#c.L28_to_male_mgr L2
> 9_to_male_mgr i.male#c.L29_to_male_mgr L30_to_male_mgr i.male#c.L30_to_male_m
> gr i.male#i.F47_to_male_mgr i.male#i.F46_to_male_mgr i.male#i.F45_to_male_mgr
>  i.male#i.F44_to_male_mgr i.male#i.F43_to_male_mgr i.male#i.F42_to_male_mgr i
> .male#i.F41_to_male_mgr i.male#i.F40_to_male_mgr i.male#i.F39_to_male_mgr i.m
> ale#i.F38_to_male_mgr i.male#i.F37_to_male_mgr i.male#i.F36_to_male_mgr i.mal
> e#i.F35_to_male_mgr i.male#i.F34_to_male_mgr i.male#i.F33_to_male_mgr i.male#
> i.F32_to_male_mgr i.male#i.F31_to_male_mgr i.male#i.F30_to_male_mgr i.male#i.
> F29_to_male_mgr i.male#i.F28_to_male_mgr i.male#i.F27_to_male_mgr i.male#i.F2
> 6_to_male_mgr i.male#i.F25_to_male_mgr i.male#i.F24_to_male_mgr i.male#i.F23_
> to_male_mgr i.male#i.F22_to_male_mgr i.male#i.F21_to_male_mgr i.male#i.L31_to
> _male_mgr i.male#i.L32_to_male_mgr i.male#i.L33_to_male_mgr i.male#i.L34_to_m
> ale_mgr i.male#i.L35_to_male_mgr i.male#i.L36_to_male_mgr i.male#i.L37_to_mal
> e_mgr i.male#i.L38_to_male_mgr i.male#i.L39_to_male_mgr i.male#i.L40_to_male_
> mgr i.male#i.L41_to_male_mgr i.male#i.L42_to_male_mgr i.male#i.L43_to_male_mg
> r i.male#i.L44_to_male_mgr i.male#i.L45_to_male_mgr i.male#i.L46_to_male_mgr 
> i.male#i.L47_to_male_mgr 
        - tempvar touse
        - marksample touse, strok
        - _assert ("`absorb'`noabsorb'" != ""), msg("option {bf:absorb()} or {b
> f:noabsorb} required")
        = _assert ("noabsorb" != ""), msg("option {bf:absorb()} or {bf:noabsorb
> } required")
          --------------------------------------------------- begin _assert ---
          - version 8
          - syntax anything [ , msg(str) rc(str) ]
          - capture assert `anything'
          = capture assert ("noabsorb" != "")
          - local rcc = _rc
          - if `rcc' {
          = if 0 {
            if `"`msg'"' != "" {
            dis as err `"`msg'"'
            }
            else {
            dis as err `"assert failed: `anything'"'
            }
            if "`rc'" != "" {
            exit `rc'
            }
            else {
            exit `rcc'
            }
            }
          ----------------------------------------------------- end _assert ---
        - if ("`noabsorb'" != "") {
        = if ("noabsorb" != "") {
        - _assert ("`absorb'" == ""), msg("{bf:absorb()} and {bf:noabsorb} are 
> mutually exclusive")
        = _assert ("" == ""), msg("{bf:absorb()} and {bf:noabsorb} are mutually
>  exclusive")
          --------------------------------------------------- begin _assert ---
          - version 8
          - syntax anything [ , msg(str) rc(str) ]
          - capture assert `anything'
          = capture assert ("" == "")
          - local rcc = _rc
          - if `rcc' {
          = if 0 {
            if `"`msg'"' != "" {
            dis as err `"`msg'"'
            }
            else {
            dis as err `"assert failed: `anything'"'
            }
            if "`rc'" != "" {
            exit `rc'
            }
            else {
            exit `rcc'
            }
            }
          ----------------------------------------------------- end _assert ---
        - }
        - if (`timeit') timer off 29
        = if (0) timer off 29
        - ms_add_comma, loc(absorb) cmd(`"`absorb'"') opt(`"`options'"')
        = ms_add_comma, loc(absorb) cmd(`""') opt(`""')
          ---------------------------------------------- begin ms_add_comma ---
          - syntax, [cmd(string)] [opt(string)] LOCal(name local)
          - cap TryWithComma `cmd' , `opt'
          = cap TryWithComma  , 
            ------------------------------- begin ms_add_comma.TryWithComma ---
            - syntax anything(everything equalok), [*]
            --------------------------------- end ms_add_comma.TryWithComma ---
          - loc comma = cond(c(rc) | (`"`opt'"'== ""), "", ",")
          = loc comma = cond(c(rc) | (`""'== ""), "", ",")
          - if ("`cmd'" == "") & ("`opt'" != "") loc comma ","
          = if ("" == "") & ("" != "") loc comma ","
          - c_local `local' `cmd'`comma' `opt'
          = c_local absorb  
          ------------------------------------------------ end ms_add_comma ---
        - if (`timeit') timer on 20
        = if (0) timer on 20
        - mata: HDFE = fixed_effects(`"`absorb'"', "`touse'", "`weight'", "`exp
> '", `drop_singletons', `verbose')
        = mata: HDFE = fixed_effects(`""', "__000002", "", "", 1, 0)
          --------------------------------------------- begin reghdfe_parse ---
          - cap drop __hdfe*
          - ms_parse_absvars `0'
          = ms_parse_absvars 
            ---------------------------------------- begin ms_parse_absvars ---
            - syntax [anything(id="absvars" name=absvars equalok everything)], 
> [NOIsily] [SAVEfe Generate] [REPLACE] [*]
            - loc save_all_fe = ("`savefe'" != "") | ("`generate'" != "")
            = loc save_all_fe = ("" != "") | ("" != "")
            - if (`"`absvars'"' == "") {
            = if (`""' == "") {
            - sreturn clear
            - sreturn loc extended_absvars ""
            - sreturn loc num_slopes = "0"
            - sreturn loc intercepts = "1"
            - sreturn loc targets = `" """'
            - sreturn loc cvars = `" """'
            - sreturn loc ivars = `"_cons"'
            - sreturn loc absvars = `" """'
            - sreturn loc save_all_fe = 0
            - sreturn loc save_any_fe = 0
            - sreturn loc has_intercept = 1
            - sreturn loc G = 1
            - sreturn loc options = `"`options'"'
            = sreturn loc options = `""'
            - exit
            ------------------------------------------ end ms_parse_absvars ---
          - loc extended_absvars `"`s(extended_absvars)'"'
          = loc extended_absvars `""'
          - mata: st_local("unquoted_absvars", subinstr(st_global("s(absvars)")
> , `"""', ""))
          - loc 0, `s(options)'
          = loc 0, 
          - loc G = `s(G)'
          = loc G = 1
          - syntax, [ RESiduals(name) RESiduals2 TOLerance(real -1) MAXITeratio
> ns(real -1) ALGorithm(string) TRAnsform(string) ACCELeration(string) SLOPEmet
> hod(string) PRUNE PRECONDition POOLsize(integer 0) DOFadjustments(string) GRO
> UPVar(name) CONDition RRE(varname) noCONstant KEEPSINgletons Verbose(numlist 
> min=1 max=1 >=-1 <=5 integer) ] [*]
          - if ("`keepsingletons'"!="") sreturn loc drop_singletons = 0
          = if (""!="") sreturn loc drop_singletons = 0
          - if ("`verbose'"!="") sreturn loc verbose = `verbose'
          = if (""!="") sreturn loc verbose = 
          - sreturn loc report_constant = "`constant'" != "noconstant"
          = sreturn loc report_constant = "" != "noconstant"
          - sreturn loc options `"`options'"'
          = sreturn loc options `""'
          - assert "$reghdfe_touse" != ""
          = assert "__000002" != ""
          - cap conf var $reghdfe_touse
          = cap conf var __000002
          - if (c(rc)) gen byte $reghdfe_touse = 1
          = if (c(rc)) gen byte __000002 = 1
          - markout $reghdfe_touse `unquoted_absvars', strok
          = markout __000002 , strok
          - loc maxiterations = int(`maxiterations')
          = loc maxiterations = int(-1)
          - if (`tolerance' > 0) sreturn loc tolerance = `tolerance'
          = if (-1 > 0) sreturn loc tolerance = -1
          - if (`maxiterations' > 0) sreturn loc maxiter = `maxiterations'
          = if (-1 > 0) sreturn loc maxiter = -1
          - if ("`transform'" != "") {
          = if ("" != "") {
            loc transform = lower("`transform'")
            loc valid_transforms cimmino kaczmarz symmetric_kaczmarz rand_kaczm
> arz
            foreach x of local valid_transforms {
            if (strpos("`x'", "`transform'")==1) loc transform `x'
            }
            _assert (`: list transform in valid_transforms'), msg("invalid tran
> sform: `transform'")
            sreturn loc transform "`transform'"
            }
          - if ("`acceleration'" != "") {
          = if ("" != "") {
            loc acceleration = lower("`acceleration'")
            if ("`acceleration'"=="cg") loc acceleration conjugate_gradient
            if ("`acceleration'"=="sd") loc acceleration steepest_descent
            if ("`acceleration'"=="off") loc acceleration none
            loc valid_accelerations conjugate_gradient steepest_descent aitken 
> none hybrid lsmr
            foreach x of local valid_accelerations {
            if (strpos("`x'", "`acceleration'")==1) loc acceleration `x'
            }
            _assert (`: list acceleration in valid_accelerations'), msg("invali
> d acceleration: `acceleration'")
            sreturn loc acceleration "`acceleration'"
            }
          - if ("`prune'" == "prune") sreturn loc prune = 1
          = if ("" == "prune") sreturn loc prune = 1
          - if ("`dofadjustments'"=="") local dofadjustments all
          = if (""=="") local dofadjustments all
          - loc 0 , `dofadjustments'
          = loc 0 , all
          - syntax, [ALL NONE] [FIRSTpair PAIRwise] [CLusters] [CONTinuous]
          - local opts `pairwise' `firstpair' `clusters' `continuous'
          = local opts    
          - local n : word count `opts'
          = local n : word count 
          - local first_opt : word 1 of `opt'
          = local first_opt : word 1 of 
          - opts_exclusive "`all' `none'" dofadjustments
          = opts_exclusive "all " dofadjustments
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts all 
            - local n 0
            - while `"`opts'"' != "" {
            = while `"all"' != "" {
            - local ++n
            - gettoken item`n' opts : opts, bind
            = gettoken item1 opts : opts, bind
            - }
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 1 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`pairwise' `firstpair'" dofadjustments
          = opts_exclusive " " dofadjustments
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`all' `first_opt'" dofadjustments
          = opts_exclusive "all " dofadjustments
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts all 
            - local n 0
            - while `"`opts'"' != "" {
            = while `"all"' != "" {
            - local ++n
            - gettoken item`n' opts : opts, bind
            = gettoken item1 opts : opts, bind
            - }
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 1 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`none' `first_opt'" dofadjustments
          = opts_exclusive " " dofadjustments
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - if ("`none'" != "") local opts
          = if ("" != "") local opts
          - if ("`all'" != "") local opts pairwise clusters continuous
          = if ("all" != "") local opts pairwise clusters continuous
          - if ("`groupvar'"!="") conf new var `groupvar'
          = if (""!="") conf new var 
          - sreturn local dofadjustments "`opts'"
          = sreturn local dofadjustments "pairwise clusters continuous"
          - sreturn loc groupvar "`s(groupvar)'"
          = sreturn loc groupvar ""
          - if ("`residuals2'" != "") {
          = if ("" != "") {
            _assert ("`residuals'" == ""), msg("residuals() syntax error")
            cap drop _reghdfe_resid
            sreturn loc residuals _reghdfe_resid
            }
          - else if ("`residuals'"!="") {
          = else if (""!="") {
            conf new var `residuals'
            sreturn loc residuals `residuals'
            }
          - if ("`condition'"!="") {
          = if (""!="") {
            _assert `G'==2, msg("Computing finite condition number requires two
>  FEs")
            sreturn loc finite_condition 1
            }
          - sreturn loc compute_rre = ("`rre'" != "")
          = sreturn loc compute_rre = ("" != "")
          - if ("`rre'" != "") {
          = if ("" != "") {
            sreturn loc rre `rre'
            }
          - if (`poolsize' < 1) loc poolsize .
          = if (0 < 1) loc poolsize .
          - sreturn loc poolsize `poolsize'
          = sreturn loc poolsize .
          - sreturn loc precondition = "`precondition'" != ""
          = sreturn loc precondition = "" != ""
          ----------------------------------------------- end reghdfe_parse ---
        - if (`timeit') timer off 20
        = if (0) timer off 20
        - mata: HDFE.cmdline = "reghdfe " + st_local("0")
        - loc options `s(options)'
        = loc options 
        - mata: st_local("N", strofreal(HDFE.N))
        - if (`N' == 0) error 2000
        = if (11938 == 0) error 2000
        - mata: HDFE.depvar = "`depvar'"
        = mata: HDFE.depvar = "paygrade"
        - mata: HDFE.indepvars = "`indepvars'"
        = mata: HDFE.indepvars = "F20_to_male_mgr i.male#c.F20_to_male_mgr F19_
> to_male_mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr
>  F17_to_male_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_mal
> e_mgr F15_to_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_t
> o_male_mgr F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.
> F12_to_male_mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.ma
> le#c.F10_to_male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.
> male#c.F8_to_male_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr F6_to_male_mgr i
> .male#c.F6_to_male_mgr F5_to_male_mgr i.male#c.F5_to_male_mgr F4_to_male_mgr 
> i.male#c.F4_to_male_mgr F3_to_male_mgr i.male#c.F3_to_male_mgr F2_to_male_mgr
>  i.male#c.F2_to_male_mgr F1_to_male_mgr i.male#c.F1_to_male_mgr L0_to_male_mg
> r i.male#c.L0_to_male_mgr L1_to_male_mgr i.male#c.L1_to_male_mgr L2_to_male_m
> gr i.male#c.L2_to_male_mgr L3_to_male_mgr i.male#c.L3_to_male_mgr L4_to_male_
> mgr i.male#c.L4_to_male_mgr L5_to_male_mgr i.male#c.L5_to_male_mgr L6_to_male
> _mgr i.male#c.L6_to_male_mgr L7_to_male_mgr i.male#c.L7_to_male_mgr L8_to_mal
> e_mgr i.male#c.L8_to_male_mgr L9_to_male_mgr i.male#c.L9_to_male_mgr L10_to_m
> ale_mgr i.male#c.L10_to_male_mgr L11_to_male_mgr i.male#c.L11_to_male_mgr L12
> _to_male_mgr i.male#c.L12_to_male_mgr L13_to_male_mgr i.male#c.L13_to_male_mg
> r L14_to_male_mgr i.male#c.L14_to_male_mgr L15_to_male_mgr i.male#c.L15_to_ma
> le_mgr L16_to_male_mgr i.male#c.L16_to_male_mgr L17_to_male_mgr i.male#c.L17_
> to_male_mgr L18_to_male_mgr i.male#c.L18_to_male_mgr L19_to_male_mgr i.male#c
> .L19_to_male_mgr L20_to_male_mgr i.male#c.L20_to_male_mgr L21_to_male_mgr i.m
> ale#c.L21_to_male_mgr L22_to_male_mgr i.male#c.L22_to_male_mgr L23_to_male_mg
> r i.male#c.L23_to_male_mgr L24_to_male_mgr i.male#c.L24_to_male_mgr L25_to_ma
> le_mgr i.male#c.L25_to_male_mgr L26_to_male_mgr i.male#c.L26_to_male_mgr L27_
> to_male_mgr i.male#c.L27_to_male_mgr L28_to_male_mgr i.male#c.L28_to_male_mgr
>  L29_to_male_mgr i.male#c.L29_to_male_mgr L30_to_male_mgr i.male#c.L30_to_mal
> e_mgr i.male#i.F47_to_male_mgr i.male#i.F46_to_male_mgr i.male#i.F45_to_male_
> mgr i.male#i.F44_to_male_mgr i.male#i.F43_to_male_mgr i.male#i.F42_to_male_mg
> r i.male#i.F41_to_male_mgr i.male#i.F40_to_male_mgr i.male#i.F39_to_male_mgr 
> i.male#i.F38_to_male_mgr i.male#i.F37_to_male_mgr i.male#i.F36_to_male_mgr i.
> male#i.F35_to_male_mgr i.male#i.F34_to_male_mgr i.male#i.F33_to_male_mgr i.ma
> le#i.F32_to_male_mgr i.male#i.F31_to_male_mgr i.male#i.F30_to_male_mgr i.male
> #i.F29_to_male_mgr i.male#i.F28_to_male_mgr i.male#i.F27_to_male_mgr i.male#i
> .F26_to_male_mgr i.male#i.F25_to_male_mgr i.male#i.F24_to_male_mgr i.male#i.F
> 23_to_male_mgr i.male#i.F22_to_male_mgr i.male#i.F21_to_male_mgr i.male#i.L31
> _to_male_mgr i.male#i.L32_to_male_mgr i.male#i.L33_to_male_mgr i.male#i.L34_t
> o_male_mgr i.male#i.L35_to_male_mgr i.male#i.L36_to_male_mgr i.male#i.L37_to_
> male_mgr i.male#i.L38_to_male_mgr i.male#i.L39_to_male_mgr i.male#i.L40_to_ma
> le_mgr i.male#i.L41_to_male_mgr i.male#i.L42_to_male_mgr i.male#i.L43_to_male
> _mgr i.male#i.L44_to_male_mgr i.male#i.L45_to_male_mgr i.male#i.L46_to_male_m
> gr i.male#i.L47_to_male_mgr"
        - mata: HDFE.vcetype = "`vcetype'"
        = mata: HDFE.vcetype = "unadjusted"
        - mata: HDFE.num_clusters = `num_clusters'
        = mata: HDFE.num_clusters = 0
        - mata: HDFE.clustervars = tokens("`clustervars'")
        = mata: HDFE.clustervars = tokens("")
        - mata: HDFE.base_clustervars = tokens("`base_clustervars'")
        = mata: HDFE.base_clustervars = tokens("")
        - mata: HDFE.vceextra = "`vceextra'"
        = mata: HDFE.vceextra = ""
        - mata: HDFE.compact = `compact'
        = mata: HDFE.compact = 0
        - if (`compact') {
        = if (0) {
          loc panelvar "`_dta[_TSpanel]'"
          loc timevar "`_dta[_TStvar]'"
          cap conf var `panelvar', exact
          if (c(rc)) loc panelvar
          cap conf var `timevar', exact
          if (c(rc)) loc timevar
          mata: HDFE.panelvar = "`panelvar'"
          mata: HDFE.timevar = "`timevar'"
          c_local keepvars `basevars' `base_clustervars' `panelvar' `timevar'
          }
        - if ("`summarize'" != "") {
        = if ("" != "") {
          _assert ("`summarize2'" == ""), msg("summarize() syntax error")
          loc summarize2 mean min max
          }
        - ParseSummarize `summarize2'
        = ParseSummarize 
          ------------------------------------ begin reghdfe.ParseSummarize ---
          - sreturn clear
          - syntax [namelist(name=stats)] , [QUIetly]
          - local quietly = ("`quietly'"!="")
          = local quietly = (""!="")
          - sreturn loc stats "`stats'"
          = sreturn loc stats ""
          - sreturn loc quietly = `quietly'
          = sreturn loc quietly = 0
          -------------------------------------- end reghdfe.ParseSummarize ---
        - mata: HDFE.summarize_stats = "`s(stats)'"
        = mata: HDFE.summarize_stats = ""
        - mata: HDFE.summarize_quietly = `s(quietly)'
        = mata: HDFE.summarize_quietly = 0
        - mata: HDFE.notes = `"`notes'"'
        = mata: HDFE.notes = `""'
        - mata: HDFE.store_sample = ("`nosample'"=="")
        = mata: HDFE.store_sample = (""=="")
        - mata: HDFE.timeit = `timeit'
        = mata: HDFE.timeit = 0
        - _get_diopts diopts options, `options'
        = _get_diopts diopts options, 
          ----------------------------------------------- begin _get_diopts ---
          - version 11
          - syntax namelist(max=2) [, *]
          - gettoken name1 namelist : namelist
          - gettoken name2 namelist : namelist
          - GetDiopts diopts options, `options'
          = GetDiopts diopts options, 
            ----------------------------------- begin _get_diopts.GetDiopts ---
            - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASElevels
>  NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells NO
> OMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sform
> at(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(st
> ring) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV ABB
> REV
            - syntax namelist(max=2) [, `DIOPTS' *]
            = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevels 
> ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells 
> EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(
> string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru
> ) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru)
>  NOABBREV ABBREV *]
            - opts_exclusive "`allbaselevels' `noallbaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`allbaselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`baselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`emptycells' `noemptycells'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`fvlabel' `nofvlabel'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`omitted' `noomitted'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`lstretch' `nolstretch'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`cnsreport' `fullcnsreport'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`coeflegend' `selegend'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local K : list sizeof namelist
            - gettoken c_diopts c_opts : namelist
            - opts_exclusive "`coding' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`versus' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`abbrev' `noabbrev'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local allbaselevels `allbaselevels' `noallbaselevels'
            = local allbaselevels  
            - local baselevels `baselevels' `nobaselevels'
            = local baselevels  
            - local emptycells `emptycells' `noemptycells'
            = local emptycells  
            - local omitted `omitted' `noomitted'
            = local omitted  
            - local lstretch `lstretch' `nolstretch'
            = local lstretch  
            - local fvlabel `fvlabel' `nofvlabel'
            = local fvlabel  
            - local abbrev `abbrev' `noabbrev'
            = local abbrev  
            - if "`allbaselevels'`baselevels'" == "" {
            = if "" == "" {
            - if c(showbaselevels) == "all" {
              local allbaselevels allbaselevels
              }
            - else if c(showbaselevels) == "on" {
              local baselevels baselevels
              }
            - }
            - if "`emptycells'" == "" {
            = if "" == "" {
            - if c(showemptycells) == "off" {
              local emptycells noemptycells
              }
            - }
            - if "`omitted'" == "" {
            = if "" == "" {
            - if c(showomitted) == "off" {
              local omitted noomitted
              }
            - }
            - if "`lstretch'" == "" {
            = if "" == "" {
            - if c(lstretch) == "off" {
              local lstretch nolstretch
              }
            - }
            - if `:length local cformat' {
            = if 0 {
              confirm numeric format `cformat'
              if fmtwidth(`"`cformat'"') > 9 {
              local cformat "%9.0g"
              di "{txt}note: invalid cformat(), using default"
              }
              sreturn local cformat `"`cformat'"'
              local cformat `"cformat(`cformat')"'
              }
            - if `:length local sformat' {
            = if 0 {
              confirm numeric format `sformat'
              if fmtwidth(`"`sformat'"') > 8 {
              local sformat "%8.2f"
              di "{txt}note: invalid sformat(), using default"
              }
              sreturn local sformat `"`sformat'"'
              local sformat `"sformat(`sformat')"'
              }
            - if `:length local pformat' {
            = if 0 {
              confirm numeric format `pformat'
              if fmtwidth(`"`pformat'"') > 5 {
              local pformat "%5.3f"
              di "{txt}note: invalid pformat(), using default"
              }
              sreturn local pformat `"`pformat'"'
              local pformat `"pformat(`pformat')"'
              }
            - if `K' == 1 & `:length local options' {
            = if 2 == 1 & 0 {
              syntax namelist(max=2) [, `DIOPTS']
              }
            - if reldif(`level', c(level)) > 1e-3 {
            = if reldif(95, c(level)) > 1e-3 {
              local levelopt level(`level')
              }
            - Wrapon , `fvwrapon'
            = Wrapon , 
              ------------------------------------ begin _get_diopts.Wrapon ---
              - capture syntax [, WOrd WIdth]
              - if c(rc) {
                di as err "invalid fvwrapon() option;"
                syntax [, WOrd WIdth]
                exit 198
                }
              - opts_exclusive "`word' `width'" fvwrapon
              = opts_exclusive " " fvwrapon
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local fvwrapon `word' `width'
              = local fvwrapon  
              - if `:length local fvwrapon' {
              = if 0 {
                c_local fvwrapon fvwrapon(`fvwrapon')
                }
              -------------------------------------- end _get_diopts.Wrapon ---
            - if "`fvwrap'" != "" {
            = if "" != "" {
              FVWrap, `fvwrap'
              }
            - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `baseleve
> ls' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflegend
> ' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvwra
> p' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
            = c_local diopts                         
            - if `K' == 2 {
            = if 2 == 2 {
            - c_local `c_opts' `"`options'"'
            = c_local  options `""'
            - }
            - sreturn local coding `coding'
            = sreturn local coding 
            - sreturn local versus `versus'
            = sreturn local versus 
            - sreturn local compare `compare'
            = sreturn local compare 
            - sreturn local level `level'
            = sreturn local level 95
            ------------------------------------- end _get_diopts.GetDiopts ---
          - c_local `name1' `"`diopts'"'
          = c_local diopts `""'
          - local snames : s(macros)
          - foreach sname of local snames {
          - local S_`sname' = s(`sname')
          = local S_level = s(level)
          - }
          - local S_`sname' = s(`sname')
          = local S_quietly = s(quietly)
          - }
          - sreturn clear
          - GetDiopts DEFAULT
            ----------------------------------- begin _get_diopts.GetDiopts ---
            - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASElevels
>  NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells NO
> OMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sform
> at(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(st
> ring) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV ABB
> REV
            - syntax namelist(max=2) [, `DIOPTS' *]
            = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevels 
> ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells 
> EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(
> string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru
> ) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru)
>  NOABBREV ABBREV *]
            - opts_exclusive "`allbaselevels' `noallbaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`allbaselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`baselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`emptycells' `noemptycells'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`fvlabel' `nofvlabel'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`omitted' `noomitted'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`lstretch' `nolstretch'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`cnsreport' `fullcnsreport'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`coeflegend' `selegend'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local K : list sizeof namelist
            - gettoken c_diopts c_opts : namelist
            - opts_exclusive "`coding' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`versus' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`abbrev' `noabbrev'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local allbaselevels `allbaselevels' `noallbaselevels'
            = local allbaselevels  
            - local baselevels `baselevels' `nobaselevels'
            = local baselevels  
            - local emptycells `emptycells' `noemptycells'
            = local emptycells  
            - local omitted `omitted' `noomitted'
            = local omitted  
            - local lstretch `lstretch' `nolstretch'
            = local lstretch  
            - local fvlabel `fvlabel' `nofvlabel'
            = local fvlabel  
            - local abbrev `abbrev' `noabbrev'
            = local abbrev  
            - if "`allbaselevels'`baselevels'" == "" {
            = if "" == "" {
            - if c(showbaselevels) == "all" {
              local allbaselevels allbaselevels
              }
            - else if c(showbaselevels) == "on" {
              local baselevels baselevels
              }
            - }
            - if "`emptycells'" == "" {
            = if "" == "" {
            - if c(showemptycells) == "off" {
              local emptycells noemptycells
              }
            - }
            - if "`omitted'" == "" {
            = if "" == "" {
            - if c(showomitted) == "off" {
              local omitted noomitted
              }
            - }
            - if "`lstretch'" == "" {
            = if "" == "" {
            - if c(lstretch) == "off" {
              local lstretch nolstretch
              }
            - }
            - if `:length local cformat' {
            = if 0 {
              confirm numeric format `cformat'
              if fmtwidth(`"`cformat'"') > 9 {
              local cformat "%9.0g"
              di "{txt}note: invalid cformat(), using default"
              }
              sreturn local cformat `"`cformat'"'
              local cformat `"cformat(`cformat')"'
              }
            - if `:length local sformat' {
            = if 0 {
              confirm numeric format `sformat'
              if fmtwidth(`"`sformat'"') > 8 {
              local sformat "%8.2f"
              di "{txt}note: invalid sformat(), using default"
              }
              sreturn local sformat `"`sformat'"'
              local sformat `"sformat(`sformat')"'
              }
            - if `:length local pformat' {
            = if 0 {
              confirm numeric format `pformat'
              if fmtwidth(`"`pformat'"') > 5 {
              local pformat "%5.3f"
              di "{txt}note: invalid pformat(), using default"
              }
              sreturn local pformat `"`pformat'"'
              local pformat `"pformat(`pformat')"'
              }
            - if `K' == 1 & `:length local options' {
            = if 1 == 1 & 0 {
              syntax namelist(max=2) [, `DIOPTS']
              }
            - if reldif(`level', c(level)) > 1e-3 {
            = if reldif(95, c(level)) > 1e-3 {
              local levelopt level(`level')
              }
            - Wrapon , `fvwrapon'
            = Wrapon , 
              ------------------------------------ begin _get_diopts.Wrapon ---
              - capture syntax [, WOrd WIdth]
              - if c(rc) {
                di as err "invalid fvwrapon() option;"
                syntax [, WOrd WIdth]
                exit 198
                }
              - opts_exclusive "`word' `width'" fvwrapon
              = opts_exclusive " " fvwrapon
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local fvwrapon `word' `width'
              = local fvwrapon  
              - if `:length local fvwrapon' {
              = if 0 {
                c_local fvwrapon fvwrapon(`fvwrapon')
                }
              -------------------------------------- end _get_diopts.Wrapon ---
            - if "`fvwrap'" != "" {
            = if "" != "" {
              FVWrap, `fvwrap'
              }
            - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `baseleve
> ls' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflegend
> ' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvwra
> p' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
            = c_local DEFAULT                         
            - if `K' == 2 {
            = if 1 == 2 {
              c_local `c_opts' `"`options'"'
              }
            - sreturn local coding `coding'
            = sreturn local coding 
            - sreturn local versus `versus'
            = sreturn local versus 
            - sreturn local compare `compare'
            = sreturn local compare 
            - sreturn local level `level'
            = sreturn local level 95
            ------------------------------------- end _get_diopts.GetDiopts ---
          - if `"`name2'"' == "" {
          = if `"options"' == "" {
            GetDiopts DUPS, `options'
            }
          - else {
          - GetDiopts DUPS options, `options'
          = GetDiopts DUPS options, 
            ----------------------------------- begin _get_diopts.GetDiopts ---
            - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASElevels
>  NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells NO
> OMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sform
> at(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(st
> ring) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV ABB
> REV
            - syntax namelist(max=2) [, `DIOPTS' *]
            = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevels 
> ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells 
> EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(
> string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru
> ) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru)
>  NOABBREV ABBREV *]
            - opts_exclusive "`allbaselevels' `noallbaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`allbaselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`baselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`emptycells' `noemptycells'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`fvlabel' `nofvlabel'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`omitted' `noomitted'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`lstretch' `nolstretch'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`cnsreport' `fullcnsreport'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`coeflegend' `selegend'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local K : list sizeof namelist
            - gettoken c_diopts c_opts : namelist
            - opts_exclusive "`coding' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`versus' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`abbrev' `noabbrev'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local allbaselevels `allbaselevels' `noallbaselevels'
            = local allbaselevels  
            - local baselevels `baselevels' `nobaselevels'
            = local baselevels  
            - local emptycells `emptycells' `noemptycells'
            = local emptycells  
            - local omitted `omitted' `noomitted'
            = local omitted  
            - local lstretch `lstretch' `nolstretch'
            = local lstretch  
            - local fvlabel `fvlabel' `nofvlabel'
            = local fvlabel  
            - local abbrev `abbrev' `noabbrev'
            = local abbrev  
            - if "`allbaselevels'`baselevels'" == "" {
            = if "" == "" {
            - if c(showbaselevels) == "all" {
              local allbaselevels allbaselevels
              }
            - else if c(showbaselevels) == "on" {
              local baselevels baselevels
              }
            - }
            - if "`emptycells'" == "" {
            = if "" == "" {
            - if c(showemptycells) == "off" {
              local emptycells noemptycells
              }
            - }
            - if "`omitted'" == "" {
            = if "" == "" {
            - if c(showomitted) == "off" {
              local omitted noomitted
              }
            - }
            - if "`lstretch'" == "" {
            = if "" == "" {
            - if c(lstretch) == "off" {
              local lstretch nolstretch
              }
            - }
            - if `:length local cformat' {
            = if 0 {
              confirm numeric format `cformat'
              if fmtwidth(`"`cformat'"') > 9 {
              local cformat "%9.0g"
              di "{txt}note: invalid cformat(), using default"
              }
              sreturn local cformat `"`cformat'"'
              local cformat `"cformat(`cformat')"'
              }
            - if `:length local sformat' {
            = if 0 {
              confirm numeric format `sformat'
              if fmtwidth(`"`sformat'"') > 8 {
              local sformat "%8.2f"
              di "{txt}note: invalid sformat(), using default"
              }
              sreturn local sformat `"`sformat'"'
              local sformat `"sformat(`sformat')"'
              }
            - if `:length local pformat' {
            = if 0 {
              confirm numeric format `pformat'
              if fmtwidth(`"`pformat'"') > 5 {
              local pformat "%5.3f"
              di "{txt}note: invalid pformat(), using default"
              }
              sreturn local pformat `"`pformat'"'
              local pformat `"pformat(`pformat')"'
              }
            - if `K' == 1 & `:length local options' {
            = if 2 == 1 & 0 {
              syntax namelist(max=2) [, `DIOPTS']
              }
            - if reldif(`level', c(level)) > 1e-3 {
            = if reldif(95, c(level)) > 1e-3 {
              local levelopt level(`level')
              }
            - Wrapon , `fvwrapon'
            = Wrapon , 
              ------------------------------------ begin _get_diopts.Wrapon ---
              - capture syntax [, WOrd WIdth]
              - if c(rc) {
                di as err "invalid fvwrapon() option;"
                syntax [, WOrd WIdth]
                exit 198
                }
              - opts_exclusive "`word' `width'" fvwrapon
              = opts_exclusive " " fvwrapon
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local fvwrapon `word' `width'
              = local fvwrapon  
              - if `:length local fvwrapon' {
              = if 0 {
                c_local fvwrapon fvwrapon(`fvwrapon')
                }
              -------------------------------------- end _get_diopts.Wrapon ---
            - if "`fvwrap'" != "" {
            = if "" != "" {
              FVWrap, `fvwrap'
              }
            - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `baseleve
> ls' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflegend
> ' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvwra
> p' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
            = c_local DUPS                         
            - if `K' == 2 {
            = if 2 == 2 {
            - c_local `c_opts' `"`options'"'
            = c_local  options `""'
            - }
            - sreturn local coding `coding'
            = sreturn local coding 
            - sreturn local versus `versus'
            = sreturn local versus 
            - sreturn local compare `compare'
            = sreturn local compare 
            - sreturn local level `level'
            = sreturn local level 95
            ------------------------------------- end _get_diopts.GetDiopts ---
          - c_local `name2' `"`options'"'
          = c_local options `""'
          - }
          - local DUPS : list DUPS - DEFAULT
          - gettoken DUPS : DUPS
          - if `"`DUPS'"' != "" {
          = if `""' != "" {
            if (strpos(`"`DUPS'"', "(")) {
            gettoken DUPS : DUPS, parse("(")
            local DUPS `"`DUPS'()"'
            }
            di as err "duplicate {bf:`DUPS'} option not allowed"
            exit 198
            }
          - sreturn clear
          - foreach sname of local snames {
          - sreturn local `sname' = `"`S_`sname''"'
          = sreturn local level = `"95"'
          - }
          - sreturn local `sname' = `"`S_`sname''"'
          = sreturn local quietly = `"0"'
          - }
          ------------------------------------------------- end _get_diopts ---
        - loc diopts `diopts' `header' `table' `footnote'
        = loc diopts    
        - _assert (`"`options'"'==""), msg(`"invalid options: `options'"')
        = _assert (`""'==""), msg(`"invalid options: "')
          --------------------------------------------------- begin _assert ---
          - version 8
          - syntax anything [ , msg(str) rc(str) ]
          - capture assert `anything'
          = capture assert (`""'=="")
          - local rcc = _rc
          - if `rcc' {
          = if 0 {
            if `"`msg'"' != "" {
            dis as err `"`msg'"'
            }
            else {
            dis as err `"assert failed: `anything'"'
            }
            if "`rc'" != "" {
            exit `rc'
            }
            else {
            exit `rcc'
            }
            }
          ----------------------------------------------------- end _assert ---
        - if ("`hascons'"!="") di in ye "(option ignored: `hascons')"
        = if (""!="") di in ye "(option ignored: )"
        - if ("`tsscons'"!="") di in ye "(option ignored: `tsscons')"
        = if (""!="") di in ye "(option ignored: )"
        - mata: HDFE.diopts = `"`diopts'"'
        = mata: HDFE.diopts = `""'
        ------------------------------------------------- end reghdfe.Parse ---
      - mata: st_local("timeit", strofreal(HDFE.timeit))
      - mata: st_local("compact", strofreal(HDFE.compact))
      - mata: st_local("verbose", strofreal(HDFE.verbose))
      - if (`timeit') timer on 21
      = if (0) timer on 21
      - mata: HDFE.estimate_dof()
      - if (`timeit') timer off 21
      = if (0) timer off 21
      - if (`timeit') timer on 29
      = if (0) timer on 29
      - tempvar touse
      - mata: HDFE.save_touse("`touse'")
      = mata: HDFE.save_touse("__000001")
      - if (`timeit') timer off 29
      = if (0) timer off 29
      - if (`timeit') timer on 22
      = if (0) timer on 22
      - mata: st_local("depvar", HDFE.depvar)
      - mata: st_local("indepvars", HDFE.indepvars)
      - if (`verbose' > 0) di as text _n "## Parsing and expanding indepvars: {
> res}`indepvars'"
      = if (0 > 0) di as text _n "## Parsing and expanding indepvars: {res}F20_
> to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mgr i.male#c.F19_to_male_mgr
>  F18_to_male_mgr i.male#c.F18_to_male_mgr F17_to_male_mgr i.male#c.F17_to_mal
> e_mgr F16_to_male_mgr i.male#c.F16_to_male_mgr F15_to_male_mgr i.male#c.F15_t
> o_male_mgr F14_to_male_mgr i.male#c.F14_to_male_mgr F13_to_male_mgr i.male#c.
> F13_to_male_mgr F12_to_male_mgr i.male#c.F12_to_male_mgr F11_to_male_mgr i.ma
> le#c.F11_to_male_mgr F10_to_male_mgr i.male#c.F10_to_male_mgr F9_to_male_mgr 
> i.male#c.F9_to_male_mgr F8_to_male_mgr i.male#c.F8_to_male_mgr F7_to_male_mgr
>  i.male#c.F7_to_male_mgr F6_to_male_mgr i.male#c.F6_to_male_mgr F5_to_male_mg
> r i.male#c.F5_to_male_mgr F4_to_male_mgr i.male#c.F4_to_male_mgr F3_to_male_m
> gr i.male#c.F3_to_male_mgr F2_to_male_mgr i.male#c.F2_to_male_mgr F1_to_male_
> mgr i.male#c.F1_to_male_mgr L0_to_male_mgr i.male#c.L0_to_male_mgr L1_to_male
> _mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_to_male_mgr L3_to_mal
> e_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4_to_male_mgr L5_to_ma
> le_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L6_to_male_mgr L7_to_m
> ale_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.L8_to_male_mgr L9_to_
> male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#c.L10_to_male_mgr L11
> _to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.male#c.L12_to_male_mg
> r L13_to_male_mgr i.male#c.L13_to_male_mgr L14_to_male_mgr i.male#c.L14_to_ma
> le_mgr L15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_male_mgr i.male#c.L16_
> to_male_mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18_to_male_mgr i.male#c
> .L18_to_male_mgr L19_to_male_mgr i.male#c.L19_to_male_mgr L20_to_male_mgr i.m
> ale#c.L20_to_male_mgr L21_to_male_mgr i.male#c.L21_to_male_mgr L22_to_male_mg
> r i.male#c.L22_to_male_mgr L23_to_male_mgr i.male#c.L23_to_male_mgr L24_to_ma
> le_mgr i.male#c.L24_to_male_mgr L25_to_male_mgr i.male#c.L25_to_male_mgr L26_
> to_male_mgr i.male#c.L26_to_male_mgr L27_to_male_mgr i.male#c.L27_to_male_mgr
>  L28_to_male_mgr i.male#c.L28_to_male_mgr L29_to_male_mgr i.male#c.L29_to_mal
> e_mgr L30_to_male_mgr i.male#c.L30_to_male_mgr i.male#i.F47_to_male_mgr i.mal
> e#i.F46_to_male_mgr i.male#i.F45_to_male_mgr i.male#i.F44_to_male_mgr i.male#
> i.F43_to_male_mgr i.male#i.F42_to_male_mgr i.male#i.F41_to_male_mgr i.male#i.
> F40_to_male_mgr i.male#i.F39_to_male_mgr i.male#i.F38_to_male_mgr i.male#i.F3
> 7_to_male_mgr i.male#i.F36_to_male_mgr i.male#i.F35_to_male_mgr i.male#i.F34_
> to_male_mgr i.male#i.F33_to_male_mgr i.male#i.F32_to_male_mgr i.male#i.F31_to
> _male_mgr i.male#i.F30_to_male_mgr i.male#i.F29_to_male_mgr i.male#i.F28_to_m
> ale_mgr i.male#i.F27_to_male_mgr i.male#i.F26_to_male_mgr i.male#i.F25_to_mal
> e_mgr i.male#i.F24_to_male_mgr i.male#i.F23_to_male_mgr i.male#i.F22_to_male_
> mgr i.male#i.F21_to_male_mgr i.male#i.L31_to_male_mgr i.male#i.L32_to_male_mg
> r i.male#i.L33_to_male_mgr i.male#i.L34_to_male_mgr i.male#i.L35_to_male_mgr 
> i.male#i.L36_to_male_mgr i.male#i.L37_to_male_mgr i.male#i.L38_to_male_mgr i.
> male#i.L39_to_male_mgr i.male#i.L40_to_male_mgr i.male#i.L41_to_male_mgr i.ma
> le#i.L42_to_male_mgr i.male#i.L43_to_male_mgr i.male#i.L44_to_male_mgr i.male
> #i.L45_to_male_mgr i.male#i.L46_to_male_mgr i.male#i.L47_to_male_mgr"
      - ms_expand_varlist `indepvars' if `touse'
      = ms_expand_varlist F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_
> mgr i.male#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F17_to_
> male_mgr i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male_mgr F1
> 5_to_male_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_to_male_m
> gr F13_to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.F12_to_m
> ale_mgr F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.male#c.F10
> _to_male_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.male#c.F
> 8_to_male_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr F6_to_male_mgr i.male#c.
> F6_to_male_mgr F5_to_male_mgr i.male#c.F5_to_male_mgr F4_to_male_mgr i.male#c
> .F4_to_male_mgr F3_to_male_mgr i.male#c.F3_to_male_mgr F2_to_male_mgr i.male#
> c.F2_to_male_mgr F1_to_male_mgr i.male#c.F1_to_male_mgr L0_to_male_mgr i.male
> #c.L0_to_male_mgr L1_to_male_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.mal
> e#c.L2_to_male_mgr L3_to_male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.ma
> le#c.L4_to_male_mgr L5_to_male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.m
> ale#c.L6_to_male_mgr L7_to_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.
> male#c.L8_to_male_mgr L9_to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr 
> i.male#c.L10_to_male_mgr L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male
> _mgr i.male#c.L12_to_male_mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L14_to
> _male_mgr i.male#c.L14_to_male_mgr L15_to_male_mgr i.male#c.L15_to_male_mgr L
> 16_to_male_mgr i.male#c.L16_to_male_mgr L17_to_male_mgr i.male#c.L17_to_male_
> mgr L18_to_male_mgr i.male#c.L18_to_male_mgr L19_to_male_mgr i.male#c.L19_to_
> male_mgr L20_to_male_mgr i.male#c.L20_to_male_mgr L21_to_male_mgr i.male#c.L2
> 1_to_male_mgr L22_to_male_mgr i.male#c.L22_to_male_mgr L23_to_male_mgr i.male
> #c.L23_to_male_mgr L24_to_male_mgr i.male#c.L24_to_male_mgr L25_to_male_mgr i
> .male#c.L25_to_male_mgr L26_to_male_mgr i.male#c.L26_to_male_mgr L27_to_male_
> mgr i.male#c.L27_to_male_mgr L28_to_male_mgr i.male#c.L28_to_male_mgr L29_to_
> male_mgr i.male#c.L29_to_male_mgr L30_to_male_mgr i.male#c.L30_to_male_mgr i.
> male#i.F47_to_male_mgr i.male#i.F46_to_male_mgr i.male#i.F45_to_male_mgr i.ma
> le#i.F44_to_male_mgr i.male#i.F43_to_male_mgr i.male#i.F42_to_male_mgr i.male
> #i.F41_to_male_mgr i.male#i.F40_to_male_mgr i.male#i.F39_to_male_mgr i.male#i
> .F38_to_male_mgr i.male#i.F37_to_male_mgr i.male#i.F36_to_male_mgr i.male#i.F
> 35_to_male_mgr i.male#i.F34_to_male_mgr i.male#i.F33_to_male_mgr i.male#i.F32
> _to_male_mgr i.male#i.F31_to_male_mgr i.male#i.F30_to_male_mgr i.male#i.F29_t
> o_male_mgr i.male#i.F28_to_male_mgr i.male#i.F27_to_male_mgr i.male#i.F26_to_
> male_mgr i.male#i.F25_to_male_mgr i.male#i.F24_to_male_mgr i.male#i.F23_to_ma
> le_mgr i.male#i.F22_to_male_mgr i.male#i.F21_to_male_mgr i.male#i.L31_to_male
> _mgr i.male#i.L32_to_male_mgr i.male#i.L33_to_male_mgr i.male#i.L34_to_male_m
> gr i.male#i.L35_to_male_mgr i.male#i.L36_to_male_mgr i.male#i.L37_to_male_mgr
>  i.male#i.L38_to_male_mgr i.male#i.L39_to_male_mgr i.male#i.L40_to_male_mgr i
> .male#i.L41_to_male_mgr i.male#i.L42_to_male_mgr i.male#i.L43_to_male_mgr i.m
> ale#i.L44_to_male_mgr i.male#i.L45_to_male_mgr i.male#i.L46_to_male_mgr i.mal
> e#i.L47_to_male_mgr if __000001
        ------------------------------------------- begin ms_expand_varlist ---
        - syntax [varlist(ts fv numeric default=none)] if
        - fvexpand `varlist' `if'
        = fvexpand F20_to_male_mgr i.male#c.F20_to_male_mgr F19_to_male_mgr i.m
> ale#c.F19_to_male_mgr F18_to_male_mgr i.male#c.F18_to_male_mgr F17_to_male_mg
> r i.male#c.F17_to_male_mgr F16_to_male_mgr i.male#c.F16_to_male_mgr F15_to_ma
> le_mgr i.male#c.F15_to_male_mgr F14_to_male_mgr i.male#c.F14_to_male_mgr F13_
> to_male_mgr i.male#c.F13_to_male_mgr F12_to_male_mgr i.male#c.F12_to_male_mgr
>  F11_to_male_mgr i.male#c.F11_to_male_mgr F10_to_male_mgr i.male#c.F10_to_mal
> e_mgr F9_to_male_mgr i.male#c.F9_to_male_mgr F8_to_male_mgr i.male#c.F8_to_ma
> le_mgr F7_to_male_mgr i.male#c.F7_to_male_mgr F6_to_male_mgr i.male#c.F6_to_m
> ale_mgr F5_to_male_mgr i.male#c.F5_to_male_mgr F4_to_male_mgr i.male#c.F4_to_
> male_mgr F3_to_male_mgr i.male#c.F3_to_male_mgr F2_to_male_mgr i.male#c.F2_to
> _male_mgr F1_to_male_mgr i.male#c.F1_to_male_mgr L0_to_male_mgr i.male#c.L0_t
> o_male_mgr L1_to_male_mgr i.male#c.L1_to_male_mgr L2_to_male_mgr i.male#c.L2_
> to_male_mgr L3_to_male_mgr i.male#c.L3_to_male_mgr L4_to_male_mgr i.male#c.L4
> _to_male_mgr L5_to_male_mgr i.male#c.L5_to_male_mgr L6_to_male_mgr i.male#c.L
> 6_to_male_mgr L7_to_male_mgr i.male#c.L7_to_male_mgr L8_to_male_mgr i.male#c.
> L8_to_male_mgr L9_to_male_mgr i.male#c.L9_to_male_mgr L10_to_male_mgr i.male#
> c.L10_to_male_mgr L11_to_male_mgr i.male#c.L11_to_male_mgr L12_to_male_mgr i.
> male#c.L12_to_male_mgr L13_to_male_mgr i.male#c.L13_to_male_mgr L14_to_male_m
> gr i.male#c.L14_to_male_mgr L15_to_male_mgr i.male#c.L15_to_male_mgr L16_to_m
> ale_mgr i.male#c.L16_to_male_mgr L17_to_male_mgr i.male#c.L17_to_male_mgr L18
> _to_male_mgr i.male#c.L18_to_male_mgr L19_to_male_mgr i.male#c.L19_to_male_mg
> r L20_to_male_mgr i.male#c.L20_to_male_mgr L21_to_male_mgr i.male#c.L21_to_ma
> le_mgr L22_to_male_mgr i.male#c.L22_to_male_mgr L23_to_male_mgr i.male#c.L23_
> to_male_mgr L24_to_male_mgr i.male#c.L24_to_male_mgr L25_to_male_mgr i.male#c
> .L25_to_male_mgr L26_to_male_mgr i.male#c.L26_to_male_mgr L27_to_male_mgr i.m
> ale#c.L27_to_male_mgr L28_to_male_mgr i.male#c.L28_to_male_mgr L29_to_male_mg
> r i.male#c.L29_to_male_mgr L30_to_male_mgr i.male#c.L30_to_male_mgr i.male#i.
> F47_to_male_mgr i.male#i.F46_to_male_mgr i.male#i.F45_to_male_mgr i.male#i.F4
> 4_to_male_mgr i.male#i.F43_to_male_mgr i.male#i.F42_to_male_mgr i.male#i.F41_
> to_male_mgr i.male#i.F40_to_male_mgr i.male#i.F39_to_male_mgr i.male#i.F38_to
> _male_mgr i.male#i.F37_to_male_mgr i.male#i.F36_to_male_mgr i.male#i.F35_to_m
> ale_mgr i.male#i.F34_to_male_mgr i.male#i.F33_to_male_mgr i.male#i.F32_to_mal
> e_mgr i.male#i.F31_to_male_mgr i.male#i.F30_to_male_mgr i.male#i.F29_to_male_
> mgr i.male#i.F28_to_male_mgr i.male#i.F27_to_male_mgr i.male#i.F26_to_male_mg
> r i.male#i.F25_to_male_mgr i.male#i.F24_to_male_mgr i.male#i.F23_to_male_mgr 
> i.male#i.F22_to_male_mgr i.male#i.F21_to_male_mgr i.male#i.L31_to_male_mgr i.
> male#i.L32_to_male_mgr i.male#i.L33_to_male_mgr i.male#i.L34_to_male_mgr i.ma
> le#i.L35_to_male_mgr i.male#i.L36_to_male_mgr i.male#i.L37_to_male_mgr i.male
> #i.L38_to_male_mgr i.male#i.L39_to_male_mgr i.male#i.L40_to_male_mgr i.male#i
> .L41_to_male_mgr i.male#i.L42_to_male_mgr i.male#i.L43_to_male_mgr i.male#i.L
> 44_to_male_mgr i.male#i.L45_to_male_mgr i.male#i.L46_to_male_mgr i.male#i.L47
> _to_male_mgr if __000001
        - loc varlist `r(varlist)'`'
        = loc varlist F20_to_male_mgr 1b.male#co.F20_to_male_mgr 2.male#c.F20_t
> o_male_mgr F19_to_male_mgr 1b.male#co.F19_to_male_mgr 2.male#c.F19_to_male_mg
> r F18_to_male_mgr 1b.male#co.F18_to_male_mgr 2.male#c.F18_to_male_mgr F17_to_
> male_mgr 1b.male#co.F17_to_male_mgr 2.male#c.F17_to_male_mgr F16_to_male_mgr 
> 1b.male#co.F16_to_male_mgr 2.male#c.F16_to_male_mgr F15_to_male_mgr 1b.male#c
> o.F15_to_male_mgr 2.male#c.F15_to_male_mgr F14_to_male_mgr 1b.male#co.F14_to_
> male_mgr 2.male#c.F14_to_male_mgr F13_to_male_mgr 1b.male#co.F13_to_male_mgr 
> 2.male#c.F13_to_male_mgr F12_to_male_mgr 1b.male#co.F12_to_male_mgr 2.male#c.
> F12_to_male_mgr F11_to_male_mgr 1b.male#co.F11_to_male_mgr 2.male#c.F11_to_ma
> le_mgr F10_to_male_mgr 1b.male#co.F10_to_male_mgr 2.male#c.F10_to_male_mgr F9
> _to_male_mgr 1b.male#co.F9_to_male_mgr 2.male#c.F9_to_male_mgr F8_to_male_mgr
>  1b.male#co.F8_to_male_mgr 2.male#c.F8_to_male_mgr F7_to_male_mgr 1b.male#co.
> F7_to_male_mgr 2.male#c.F7_to_male_mgr F6_to_male_mgr 1b.male#co.F6_to_male_m
> gr 2.male#c.F6_to_male_mgr F5_to_male_mgr 1b.male#co.F5_to_male_mgr 2.male#c.
> F5_to_male_mgr F4_to_male_mgr 1b.male#co.F4_to_male_mgr 2.male#c.F4_to_male_m
> gr F3_to_male_mgr 1b.male#co.F3_to_male_mgr 2.male#c.F3_to_male_mgr F2_to_mal
> e_mgr 1b.male#co.F2_to_male_mgr 2.male#c.F2_to_male_mgr F1_to_male_mgr 1b.mal
> e#co.F1_to_male_mgr 2.male#c.F1_to_male_mgr L0_to_male_mgr 1b.male#co.L0_to_m
> ale_mgr 2.male#c.L0_to_male_mgr L1_to_male_mgr 1b.male#co.L1_to_male_mgr 2.ma
> le#c.L1_to_male_mgr L2_to_male_mgr 1b.male#co.L2_to_male_mgr 2.male#c.L2_to_m
> ale_mgr L3_to_male_mgr 1b.male#co.L3_to_male_mgr 2.male#c.L3_to_male_mgr L4_t
> o_male_mgr 1b.male#co.L4_to_male_mgr 2.male#c.L4_to_male_mgr L5_to_male_mgr 1
> b.male#co.L5_to_male_mgr 2.male#c.L5_to_male_mgr L6_to_male_mgr 1b.male#co.L6
> _to_male_mgr 2.male#c.L6_to_male_mgr L7_to_male_mgr 1b.male#co.L7_to_male_mgr
>  2.male#c.L7_to_male_mgr L8_to_male_mgr 1b.male#co.L8_to_male_mgr 2.male#c.L8
> _to_male_mgr L9_to_male_mgr 1b.male#co.L9_to_male_mgr 2.male#c.L9_to_male_mgr
>  L10_to_male_mgr 1b.male#co.L10_to_male_mgr 2.male#c.L10_to_male_mgr L11_to_m
> ale_mgr 1b.male#co.L11_to_male_mgr 2.male#c.L11_to_male_mgr L12_to_male_mgr 1
> b.male#co.L12_to_male_mgr 2.male#c.L12_to_male_mgr L13_to_male_mgr 1b.male#co
> .L13_to_male_mgr 2.male#c.L13_to_male_mgr L14_to_male_mgr 1b.male#co.L14_to_m
> ale_mgr 2.male#c.L14_to_male_mgr L15_to_male_mgr 1b.male#co.L15_to_male_mgr 2
> .male#c.L15_to_male_mgr L16_to_male_mgr 1b.male#co.L16_to_male_mgr 2.male#c.L
> 16_to_male_mgr L17_to_male_mgr 1b.male#co.L17_to_male_mgr 2.male#c.L17_to_mal
> e_mgr L18_to_male_mgr 1b.male#co.L18_to_male_mgr 2.male#c.L18_to_male_mgr L19
> _to_male_mgr 1b.male#co.L19_to_male_mgr 2.male#c.L19_to_male_mgr L20_to_male_
> mgr 1b.male#co.L20_to_male_mgr 2.male#c.L20_to_male_mgr L21_to_male_mgr 1b.ma
> le#co.L21_to_male_mgr 2.male#c.L21_to_male_mgr L22_to_male_mgr 1b.male#co.L22
> _to_male_mgr 2.male#c.L22_to_male_mgr L23_to_male_mgr 1b.male#co.L23_to_male_
> mgr 2.male#c.L23_to_male_mgr L24_to_male_mgr 1b.male#co.L24_to_male_mgr 2.mal
> e#c.L24_to_male_mgr L25_to_male_mgr 1b.male#co.L25_to_male_mgr 2.male#c.L25_t
> o_male_mgr L26_to_male_mgr 1b.male#co.L26_to_male_mgr 2.male#c.L26_to_male_mg
> r L27_to_male_mgr 1b.male#co.L27_to_male_mgr 2.male#c.L27_to_male_mgr L28_to_
> male_mgr 1b.male#co.L28_to_male_mgr 2.male#c.L28_to_male_mgr L29_to_male_mgr 
> 1b.male#co.L29_to_male_mgr 2.male#c.L29_to_male_mgr L30_to_male_mgr 1b.male#c
> o.L30_to_male_mgr 2.male#c.L30_to_male_mgr 1b.male#0.F47_to_male_mgr 2.male#0
> .F47_to_male_mgr 1b.male#0.F46_to_male_mgr 2.male#0.F46_to_male_mgr 1b.male#0
> b.F45_to_male_mgr 1b.male#1.F45_to_male_mgr 2.male#0b.F45_to_male_mgr 2o.male
> #1o.F45_to_male_mgr 1b.male#0b.F44_to_male_mgr 1b.male#1.F44_to_male_mgr 2.ma
> le#0b.F44_to_male_mgr 2o.male#1o.F44_to_male_mgr 1b.male#0b.F43_to_male_mgr 1
> b.male#1.F43_to_male_mgr 2.male#0b.F43_to_male_mgr 2o.male#1o.F43_to_male_mgr
>  1b.male#0b.F42_to_male_mgr 1b.male#1.F42_to_male_mgr 2.male#0b.F42_to_male_m
> gr 2o.male#1o.F42_to_male_mgr 1b.male#0b.F41_to_male_mgr 1b.male#1.F41_to_mal
> e_mgr 2.male#0b.F41_to_male_mgr 2o.male#1o.F41_to_male_mgr 1b.male#0b.F40_to_
> male_mgr 1b.male#1.F40_to_male_mgr 2.male#0b.F40_to_male_mgr 2o.male#1o.F40_t
> o_male_mgr 1b.male#0b.F39_to_male_mgr 1b.male#1.F39_to_male_mgr 2.male#0b.F39
> _to_male_mgr 2o.male#1o.F39_to_male_mgr 1b.male#0b.F38_to_male_mgr 1b.male#1.
> F38_to_male_mgr 2.male#0b.F38_to_male_mgr 2o.male#1o.F38_to_male_mgr 1b.male#
> 0b.F37_to_male_mgr 1b.male#1.F37_to_male_mgr 2.male#0b.F37_to_male_mgr 2o.mal
> e#1o.F37_to_male_mgr 1b.male#0b.F36_to_male_mgr 1b.male#1.F36_to_male_mgr 2.m
> ale#0b.F36_to_male_mgr 2.male#1.F36_to_male_mgr 1b.male#0b.F35_to_male_mgr 1b
> .male#1.F35_to_male_mgr 2.male#0b.F35_to_male_mgr 2.male#1.F35_to_male_mgr 1b
> .male#0b.F34_to_male_mgr 1b.male#1.F34_to_male_mgr 2.male#0b.F34_to_male_mgr 
> 2.male#1.F34_to_male_mgr 1b.male#0b.F33_to_male_mgr 1b.male#1.F33_to_male_mgr
>  2.male#0b.F33_to_male_mgr 2.male#1.F33_to_male_mgr 1b.male#0b.F32_to_male_mg
> r 1b.male#1.F32_to_male_mgr 2.male#0b.F32_to_male_mgr 2.male#1.F32_to_male_mg
> r 1b.male#0b.F31_to_male_mgr 1b.male#1.F31_to_male_mgr 2.male#0b.F31_to_male_
> mgr 2.male#1.F31_to_male_mgr 1b.male#0b.F30_to_male_mgr 1b.male#1.F30_to_male
> _mgr 2.male#0b.F30_to_male_mgr 2.male#1.F30_to_male_mgr 1b.male#0b.F29_to_mal
> e_mgr 1b.male#1.F29_to_male_mgr 2.male#0b.F29_to_male_mgr 2.male#1.F29_to_mal
> e_mgr 1b.male#0b.F28_to_male_mgr 1b.male#1.F28_to_male_mgr 2.male#0b.F28_to_m
> ale_mgr 2.male#1.F28_to_male_mgr 1b.male#0b.F27_to_male_mgr 1b.male#1.F27_to_
> male_mgr 2.male#0b.F27_to_male_mgr 2.male#1.F27_to_male_mgr 1b.male#0b.F26_to
> _male_mgr 1b.male#1.F26_to_male_mgr 2.male#0b.F26_to_male_mgr 2.male#1.F26_to
> _male_mgr 1b.male#0b.F25_to_male_mgr 1b.male#1.F25_to_male_mgr 2.male#0b.F25_
> to_male_mgr 2.male#1.F25_to_male_mgr 1b.male#0b.F24_to_male_mgr 1b.male#1.F24
> _to_male_mgr 2.male#0b.F24_to_male_mgr 2.male#1.F24_to_male_mgr 1b.male#0b.F2
> 3_to_male_mgr 1b.male#1.F23_to_male_mgr 2.male#0b.F23_to_male_mgr 2.male#1.F2
> 3_to_male_mgr 1b.male#0b.F22_to_male_mgr 1b.male#1.F22_to_male_mgr 2.male#0b.
> F22_to_male_mgr 2.male#1.F22_to_male_mgr 1b.male#0b.F21_to_male_mgr 1b.male#1
> .F21_to_male_mgr 2.male#0b.F21_to_male_mgr 2.male#1.F21_to_male_mgr 1b.male#0
> b.L31_to_male_mgr 1b.male#1.L31_to_male_mgr 2.male#0b.L31_to_male_mgr 2.male#
> 1.L31_to_male_mgr 1b.male#0b.L32_to_male_mgr 1b.male#1.L32_to_male_mgr 2.male
> #0b.L32_to_male_mgr 2.male#1.L32_to_male_mgr 1b.male#0b.L33_to_male_mgr 1b.ma
> le#1.L33_to_male_mgr 2.male#0b.L33_to_male_mgr 2.male#1.L33_to_male_mgr 1b.ma
> le#0b.L34_to_male_mgr 1b.male#1.L34_to_male_mgr 2.male#0b.L34_to_male_mgr 2.m
> ale#1.L34_to_male_mgr 1b.male#0b.L35_to_male_mgr 1b.male#1.L35_to_male_mgr 2.
> male#0b.L35_to_male_mgr 2.male#1.L35_to_male_mgr 1b.male#0b.L36_to_male_mgr 1
> b.male#1.L36_to_male_mgr 2.male#0b.L36_to_male_mgr 2.male#1.L36_to_male_mgr 1
> b.male#0b.L37_to_male_mgr 1b.male#1.L37_to_male_mgr 2.male#0b.L37_to_male_mgr
>  2.male#1.L37_to_male_mgr 1b.male#0b.L38_to_male_mgr 1b.male#1.L38_to_male_mg
> r 2.male#0b.L38_to_male_mgr 2.male#1.L38_to_male_mgr 1b.male#0b.L39_to_male_m
> gr 1b.male#1.L39_to_male_mgr 2.male#0b.L39_to_male_mgr 2.male#1.L39_to_male_m
> gr 1b.male#0b.L40_to_male_mgr 1b.male#1.L40_to_male_mgr 2.male#0b.L40_to_male
> _mgr 2.male#1.L40_to_male_mgr 1b.male#0b.L41_to_male_mgr 1b.male#1.L41_to_mal
> e_mgr 2.male#0b.L41_to_male_mgr 2.male#1.L41_to_male_mgr 1b.male#0b.L42_to_ma
> le_mgr 1b.male#1.L42_to_male_mgr 2.male#0b.L42_to_male_mgr 2.male#1.L42_to_ma
> le_mgr 1b.male#0b.L43_to_male_mgr 1b.male#1.L43_to_male_mgr 2.male#0b.L43_to_
> male_mgr 2.male#1.L43_to_male_mgr 1b.male#0b.L44_to_male_mgr 1b.male#1.L44_to
> _male_mgr 2.male#0b.L44_to_male_mgr 2o.male#1o.L44_to_male_mgr 1b.male#0.L45_
> to_male_mgr 2.male#0.L45_to_male_mgr 1b.male#0.L46_to_male_mgr 2.male#0.L46_t
> o_male_mgr 1b.male#0.L47_to_male_mgr 2.male#0.L47_to_male_mgr
        - foreach part of local varlist {
        - _ms_parse_parts `part'
        = _ms_parse_parts F20_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask  1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN F20_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part F20_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("F20_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("F20_to_male_mgr", "#")
          - loc old `part'
          = loc old F20_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part F20_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars  F20_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.F20_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.F20_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.F20_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.F20_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.F20_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.F20_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.F20_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.F20_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.F20_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.F20_to_male_mgr" != "2bn.male#c.F20_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.F20_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.F20_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts F19_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN F19_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part F19_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("F19_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("F19_to_male_mgr", "#")
          - loc old `part'
          = loc old F19_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part F19_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.F19_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.F19_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.F19_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.F19_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.F19_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.F19_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.F19_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.F19_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.F19_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.F19_to_male_mgr" != "2bn.male#c.F19_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.F19_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.F19_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts F18_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN F18_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part F18_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("F18_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("F18_to_male_mgr", "#")
          - loc old `part'
          = loc old F18_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part F18_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.F18_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.F18_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.F18_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.F18_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.F18_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.F18_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.F18_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.F18_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.F18_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.F18_to_male_mgr" != "2bn.male#c.F18_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.F18_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.F18_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts F17_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN F17_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part F17_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("F17_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("F17_to_male_mgr", "#")
          - loc old `part'
          = loc old F17_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part F17_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.F17_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.F17_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.F17_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.F17_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.F17_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.F17_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.F17_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.F17_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.F17_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.F17_to_male_mgr" != "2bn.male#c.F17_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.F17_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.F17_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts F16_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN F16_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part F16_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("F16_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("F16_to_male_mgr", "#")
          - loc old `part'
          = loc old F16_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part F16_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.F16_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.F16_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.F16_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.F16_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.F16_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.F16_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.F16_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.F16_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.F16_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.F16_to_male_mgr" != "2bn.male#c.F16_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.F16_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.F16_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts F15_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN F15_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part F15_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("F15_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("F15_to_male_mgr", "#")
          - loc old `part'
          = loc old F15_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part F15_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.F15_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.F15_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.F15_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.F15_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.F15_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.F15_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.F15_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.F15_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.F15_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.F15_to_male_mgr" != "2bn.male#c.F15_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.F15_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.F15_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts F14_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN F14_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part F14_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("F14_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("F14_to_male_mgr", "#")
          - loc old `part'
          = loc old F14_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part F14_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.F14_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.F14_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.F14_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.F14_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.F14_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.F14_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.F14_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.F14_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.F14_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.F14_to_male_mgr" != "2bn.male#c.F14_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.F14_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.F14_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts F13_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN F13_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part F13_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("F13_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("F13_to_male_mgr", "#")
          - loc old `part'
          = loc old F13_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part F13_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.F13_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.F13_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.F13_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.F13_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.F13_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.F13_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.F13_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.F13_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.F13_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.F13_to_male_mgr" != "2bn.male#c.F13_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.F13_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.F13_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts F12_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN F12_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part F12_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("F12_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("F12_to_male_mgr", "#")
          - loc old `part'
          = loc old F12_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part F12_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.F12_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.F12_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.F12_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.F12_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.F12_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.F12_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.F12_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.F12_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.F12_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.F12_to_male_mgr" != "2bn.male#c.F12_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.F12_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.F12_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts F11_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN F11_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part F11_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("F11_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("F11_to_male_mgr", "#")
          - loc old `part'
          = loc old F11_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part F11_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.F11_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.F11_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.F11_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.F11_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.F11_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.F11_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.F11_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.F11_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.F11_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.F11_to_male_mgr" != "2bn.male#c.F11_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.F11_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.F11_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts F10_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN F10_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part F10_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("F10_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("F10_to_male_mgr", "#")
          - loc old `part'
          = loc old F10_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part F10_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.F10_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.F10_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.F10_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.F10_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.F10_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.F10_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.F10_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.F10_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.F10_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.F10_to_male_mgr" != "2bn.male#c.F10_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.F10_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.F10_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts F9_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN F9_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part F9_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("F9_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("F9_to_male_mgr", "#")
          - loc old `part'
          = loc old F9_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part F9_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.F9_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.F9_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.F9_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.F9_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.F9_to_male_mgr", `"^([0-9]+)b?([.LFSD]
> )"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.F9_to_male_mgr", "^([0-9]+)b?([.LFSD])"
> , regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.F9_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.F9_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.F9_to_male_mgr", `"#([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.F9_to_male_mgr" != "2bn.male#c.F9_to_male_mg
> r"
          - loc old `part'
          = loc old 2bn.male#c.F9_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.F9_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts F8_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN F8_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part F8_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("F8_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("F8_to_male_mgr", "#")
          - loc old `part'
          = loc old F8_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part F8_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.F8_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.F8_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.F8_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.F8_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.F8_to_male_mgr", `"^([0-9]+)b?([.LFSD]
> )"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.F8_to_male_mgr", "^([0-9]+)b?([.LFSD])"
> , regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.F8_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.F8_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.F8_to_male_mgr", `"#([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.F8_to_male_mgr" != "2bn.male#c.F8_to_male_mg
> r"
          - loc old `part'
          = loc old 2bn.male#c.F8_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.F8_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts F7_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN F7_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part F7_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("F7_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("F7_to_male_mgr", "#")
          - loc old `part'
          = loc old F7_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part F7_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.F7_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.F7_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.F7_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.F7_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.F7_to_male_mgr", `"^([0-9]+)b?([.LFSD]
> )"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.F7_to_male_mgr", "^([0-9]+)b?([.LFSD])"
> , regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.F7_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.F7_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.F7_to_male_mgr", `"#([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.F7_to_male_mgr" != "2bn.male#c.F7_to_male_mg
> r"
          - loc old `part'
          = loc old 2bn.male#c.F7_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.F7_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts F6_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN F6_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part F6_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("F6_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("F6_to_male_mgr", "#")
          - loc old `part'
          = loc old F6_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part F6_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.F6_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.F6_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.F6_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.F6_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.F6_to_male_mgr", `"^([0-9]+)b?([.LFSD]
> )"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.F6_to_male_mgr", "^([0-9]+)b?([.LFSD])"
> , regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.F6_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.F6_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.F6_to_male_mgr", `"#([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.F6_to_male_mgr" != "2bn.male#c.F6_to_male_mg
> r"
          - loc old `part'
          = loc old 2bn.male#c.F6_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.F6_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts F5_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN F5_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part F5_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("F5_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("F5_to_male_mgr", "#")
          - loc old `part'
          = loc old F5_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part F5_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.F5_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.F5_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.F5_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.F5_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.F5_to_male_mgr", `"^([0-9]+)b?([.LFSD]
> )"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.F5_to_male_mgr", "^([0-9]+)b?([.LFSD])"
> , regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.F5_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.F5_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.F5_to_male_mgr", `"#([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.F5_to_male_mgr" != "2bn.male#c.F5_to_male_mg
> r"
          - loc old `part'
          = loc old 2bn.male#c.F5_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.F5_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts F4_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN F4_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part F4_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("F4_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("F4_to_male_mgr", "#")
          - loc old `part'
          = loc old F4_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part F4_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.F4_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.F4_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.F4_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.F4_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.F4_to_male_mgr", `"^([0-9]+)b?([.LFSD]
> )"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.F4_to_male_mgr", "^([0-9]+)b?([.LFSD])"
> , regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.F4_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.F4_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.F4_to_male_mgr", `"#([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.F4_to_male_mgr" != "2bn.male#c.F4_to_male_mg
> r"
          - loc old `part'
          = loc old 2bn.male#c.F4_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.F4_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts F3_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN F3_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part F3_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("F3_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("F3_to_male_mgr", "#")
          - loc old `part'
          = loc old F3_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part F3_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.F3_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.F3_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.F3_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.F3_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.F3_to_male_mgr", `"^([0-9]+)b?([.LFSD]
> )"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.F3_to_male_mgr", "^([0-9]+)b?([.LFSD])"
> , regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.F3_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.F3_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.F3_to_male_mgr", `"#([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.F3_to_male_mgr" != "2bn.male#c.F3_to_male_mg
> r"
          - loc old `part'
          = loc old 2bn.male#c.F3_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.F3_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts F2_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN F2_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part F2_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("F2_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("F2_to_male_mgr", "#")
          - loc old `part'
          = loc old F2_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part F2_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.F2_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.F2_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.F2_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.F2_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.F2_to_male_mgr", `"^([0-9]+)b?([.LFSD]
> )"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.F2_to_male_mgr", "^([0-9]+)b?([.LFSD])"
> , regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.F2_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.F2_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.F2_to_male_mgr", `"#([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.F2_to_male_mgr" != "2bn.male#c.F2_to_male_mg
> r"
          - loc old `part'
          = loc old 2bn.male#c.F2_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.F2_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts F1_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN F1_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part F1_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("F1_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("F1_to_male_mgr", "#")
          - loc old `part'
          = loc old F1_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part F1_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.F1_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.F1_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.F1_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.F1_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.F1_to_male_mgr", `"^([0-9]+)b?([.LFSD]
> )"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.F1_to_male_mgr", "^([0-9]+)b?([.LFSD])"
> , regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.F1_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.F1_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.F1_to_male_mgr", `"#([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.F1_to_male_mgr" != "2bn.male#c.F1_to_male_mg
> r"
          - loc old `part'
          = loc old 2bn.male#c.F1_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.F1_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L0_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L0_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L0_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L0_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L0_to_male_mgr", "#")
          - loc old `part'
          = loc old L0_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L0_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L0_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L0_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L0_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L0_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L0_to_male_mgr", `"^([0-9]+)b?([.LFSD]
> )"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L0_to_male_mgr", "^([0-9]+)b?([.LFSD])"
> , regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L0_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L0_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L0_to_male_mgr", `"#([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L0_to_male_mgr" != "2bn.male#c.L0_to_male_mg
> r"
          - loc old `part'
          = loc old 2bn.male#c.L0_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L0_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L1_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L1_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L1_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L1_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L1_to_male_mgr", "#")
          - loc old `part'
          = loc old L1_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L1_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L1_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L1_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L1_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L1_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L1_to_male_mgr", `"^([0-9]+)b?([.LFSD]
> )"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L1_to_male_mgr", "^([0-9]+)b?([.LFSD])"
> , regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L1_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L1_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L1_to_male_mgr", `"#([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L1_to_male_mgr" != "2bn.male#c.L1_to_male_mg
> r"
          - loc old `part'
          = loc old 2bn.male#c.L1_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L1_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L2_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L2_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L2_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L2_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L2_to_male_mgr", "#")
          - loc old `part'
          = loc old L2_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L2_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L2_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L2_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L2_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L2_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L2_to_male_mgr", `"^([0-9]+)b?([.LFSD]
> )"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L2_to_male_mgr", "^([0-9]+)b?([.LFSD])"
> , regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L2_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L2_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L2_to_male_mgr", `"#([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L2_to_male_mgr" != "2bn.male#c.L2_to_male_mg
> r"
          - loc old `part'
          = loc old 2bn.male#c.L2_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L2_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L3_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L3_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L3_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L3_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L3_to_male_mgr", "#")
          - loc old `part'
          = loc old L3_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L3_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L3_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L3_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L3_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L3_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L3_to_male_mgr", `"^([0-9]+)b?([.LFSD]
> )"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L3_to_male_mgr", "^([0-9]+)b?([.LFSD])"
> , regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L3_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L3_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L3_to_male_mgr", `"#([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L3_to_male_mgr" != "2bn.male#c.L3_to_male_mg
> r"
          - loc old `part'
          = loc old 2bn.male#c.L3_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L3_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L4_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L4_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L4_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L4_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L4_to_male_mgr", "#")
          - loc old `part'
          = loc old L4_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L4_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L4_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L4_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L4_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L4_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L4_to_male_mgr", `"^([0-9]+)b?([.LFSD]
> )"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L4_to_male_mgr", "^([0-9]+)b?([.LFSD])"
> , regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L4_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L4_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L4_to_male_mgr", `"#([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L4_to_male_mgr" != "2bn.male#c.L4_to_male_mg
> r"
          - loc old `part'
          = loc old 2bn.male#c.L4_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L4_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L5_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L5_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L5_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L5_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L5_to_male_mgr", "#")
          - loc old `part'
          = loc old L5_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L5_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L5_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L5_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L5_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L5_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L5_to_male_mgr", `"^([0-9]+)b?([.LFSD]
> )"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L5_to_male_mgr", "^([0-9]+)b?([.LFSD])"
> , regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L5_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L5_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L5_to_male_mgr", `"#([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L5_to_male_mgr" != "2bn.male#c.L5_to_male_mg
> r"
          - loc old `part'
          = loc old 2bn.male#c.L5_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L5_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L6_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L6_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L6_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L6_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L6_to_male_mgr", "#")
          - loc old `part'
          = loc old L6_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L6_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L6_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L6_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L6_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L6_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L6_to_male_mgr", `"^([0-9]+)b?([.LFSD]
> )"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L6_to_male_mgr", "^([0-9]+)b?([.LFSD])"
> , regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L6_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L6_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L6_to_male_mgr", `"#([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L6_to_male_mgr" != "2bn.male#c.L6_to_male_mg
> r"
          - loc old `part'
          = loc old 2bn.male#c.L6_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L6_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L7_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L7_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L7_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L7_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L7_to_male_mgr", "#")
          - loc old `part'
          = loc old L7_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L7_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L7_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L7_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L7_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L7_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L7_to_male_mgr", `"^([0-9]+)b?([.LFSD]
> )"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L7_to_male_mgr", "^([0-9]+)b?([.LFSD])"
> , regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L7_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L7_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L7_to_male_mgr", `"#([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L7_to_male_mgr" != "2bn.male#c.L7_to_male_mg
> r"
          - loc old `part'
          = loc old 2bn.male#c.L7_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L7_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L8_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L8_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L8_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L8_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L8_to_male_mgr", "#")
          - loc old `part'
          = loc old L8_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L8_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L8_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L8_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L8_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L8_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L8_to_male_mgr", `"^([0-9]+)b?([.LFSD]
> )"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L8_to_male_mgr", "^([0-9]+)b?([.LFSD])"
> , regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L8_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L8_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L8_to_male_mgr", `"#([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L8_to_male_mgr" != "2bn.male#c.L8_to_male_mg
> r"
          - loc old `part'
          = loc old 2bn.male#c.L8_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L8_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L9_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L9_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L9_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L9_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L9_to_male_mgr", "#")
          - loc old `part'
          = loc old L9_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L9_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L9_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L9_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L9_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L9_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L9_to_male_mgr", `"^([0-9]+)b?([.LFSD]
> )"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L9_to_male_mgr", "^([0-9]+)b?([.LFSD])"
> , regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L9_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L9_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L9_to_male_mgr", `"#([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L9_to_male_mgr" != "2bn.male#c.L9_to_male_mg
> r"
          - loc old `part'
          = loc old 2bn.male#c.L9_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L9_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L10_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L10_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L10_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L10_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L10_to_male_mgr", "#")
          - loc old `part'
          = loc old L10_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L10_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L10_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L10_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L10_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L10_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L10_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L10_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L10_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L10_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L10_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L10_to_male_mgr" != "2bn.male#c.L10_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.L10_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L10_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L11_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L11_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L11_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L11_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L11_to_male_mgr", "#")
          - loc old `part'
          = loc old L11_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L11_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L11_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L11_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L11_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L11_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L11_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L11_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L11_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L11_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L11_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L11_to_male_mgr" != "2bn.male#c.L11_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.L11_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L11_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L12_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L12_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L12_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L12_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L12_to_male_mgr", "#")
          - loc old `part'
          = loc old L12_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L12_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L12_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L12_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L12_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L12_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L12_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L12_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L12_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L12_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L12_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L12_to_male_mgr" != "2bn.male#c.L12_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.L12_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L12_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L13_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L13_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L13_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L13_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L13_to_male_mgr", "#")
          - loc old `part'
          = loc old L13_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L13_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L13_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L13_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L13_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L13_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L13_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L13_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L13_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L13_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L13_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L13_to_male_mgr" != "2bn.male#c.L13_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.L13_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L13_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L14_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L14_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L14_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L14_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L14_to_male_mgr", "#")
          - loc old `part'
          = loc old L14_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L14_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L14_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L14_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L14_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L14_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L14_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L14_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L14_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L14_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L14_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L14_to_male_mgr" != "2bn.male#c.L14_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.L14_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L14_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L15_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L15_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L15_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L15_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L15_to_male_mgr", "#")
          - loc old `part'
          = loc old L15_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L15_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L15_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L15_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L15_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L15_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L15_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L15_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L15_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L15_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L15_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L15_to_male_mgr" != "2bn.male#c.L15_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.L15_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L15_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L16_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L16_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L16_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L16_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L16_to_male_mgr", "#")
          - loc old `part'
          = loc old L16_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L16_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L16_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L16_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L16_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L16_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L16_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L16_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L16_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L16_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L16_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L16_to_male_mgr" != "2bn.male#c.L16_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.L16_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L16_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L17_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L17_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L17_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L17_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L17_to_male_mgr", "#")
          - loc old `part'
          = loc old L17_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L17_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L17_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L17_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L17_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L17_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L17_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L17_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L17_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L17_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L17_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L17_to_male_mgr" != "2bn.male#c.L17_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.L17_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L17_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L18_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L18_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L18_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L18_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L18_to_male_mgr", "#")
          - loc old `part'
          = loc old L18_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L18_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L18_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L18_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L18_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L18_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L18_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L18_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L18_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L18_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L18_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L18_to_male_mgr" != "2bn.male#c.L18_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.L18_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L18_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L19_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L19_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L19_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L19_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L19_to_male_mgr", "#")
          - loc old `part'
          = loc old L19_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L19_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L19_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L19_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L19_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L19_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L19_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L19_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L19_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L19_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L19_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L19_to_male_mgr" != "2bn.male#c.L19_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.L19_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L19_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L20_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L20_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L20_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L20_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L20_to_male_mgr", "#")
          - loc old `part'
          = loc old L20_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L20_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L20_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L20_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L20_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L20_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L20_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L20_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L20_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L20_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L20_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L20_to_male_mgr" != "2bn.male#c.L20_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.L20_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L20_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L21_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L21_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L21_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L21_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L21_to_male_mgr", "#")
          - loc old `part'
          = loc old L21_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L21_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L21_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L21_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L21_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L21_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L21_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L21_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L21_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L21_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L21_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L21_to_male_mgr" != "2bn.male#c.L21_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.L21_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L21_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L22_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L22_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L22_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L22_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L22_to_male_mgr", "#")
          - loc old `part'
          = loc old L22_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L22_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L22_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L22_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L22_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L22_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L22_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L22_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L22_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L22_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L22_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L22_to_male_mgr" != "2bn.male#c.L22_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.L22_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L22_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L23_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L23_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L23_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L23_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L23_to_male_mgr", "#")
          - loc old `part'
          = loc old L23_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L23_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L23_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L23_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L23_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L23_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L23_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L23_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L23_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L23_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L23_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L23_to_male_mgr" != "2bn.male#c.L23_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.L23_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L23_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L24_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L24_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L24_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L24_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L24_to_male_mgr", "#")
          - loc old `part'
          = loc old L24_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L24_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L24_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L24_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L24_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L24_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L24_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L24_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L24_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L24_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L24_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L24_to_male_mgr" != "2bn.male#c.L24_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.L24_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L24_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L25_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L25_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L25_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L25_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L25_to_male_mgr", "#")
          - loc old `part'
          = loc old L25_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L25_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L25_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L25_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L25_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L25_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L25_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L25_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L25_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L25_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L25_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L25_to_male_mgr" != "2bn.male#c.L25_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.L25_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L25_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L26_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L26_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L26_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L26_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L26_to_male_mgr", "#")
          - loc old `part'
          = loc old L26_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L26_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L26_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L26_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L26_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L26_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L26_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L26_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L26_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L26_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L26_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L26_to_male_mgr" != "2bn.male#c.L26_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.L26_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L26_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L27_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L27_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L27_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L27_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L27_to_male_mgr", "#")
          - loc old `part'
          = loc old L27_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L27_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L27_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L27_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L27_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L27_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L27_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L27_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L27_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L27_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L27_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L27_to_male_mgr" != "2bn.male#c.L27_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.L27_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L27_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L28_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L28_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L28_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L28_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L28_to_male_mgr", "#")
          - loc old `part'
          = loc old L28_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L28_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L28_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L28_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L28_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L28_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L28_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L28_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L28_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L28_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L28_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L28_to_male_mgr" != "2bn.male#c.L28_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.L28_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L28_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L29_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L29_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L29_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L29_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L29_to_male_mgr", "#")
          - loc old `part'
          = loc old L29_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L29_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L29_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L29_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L29_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L29_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L29_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L29_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L29_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L29_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L29_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L29_to_male_mgr" != "2bn.male#c.L29_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.L29_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L29_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts L30_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN L30_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part L30_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("L30_to_male_mgr", `"^([0-9]+)b?([.LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
            }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("L30_to_male_mgr", "#")
          - loc old `part'
          = loc old L30_to_male_mgr
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part L30_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#co.L30_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#c.L30_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#c.L30_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#c.L30_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#c.L30_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#c.L30_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#c.L30_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#c.L30_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#c.L30_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#c.L30_to_male_mgr" != "2bn.male#c.L30_to_male_
> mgr"
          - loc old `part'
          = loc old 2bn.male#c.L30_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#c.L30_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0.F47_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#0.F47_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#0.F47_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#0.F47_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#0.F47_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#0.F47_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#0.F47_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#0.F47_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#0.F47_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#0.F47_to_male_mgr" != "1bn.male#0bn.F47_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#0bn.F47_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#0bn.F47_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#0bn.F47_to_male_mgr" != "1bn.male#0bn.F47_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#0bn.F47_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#0bn.F47_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0.F47_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0.F47_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0.F47_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0.F47_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0.F47_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0.F47_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0.F47_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0.F47_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0.F47_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0.F47_to_male_mgr" != "2bn.male#0bn.F47_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F47_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F47_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F47_to_male_mgr" != "2bn.male#0bn.F47_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F47_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F47_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0.F46_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#0.F46_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#0.F46_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#0.F46_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#0.F46_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#0.F46_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#0.F46_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#0.F46_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#0.F46_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#0.F46_to_male_mgr" != "1bn.male#0bn.F46_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#0bn.F46_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#0bn.F46_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#0bn.F46_to_male_mgr" != "1bn.male#0bn.F46_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#0bn.F46_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#0bn.F46_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0.F46_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0.F46_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0.F46_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0.F46_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0.F46_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0.F46_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0.F46_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0.F46_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0.F46_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0.F46_to_male_mgr" != "2bn.male#0bn.F46_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F46_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F46_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F46_to_male_mgr" != "2bn.male#0bn.F46_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F46_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F46_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F45_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F45_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F45_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F45_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F45_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F45_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F45_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F45_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F45_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F45_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F45_to_male_mgr" != "1bn.male#1bn.F45_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F45_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F45_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F45_to_male_mgr" != "1bn.male#1bn.F45_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F45_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F45_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F45_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F45_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F45_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F45_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F45_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F45_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F45_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F45_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F45_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F45_to_male_mgr" != "2bn.male#0bn.F45_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F45_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F45_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F45_to_male_mgr" != "2bn.male#0bn.F45_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F45_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F45_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2o.male#1o.F45_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F44_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F44_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F44_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F44_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F44_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F44_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F44_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F44_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F44_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F44_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F44_to_male_mgr" != "1bn.male#1bn.F44_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F44_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F44_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F44_to_male_mgr" != "1bn.male#1bn.F44_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F44_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F44_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F44_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F44_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F44_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F44_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F44_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F44_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F44_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F44_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F44_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F44_to_male_mgr" != "2bn.male#0bn.F44_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F44_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F44_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F44_to_male_mgr" != "2bn.male#0bn.F44_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F44_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F44_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2o.male#1o.F44_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F43_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F43_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F43_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F43_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F43_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F43_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F43_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F43_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F43_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F43_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F43_to_male_mgr" != "1bn.male#1bn.F43_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F43_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F43_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F43_to_male_mgr" != "1bn.male#1bn.F43_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F43_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F43_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F43_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F43_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F43_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F43_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F43_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F43_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F43_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F43_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F43_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F43_to_male_mgr" != "2bn.male#0bn.F43_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F43_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F43_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F43_to_male_mgr" != "2bn.male#0bn.F43_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F43_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F43_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2o.male#1o.F43_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F42_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F42_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F42_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F42_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F42_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F42_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F42_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F42_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F42_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F42_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F42_to_male_mgr" != "1bn.male#1bn.F42_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F42_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F42_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F42_to_male_mgr" != "1bn.male#1bn.F42_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F42_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F42_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F42_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F42_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F42_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F42_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F42_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F42_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F42_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F42_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F42_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F42_to_male_mgr" != "2bn.male#0bn.F42_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F42_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F42_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F42_to_male_mgr" != "2bn.male#0bn.F42_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F42_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F42_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2o.male#1o.F42_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F41_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F41_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F41_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F41_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F41_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F41_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F41_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F41_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F41_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F41_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F41_to_male_mgr" != "1bn.male#1bn.F41_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F41_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F41_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F41_to_male_mgr" != "1bn.male#1bn.F41_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F41_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F41_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F41_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F41_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F41_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F41_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F41_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F41_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F41_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F41_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F41_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F41_to_male_mgr" != "2bn.male#0bn.F41_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F41_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F41_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F41_to_male_mgr" != "2bn.male#0bn.F41_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F41_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F41_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2o.male#1o.F41_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F40_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F40_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F40_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F40_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F40_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F40_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F40_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F40_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F40_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F40_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F40_to_male_mgr" != "1bn.male#1bn.F40_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F40_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F40_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F40_to_male_mgr" != "1bn.male#1bn.F40_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F40_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F40_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F40_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F40_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F40_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F40_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F40_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F40_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F40_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F40_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F40_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F40_to_male_mgr" != "2bn.male#0bn.F40_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F40_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F40_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F40_to_male_mgr" != "2bn.male#0bn.F40_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F40_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F40_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2o.male#1o.F40_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F39_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F39_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F39_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F39_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F39_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F39_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F39_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F39_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F39_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F39_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F39_to_male_mgr" != "1bn.male#1bn.F39_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F39_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F39_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F39_to_male_mgr" != "1bn.male#1bn.F39_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F39_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F39_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F39_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F39_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F39_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F39_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F39_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F39_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F39_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F39_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F39_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F39_to_male_mgr" != "2bn.male#0bn.F39_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F39_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F39_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F39_to_male_mgr" != "2bn.male#0bn.F39_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F39_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F39_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2o.male#1o.F39_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F38_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F38_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F38_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F38_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F38_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F38_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F38_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F38_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F38_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F38_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F38_to_male_mgr" != "1bn.male#1bn.F38_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F38_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F38_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F38_to_male_mgr" != "1bn.male#1bn.F38_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F38_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F38_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F38_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F38_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F38_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F38_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F38_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F38_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F38_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F38_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F38_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F38_to_male_mgr" != "2bn.male#0bn.F38_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F38_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F38_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F38_to_male_mgr" != "2bn.male#0bn.F38_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F38_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F38_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2o.male#1o.F38_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F37_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F37_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F37_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F37_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F37_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F37_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F37_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F37_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F37_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F37_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F37_to_male_mgr" != "1bn.male#1bn.F37_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F37_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F37_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F37_to_male_mgr" != "1bn.male#1bn.F37_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F37_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F37_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F37_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F37_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F37_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F37_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F37_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F37_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F37_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F37_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F37_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F37_to_male_mgr" != "2bn.male#0bn.F37_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F37_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F37_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F37_to_male_mgr" != "2bn.male#0bn.F37_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F37_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F37_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2o.male#1o.F37_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F36_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F36_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F36_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F36_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F36_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F36_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F36_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F36_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F36_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F36_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F36_to_male_mgr" != "1bn.male#1bn.F36_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F36_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F36_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F36_to_male_mgr" != "1bn.male#1bn.F36_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F36_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F36_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F36_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F36_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F36_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F36_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F36_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F36_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F36_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F36_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F36_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F36_to_male_mgr" != "2bn.male#0bn.F36_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F36_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F36_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F36_to_male_mgr" != "2bn.male#0bn.F36_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F36_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F36_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.F36_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.F36_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.F36_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.F36_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.F36_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.F36_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.F36_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.F36_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.F36_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.F36_to_male_mgr" != "2bn.male#1bn.F36_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F36_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.F36_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.F36_to_male_mgr" != "2bn.male#1bn.F36_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F36_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.F36_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F35_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F35_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F35_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F35_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F35_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F35_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F35_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F35_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F35_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F35_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F35_to_male_mgr" != "1bn.male#1bn.F35_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F35_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F35_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F35_to_male_mgr" != "1bn.male#1bn.F35_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F35_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F35_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F35_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F35_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F35_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F35_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F35_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F35_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F35_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F35_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F35_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F35_to_male_mgr" != "2bn.male#0bn.F35_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F35_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F35_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F35_to_male_mgr" != "2bn.male#0bn.F35_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F35_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F35_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.F35_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.F35_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.F35_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.F35_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.F35_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.F35_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.F35_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.F35_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.F35_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.F35_to_male_mgr" != "2bn.male#1bn.F35_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F35_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.F35_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.F35_to_male_mgr" != "2bn.male#1bn.F35_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F35_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.F35_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F34_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F34_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F34_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F34_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F34_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F34_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F34_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F34_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F34_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F34_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F34_to_male_mgr" != "1bn.male#1bn.F34_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F34_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F34_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F34_to_male_mgr" != "1bn.male#1bn.F34_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F34_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F34_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F34_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F34_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F34_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F34_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F34_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F34_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F34_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F34_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F34_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F34_to_male_mgr" != "2bn.male#0bn.F34_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F34_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F34_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F34_to_male_mgr" != "2bn.male#0bn.F34_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F34_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F34_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.F34_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.F34_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.F34_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.F34_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.F34_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.F34_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.F34_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.F34_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.F34_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.F34_to_male_mgr" != "2bn.male#1bn.F34_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F34_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.F34_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.F34_to_male_mgr" != "2bn.male#1bn.F34_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F34_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.F34_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F33_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F33_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F33_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F33_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F33_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F33_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F33_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F33_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F33_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F33_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F33_to_male_mgr" != "1bn.male#1bn.F33_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F33_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F33_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F33_to_male_mgr" != "1bn.male#1bn.F33_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F33_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F33_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F33_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F33_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F33_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F33_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F33_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F33_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F33_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F33_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F33_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F33_to_male_mgr" != "2bn.male#0bn.F33_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F33_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F33_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F33_to_male_mgr" != "2bn.male#0bn.F33_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F33_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F33_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.F33_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.F33_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.F33_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.F33_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.F33_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.F33_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.F33_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.F33_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.F33_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.F33_to_male_mgr" != "2bn.male#1bn.F33_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F33_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.F33_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.F33_to_male_mgr" != "2bn.male#1bn.F33_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F33_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.F33_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F32_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F32_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F32_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F32_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F32_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F32_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F32_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F32_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F32_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F32_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F32_to_male_mgr" != "1bn.male#1bn.F32_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F32_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F32_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F32_to_male_mgr" != "1bn.male#1bn.F32_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F32_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F32_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F32_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F32_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F32_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F32_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F32_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F32_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F32_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F32_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F32_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F32_to_male_mgr" != "2bn.male#0bn.F32_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F32_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F32_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F32_to_male_mgr" != "2bn.male#0bn.F32_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F32_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F32_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.F32_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.F32_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.F32_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.F32_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.F32_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.F32_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.F32_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.F32_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.F32_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.F32_to_male_mgr" != "2bn.male#1bn.F32_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F32_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.F32_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.F32_to_male_mgr" != "2bn.male#1bn.F32_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F32_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.F32_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F31_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F31_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F31_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F31_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F31_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F31_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F31_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F31_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F31_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F31_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F31_to_male_mgr" != "1bn.male#1bn.F31_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F31_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F31_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F31_to_male_mgr" != "1bn.male#1bn.F31_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F31_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F31_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F31_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F31_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F31_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F31_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F31_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F31_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F31_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F31_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F31_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F31_to_male_mgr" != "2bn.male#0bn.F31_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F31_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F31_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F31_to_male_mgr" != "2bn.male#0bn.F31_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F31_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F31_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.F31_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.F31_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.F31_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.F31_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.F31_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.F31_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.F31_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.F31_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.F31_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.F31_to_male_mgr" != "2bn.male#1bn.F31_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F31_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.F31_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.F31_to_male_mgr" != "2bn.male#1bn.F31_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F31_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.F31_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F30_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F30_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F30_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F30_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F30_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F30_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F30_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F30_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F30_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F30_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F30_to_male_mgr" != "1bn.male#1bn.F30_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F30_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F30_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F30_to_male_mgr" != "1bn.male#1bn.F30_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F30_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F30_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F30_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F30_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F30_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F30_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F30_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F30_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F30_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F30_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F30_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F30_to_male_mgr" != "2bn.male#0bn.F30_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F30_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F30_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F30_to_male_mgr" != "2bn.male#0bn.F30_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F30_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F30_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.F30_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.F30_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.F30_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.F30_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.F30_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.F30_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.F30_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.F30_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.F30_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.F30_to_male_mgr" != "2bn.male#1bn.F30_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F30_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.F30_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.F30_to_male_mgr" != "2bn.male#1bn.F30_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F30_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.F30_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F29_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F29_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F29_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F29_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F29_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F29_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F29_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F29_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F29_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F29_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F29_to_male_mgr" != "1bn.male#1bn.F29_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F29_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F29_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F29_to_male_mgr" != "1bn.male#1bn.F29_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F29_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F29_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F29_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F29_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F29_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F29_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F29_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F29_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F29_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F29_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F29_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F29_to_male_mgr" != "2bn.male#0bn.F29_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F29_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F29_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F29_to_male_mgr" != "2bn.male#0bn.F29_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F29_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F29_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.F29_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.F29_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.F29_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.F29_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.F29_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.F29_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.F29_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.F29_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.F29_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.F29_to_male_mgr" != "2bn.male#1bn.F29_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F29_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.F29_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.F29_to_male_mgr" != "2bn.male#1bn.F29_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F29_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.F29_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F28_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F28_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F28_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F28_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F28_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F28_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F28_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F28_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F28_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F28_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F28_to_male_mgr" != "1bn.male#1bn.F28_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F28_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F28_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F28_to_male_mgr" != "1bn.male#1bn.F28_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F28_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F28_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F28_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F28_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F28_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F28_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F28_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F28_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F28_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F28_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F28_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F28_to_male_mgr" != "2bn.male#0bn.F28_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F28_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F28_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F28_to_male_mgr" != "2bn.male#0bn.F28_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F28_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F28_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.F28_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.F28_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.F28_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.F28_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.F28_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.F28_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.F28_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.F28_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.F28_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.F28_to_male_mgr" != "2bn.male#1bn.F28_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F28_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.F28_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.F28_to_male_mgr" != "2bn.male#1bn.F28_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F28_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.F28_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F27_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F27_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F27_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F27_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F27_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F27_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F27_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F27_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F27_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F27_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F27_to_male_mgr" != "1bn.male#1bn.F27_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F27_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F27_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F27_to_male_mgr" != "1bn.male#1bn.F27_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F27_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F27_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F27_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F27_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F27_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F27_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F27_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F27_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F27_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F27_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F27_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F27_to_male_mgr" != "2bn.male#0bn.F27_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F27_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F27_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F27_to_male_mgr" != "2bn.male#0bn.F27_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F27_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F27_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.F27_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.F27_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.F27_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.F27_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.F27_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.F27_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.F27_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.F27_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.F27_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.F27_to_male_mgr" != "2bn.male#1bn.F27_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F27_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.F27_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.F27_to_male_mgr" != "2bn.male#1bn.F27_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F27_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.F27_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F26_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F26_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F26_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F26_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F26_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F26_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F26_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F26_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F26_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F26_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F26_to_male_mgr" != "1bn.male#1bn.F26_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F26_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F26_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F26_to_male_mgr" != "1bn.male#1bn.F26_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F26_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F26_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F26_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F26_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F26_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F26_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F26_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F26_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F26_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F26_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F26_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F26_to_male_mgr" != "2bn.male#0bn.F26_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F26_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F26_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F26_to_male_mgr" != "2bn.male#0bn.F26_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F26_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F26_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.F26_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.F26_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.F26_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.F26_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.F26_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.F26_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.F26_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.F26_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.F26_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.F26_to_male_mgr" != "2bn.male#1bn.F26_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F26_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.F26_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.F26_to_male_mgr" != "2bn.male#1bn.F26_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F26_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.F26_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F25_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F25_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F25_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F25_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F25_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F25_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F25_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F25_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F25_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F25_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F25_to_male_mgr" != "1bn.male#1bn.F25_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F25_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F25_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F25_to_male_mgr" != "1bn.male#1bn.F25_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F25_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F25_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F25_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F25_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F25_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F25_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F25_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F25_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F25_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F25_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F25_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F25_to_male_mgr" != "2bn.male#0bn.F25_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F25_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F25_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F25_to_male_mgr" != "2bn.male#0bn.F25_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F25_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F25_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.F25_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.F25_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.F25_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.F25_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.F25_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.F25_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.F25_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.F25_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.F25_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.F25_to_male_mgr" != "2bn.male#1bn.F25_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F25_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.F25_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.F25_to_male_mgr" != "2bn.male#1bn.F25_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F25_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.F25_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F24_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F24_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F24_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F24_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F24_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F24_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F24_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F24_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F24_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F24_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F24_to_male_mgr" != "1bn.male#1bn.F24_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F24_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F24_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F24_to_male_mgr" != "1bn.male#1bn.F24_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F24_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F24_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F24_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F24_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F24_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F24_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F24_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F24_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F24_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F24_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F24_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F24_to_male_mgr" != "2bn.male#0bn.F24_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F24_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F24_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F24_to_male_mgr" != "2bn.male#0bn.F24_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F24_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F24_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.F24_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.F24_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.F24_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.F24_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.F24_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.F24_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.F24_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.F24_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.F24_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.F24_to_male_mgr" != "2bn.male#1bn.F24_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F24_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.F24_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.F24_to_male_mgr" != "2bn.male#1bn.F24_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F24_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.F24_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F23_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F23_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F23_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F23_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F23_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F23_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F23_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F23_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F23_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F23_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F23_to_male_mgr" != "1bn.male#1bn.F23_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F23_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F23_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F23_to_male_mgr" != "1bn.male#1bn.F23_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F23_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F23_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F23_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F23_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F23_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F23_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F23_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F23_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F23_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F23_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F23_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F23_to_male_mgr" != "2bn.male#0bn.F23_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F23_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F23_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F23_to_male_mgr" != "2bn.male#0bn.F23_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F23_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F23_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.F23_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.F23_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.F23_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.F23_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.F23_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.F23_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.F23_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.F23_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.F23_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.F23_to_male_mgr" != "2bn.male#1bn.F23_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F23_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.F23_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.F23_to_male_mgr" != "2bn.male#1bn.F23_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F23_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.F23_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F22_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F22_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F22_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F22_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F22_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F22_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F22_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F22_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F22_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F22_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F22_to_male_mgr" != "1bn.male#1bn.F22_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F22_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F22_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F22_to_male_mgr" != "1bn.male#1bn.F22_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F22_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F22_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F22_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F22_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F22_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F22_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F22_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F22_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F22_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F22_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F22_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F22_to_male_mgr" != "2bn.male#0bn.F22_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F22_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F22_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F22_to_male_mgr" != "2bn.male#0bn.F22_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F22_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F22_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.F22_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.F22_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.F22_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.F22_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.F22_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.F22_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.F22_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.F22_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.F22_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.F22_to_male_mgr" != "2bn.male#1bn.F22_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F22_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.F22_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.F22_to_male_mgr" != "2bn.male#1bn.F22_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F22_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.F22_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.F21_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.F21_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.F21_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.F21_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.F21_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.F21_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.F21_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.F21_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.F21_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.F21_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.F21_to_male_mgr" != "1bn.male#1bn.F21_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F21_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.F21_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.F21_to_male_mgr" != "1bn.male#1bn.F21_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.F21_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.F21_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.F21_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.F21_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.F21_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.F21_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.F21_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.F21_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.F21_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.F21_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.F21_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.F21_to_male_mgr" != "2bn.male#0bn.F21_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F21_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.F21_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.F21_to_male_mgr" != "2bn.male#0bn.F21_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.F21_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.F21_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.F21_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.F21_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.F21_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.F21_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.F21_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.F21_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.F21_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.F21_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.F21_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.F21_to_male_mgr" != "2bn.male#1bn.F21_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F21_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.F21_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.F21_to_male_mgr" != "2bn.male#1bn.F21_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.F21_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.F21_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.L31_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.L31_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.L31_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.L31_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.L31_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.L31_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.L31_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.L31_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.L31_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.L31_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.L31_to_male_mgr" != "1bn.male#1bn.L31_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L31_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.L31_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.L31_to_male_mgr" != "1bn.male#1bn.L31_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L31_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.L31_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.L31_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.L31_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.L31_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.L31_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.L31_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.L31_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.L31_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.L31_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.L31_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.L31_to_male_mgr" != "2bn.male#0bn.L31_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L31_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.L31_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.L31_to_male_mgr" != "2bn.male#0bn.L31_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L31_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.L31_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.L31_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.L31_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.L31_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.L31_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.L31_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.L31_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.L31_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.L31_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.L31_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.L31_to_male_mgr" != "2bn.male#1bn.L31_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L31_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.L31_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.L31_to_male_mgr" != "2bn.male#1bn.L31_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L31_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.L31_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.L32_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.L32_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.L32_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.L32_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.L32_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.L32_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.L32_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.L32_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.L32_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.L32_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.L32_to_male_mgr" != "1bn.male#1bn.L32_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L32_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.L32_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.L32_to_male_mgr" != "1bn.male#1bn.L32_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L32_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.L32_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.L32_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.L32_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.L32_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.L32_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.L32_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.L32_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.L32_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.L32_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.L32_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.L32_to_male_mgr" != "2bn.male#0bn.L32_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L32_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.L32_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.L32_to_male_mgr" != "2bn.male#0bn.L32_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L32_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.L32_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.L32_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.L32_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.L32_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.L32_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.L32_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.L32_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.L32_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.L32_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.L32_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.L32_to_male_mgr" != "2bn.male#1bn.L32_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L32_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.L32_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.L32_to_male_mgr" != "2bn.male#1bn.L32_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L32_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.L32_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.L33_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.L33_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.L33_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.L33_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.L33_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.L33_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.L33_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.L33_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.L33_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.L33_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.L33_to_male_mgr" != "1bn.male#1bn.L33_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L33_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.L33_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.L33_to_male_mgr" != "1bn.male#1bn.L33_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L33_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.L33_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.L33_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.L33_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.L33_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.L33_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.L33_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.L33_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.L33_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.L33_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.L33_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.L33_to_male_mgr" != "2bn.male#0bn.L33_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L33_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.L33_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.L33_to_male_mgr" != "2bn.male#0bn.L33_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L33_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.L33_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.L33_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.L33_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.L33_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.L33_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.L33_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.L33_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.L33_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.L33_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.L33_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.L33_to_male_mgr" != "2bn.male#1bn.L33_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L33_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.L33_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.L33_to_male_mgr" != "2bn.male#1bn.L33_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L33_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.L33_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.L34_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.L34_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.L34_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.L34_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.L34_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.L34_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.L34_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.L34_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.L34_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.L34_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.L34_to_male_mgr" != "1bn.male#1bn.L34_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L34_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.L34_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.L34_to_male_mgr" != "1bn.male#1bn.L34_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L34_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.L34_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.L34_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.L34_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.L34_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.L34_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.L34_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.L34_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.L34_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.L34_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.L34_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.L34_to_male_mgr" != "2bn.male#0bn.L34_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L34_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.L34_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.L34_to_male_mgr" != "2bn.male#0bn.L34_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L34_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.L34_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.L34_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.L34_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.L34_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.L34_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.L34_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.L34_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.L34_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.L34_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.L34_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.L34_to_male_mgr" != "2bn.male#1bn.L34_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L34_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.L34_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.L34_to_male_mgr" != "2bn.male#1bn.L34_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L34_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.L34_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.L35_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.L35_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.L35_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.L35_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.L35_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.L35_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.L35_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.L35_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.L35_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.L35_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.L35_to_male_mgr" != "1bn.male#1bn.L35_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L35_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.L35_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.L35_to_male_mgr" != "1bn.male#1bn.L35_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L35_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.L35_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.L35_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.L35_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.L35_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.L35_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.L35_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.L35_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.L35_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.L35_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.L35_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.L35_to_male_mgr" != "2bn.male#0bn.L35_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L35_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.L35_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.L35_to_male_mgr" != "2bn.male#0bn.L35_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L35_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.L35_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.L35_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.L35_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.L35_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.L35_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.L35_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.L35_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.L35_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.L35_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.L35_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.L35_to_male_mgr" != "2bn.male#1bn.L35_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L35_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.L35_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.L35_to_male_mgr" != "2bn.male#1bn.L35_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L35_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.L35_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.L36_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.L36_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.L36_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.L36_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.L36_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.L36_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.L36_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.L36_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.L36_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.L36_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.L36_to_male_mgr" != "1bn.male#1bn.L36_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L36_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.L36_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.L36_to_male_mgr" != "1bn.male#1bn.L36_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L36_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.L36_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.L36_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.L36_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.L36_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.L36_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.L36_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.L36_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.L36_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.L36_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.L36_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.L36_to_male_mgr" != "2bn.male#0bn.L36_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L36_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.L36_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.L36_to_male_mgr" != "2bn.male#0bn.L36_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L36_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.L36_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.L36_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.L36_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.L36_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.L36_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.L36_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.L36_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.L36_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.L36_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.L36_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.L36_to_male_mgr" != "2bn.male#1bn.L36_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L36_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.L36_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.L36_to_male_mgr" != "2bn.male#1bn.L36_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L36_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.L36_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.L37_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.L37_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.L37_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.L37_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.L37_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.L37_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.L37_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.L37_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.L37_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.L37_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.L37_to_male_mgr" != "1bn.male#1bn.L37_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L37_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.L37_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.L37_to_male_mgr" != "1bn.male#1bn.L37_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L37_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.L37_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.L37_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.L37_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.L37_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.L37_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.L37_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.L37_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.L37_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.L37_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.L37_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.L37_to_male_mgr" != "2bn.male#0bn.L37_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L37_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.L37_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.L37_to_male_mgr" != "2bn.male#0bn.L37_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L37_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.L37_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.L37_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.L37_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.L37_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.L37_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.L37_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.L37_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.L37_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.L37_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.L37_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.L37_to_male_mgr" != "2bn.male#1bn.L37_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L37_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.L37_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.L37_to_male_mgr" != "2bn.male#1bn.L37_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L37_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.L37_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.L38_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.L38_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.L38_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.L38_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.L38_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.L38_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.L38_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.L38_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.L38_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.L38_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.L38_to_male_mgr" != "1bn.male#1bn.L38_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L38_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.L38_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.L38_to_male_mgr" != "1bn.male#1bn.L38_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L38_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.L38_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.L38_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.L38_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.L38_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.L38_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.L38_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.L38_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.L38_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.L38_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.L38_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.L38_to_male_mgr" != "2bn.male#0bn.L38_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L38_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.L38_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.L38_to_male_mgr" != "2bn.male#0bn.L38_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L38_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.L38_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.L38_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.L38_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.L38_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.L38_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.L38_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.L38_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.L38_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.L38_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.L38_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.L38_to_male_mgr" != "2bn.male#1bn.L38_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L38_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.L38_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.L38_to_male_mgr" != "2bn.male#1bn.L38_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L38_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.L38_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.L39_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.L39_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.L39_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.L39_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.L39_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.L39_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.L39_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.L39_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.L39_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.L39_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.L39_to_male_mgr" != "1bn.male#1bn.L39_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L39_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.L39_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.L39_to_male_mgr" != "1bn.male#1bn.L39_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L39_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.L39_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_to_m
> ale_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.L39_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.L39_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.L39_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.L39_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.L39_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.L39_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.L39_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.L39_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.L39_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.L39_to_male_mgr" != "2bn.male#0bn.L39_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L39_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.L39_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.L39_to_male_mgr" != "2bn.male#0bn.L39_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L39_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.L39_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_to_m
> ale_mgr 2bn.male#0bn.L39_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.L39_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.L39_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.L39_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.L39_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.L39_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.L39_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.L39_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.L39_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.L39_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.L39_to_male_mgr" != "2bn.male#1bn.L39_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L39_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.L39_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.L39_to_male_mgr" != "2bn.male#1bn.L39_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L39_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.L39_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_to_m
> ale_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.L40_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.L40_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.L40_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.L40_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.L40_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.L40_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.L40_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.L40_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.L40_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.L40_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.L40_to_male_mgr" != "1bn.male#1bn.L40_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L40_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.L40_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.L40_to_male_mgr" != "1bn.male#1bn.L40_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L40_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.L40_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_to_m
> ale_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr 1bn.male#1b
> n.L40_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.L40_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.L40_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.L40_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.L40_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.L40_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.L40_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.L40_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.L40_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.L40_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.L40_to_male_mgr" != "2bn.male#0bn.L40_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L40_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.L40_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.L40_to_male_mgr" != "2bn.male#0bn.L40_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L40_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.L40_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_to_m
> ale_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr 1bn.male#1b
> n.L40_to_male_mgr 2bn.male#0bn.L40_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.L40_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.L40_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.L40_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.L40_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.L40_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.L40_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.L40_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.L40_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.L40_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.L40_to_male_mgr" != "2bn.male#1bn.L40_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L40_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.L40_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.L40_to_male_mgr" != "2bn.male#1bn.L40_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L40_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.L40_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_to_m
> ale_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr 1bn.male#1b
> n.L40_to_male_mgr 2bn.male#0bn.L40_to_male_mgr 2bn.male#1bn.L40_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.L41_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.L41_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.L41_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.L41_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.L41_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.L41_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.L41_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.L41_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.L41_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.L41_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.L41_to_male_mgr" != "1bn.male#1bn.L41_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L41_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.L41_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.L41_to_male_mgr" != "1bn.male#1bn.L41_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L41_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.L41_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_to_m
> ale_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr 1bn.male#1b
> n.L40_to_male_mgr 2bn.male#0bn.L40_to_male_mgr 2bn.male#1bn.L40_to_male_mgr 1
> bn.male#1bn.L41_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.L41_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.L41_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.L41_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.L41_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.L41_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.L41_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.L41_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.L41_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.L41_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.L41_to_male_mgr" != "2bn.male#0bn.L41_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L41_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.L41_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.L41_to_male_mgr" != "2bn.male#0bn.L41_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L41_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.L41_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_to_m
> ale_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr 1bn.male#1b
> n.L40_to_male_mgr 2bn.male#0bn.L40_to_male_mgr 2bn.male#1bn.L40_to_male_mgr 1
> bn.male#1bn.L41_to_male_mgr 2bn.male#0bn.L41_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.L41_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
>  1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.L41_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.L41_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.L41_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.L41_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.L41_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.L41_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.L41_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.L41_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.L41_to_male_mgr" != "2bn.male#1bn.L41_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L41_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.L41_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.L41_to_male_mgr" != "2bn.male#1bn.L41_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L41_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.L41_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_to_m
> ale_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr 1bn.male#1b
> n.L40_to_male_mgr 2bn.male#0bn.L40_to_male_mgr 2bn.male#1bn.L40_to_male_mgr 1
> bn.male#1bn.L41_to_male_mgr 2bn.male#0bn.L41_to_male_mgr 2bn.male#1bn.L41_to_
> male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.L42_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
>  1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.L42_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
>  1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.L42_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.L42_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.L42_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.L42_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.L42_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.L42_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.L42_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.L42_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.L42_to_male_mgr" != "1bn.male#1bn.L42_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L42_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.L42_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.L42_to_male_mgr" != "1bn.male#1bn.L42_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L42_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.L42_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_to_m
> ale_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr 1bn.male#1b
> n.L40_to_male_mgr 2bn.male#0bn.L40_to_male_mgr 2bn.male#1bn.L40_to_male_mgr 1
> bn.male#1bn.L41_to_male_mgr 2bn.male#0bn.L41_to_male_mgr 2bn.male#1bn.L41_to_
> male_mgr 1bn.male#1bn.L42_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.L42_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
>  1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.L42_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.L42_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.L42_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.L42_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.L42_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.L42_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.L42_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.L42_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.L42_to_male_mgr" != "2bn.male#0bn.L42_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L42_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.L42_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.L42_to_male_mgr" != "2bn.male#0bn.L42_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L42_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.L42_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_to_m
> ale_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr 1bn.male#1b
> n.L40_to_male_mgr 2bn.male#0bn.L40_to_male_mgr 2bn.male#1bn.L40_to_male_mgr 1
> bn.male#1bn.L41_to_male_mgr 2bn.male#0bn.L41_to_male_mgr 2bn.male#1bn.L41_to_
> male_mgr 1bn.male#1bn.L42_to_male_mgr 2bn.male#0bn.L42_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.L42_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
>  1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.L42_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.L42_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.L42_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.L42_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.L42_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.L42_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.L42_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.L42_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.L42_to_male_mgr" != "2bn.male#1bn.L42_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L42_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.L42_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.L42_to_male_mgr" != "2bn.male#1bn.L42_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L42_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.L42_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_to_m
> ale_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr 1bn.male#1b
> n.L40_to_male_mgr 2bn.male#0bn.L40_to_male_mgr 2bn.male#1bn.L40_to_male_mgr 1
> bn.male#1bn.L41_to_male_mgr 2bn.male#0bn.L41_to_male_mgr 2bn.male#1bn.L41_to_
> male_mgr 1bn.male#1bn.L42_to_male_mgr 2bn.male#0bn.L42_to_male_mgr 2bn.male#1
> bn.L42_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.L43_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
>  1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.L43_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
>  1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.L43_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.L43_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.L43_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.L43_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.L43_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.L43_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.L43_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.L43_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.L43_to_male_mgr" != "1bn.male#1bn.L43_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L43_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.L43_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.L43_to_male_mgr" != "1bn.male#1bn.L43_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L43_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.L43_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_to_m
> ale_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr 1bn.male#1b
> n.L40_to_male_mgr 2bn.male#0bn.L40_to_male_mgr 2bn.male#1bn.L40_to_male_mgr 1
> bn.male#1bn.L41_to_male_mgr 2bn.male#0bn.L41_to_male_mgr 2bn.male#1bn.L41_to_
> male_mgr 1bn.male#1bn.L42_to_male_mgr 2bn.male#0bn.L42_to_male_mgr 2bn.male#1
> bn.L42_to_male_mgr 1bn.male#1bn.L43_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.L43_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
>  1 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.L43_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.L43_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.L43_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.L43_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.L43_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.L43_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.L43_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.L43_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.L43_to_male_mgr" != "2bn.male#0bn.L43_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L43_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.L43_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.L43_to_male_mgr" != "2bn.male#0bn.L43_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L43_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.L43_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_to_m
> ale_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr 1bn.male#1b
> n.L40_to_male_mgr 2bn.male#0bn.L40_to_male_mgr 2bn.male#1bn.L40_to_male_mgr 1
> bn.male#1bn.L41_to_male_mgr 2bn.male#0bn.L41_to_male_mgr 2bn.male#1bn.L41_to_
> male_mgr 1bn.male#1bn.L42_to_male_mgr 2bn.male#0bn.L42_to_male_mgr 2bn.male#1
> bn.L42_to_male_mgr 1bn.male#1bn.L43_to_male_mgr 2bn.male#0bn.L43_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#1.L43_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
>  1 0 1 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#1.L43_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#1.L43_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#1.L43_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#1.L43_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#1.L43_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#1.L43_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1.L43_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#1.L43_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1.L43_to_male_mgr" != "2bn.male#1bn.L43_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L43_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#1bn.L43_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#1bn.L43_to_male_mgr" != "2bn.male#1bn.L43_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#1bn.L43_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#1bn.L43_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_to_m
> ale_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr 1bn.male#1b
> n.L40_to_male_mgr 2bn.male#0bn.L40_to_male_mgr 2bn.male#1bn.L40_to_male_mgr 1
> bn.male#1bn.L41_to_male_mgr 2bn.male#0bn.L41_to_male_mgr 2bn.male#1bn.L41_to_
> male_mgr 1bn.male#1bn.L42_to_male_mgr 2bn.male#0bn.L42_to_male_mgr 2bn.male#1
> bn.L42_to_male_mgr 1bn.male#1bn.L43_to_male_mgr 2bn.male#0bn.L43_to_male_mgr 
> 2bn.male#1bn.L43_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0b.L44_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
>  1 0 1 1 1 0 1 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#1.L44_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
>  1 0 1 1 1 0 1 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#1.L44_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#1.L44_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#1.L44_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#1.L44_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#1.L44_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#1.L44_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1.L44_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#1.L44_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1.L44_to_male_mgr" != "1bn.male#1bn.L44_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L44_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#1bn.L44_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#1bn.L44_to_male_mgr" != "1bn.male#1bn.L44_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#1bn.L44_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#1bn.L44_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_to_m
> ale_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr 1bn.male#1b
> n.L40_to_male_mgr 2bn.male#0bn.L40_to_male_mgr 2bn.male#1bn.L40_to_male_mgr 1
> bn.male#1bn.L41_to_male_mgr 2bn.male#0bn.L41_to_male_mgr 2bn.male#1bn.L41_to_
> male_mgr 1bn.male#1bn.L42_to_male_mgr 2bn.male#0bn.L42_to_male_mgr 2bn.male#1
> bn.L42_to_male_mgr 1bn.male#1bn.L43_to_male_mgr 2bn.male#0bn.L43_to_male_mgr 
> 2bn.male#1bn.L43_to_male_mgr 1bn.male#1bn.L44_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0b.L44_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
>  1 0 1 1 1 0 1 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0b.L44_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0b.L44_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0b.L44_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0b.L44_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0b.L44_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0b.L44_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0b.L44_to_male_mgr", `"#([0-9]+)b?([.L
> FSD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0b.L44_to_male_mgr", "#([0-9]+)b?([.LFS
> D])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0b.L44_to_male_mgr" != "2bn.male#0bn.L44_to_ma
> le_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L44_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.L44_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.L44_to_male_mgr" != "2bn.male#0bn.L44_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L44_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.L44_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_to_m
> ale_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr 1bn.male#1b
> n.L40_to_male_mgr 2bn.male#0bn.L40_to_male_mgr 2bn.male#1bn.L40_to_male_mgr 1
> bn.male#1bn.L41_to_male_mgr 2bn.male#0bn.L41_to_male_mgr 2bn.male#1bn.L41_to_
> male_mgr 1bn.male#1bn.L42_to_male_mgr 2bn.male#0bn.L42_to_male_mgr 2bn.male#1
> bn.L42_to_male_mgr 1bn.male#1bn.L43_to_male_mgr 2bn.male#0bn.L43_to_male_mgr 
> 2bn.male#1bn.L43_to_male_mgr 1bn.male#1bn.L44_to_male_mgr 2bn.male#0bn.L44_to
> _male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2o.male#1o.L44_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
>  1 0 1 1 1 0 1 1 1 0 1 1 0
        - if (`ok') {
        = if (0) {
          AddBN `part'
          loc selected_vars `selected_vars' `part'
          }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0.L45_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
>  1 0 1 1 1 0 1 1 1 0 1 1 0 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#0.L45_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#0.L45_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#0.L45_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#0.L45_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#0.L45_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#0.L45_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#0.L45_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#0.L45_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#0.L45_to_male_mgr" != "1bn.male#0bn.L45_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#0bn.L45_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#0bn.L45_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#0bn.L45_to_male_mgr" != "1bn.male#0bn.L45_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#0bn.L45_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#0bn.L45_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_to_m
> ale_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr 1bn.male#1b
> n.L40_to_male_mgr 2bn.male#0bn.L40_to_male_mgr 2bn.male#1bn.L40_to_male_mgr 1
> bn.male#1bn.L41_to_male_mgr 2bn.male#0bn.L41_to_male_mgr 2bn.male#1bn.L41_to_
> male_mgr 1bn.male#1bn.L42_to_male_mgr 2bn.male#0bn.L42_to_male_mgr 2bn.male#1
> bn.L42_to_male_mgr 1bn.male#1bn.L43_to_male_mgr 2bn.male#0bn.L43_to_male_mgr 
> 2bn.male#1bn.L43_to_male_mgr 1bn.male#1bn.L44_to_male_mgr 2bn.male#0bn.L44_to
> _male_mgr 1bn.male#0bn.L45_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0.L45_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
>  1 0 1 1 1 0 1 1 1 0 1 1 0 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0.L45_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0.L45_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0.L45_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0.L45_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0.L45_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0.L45_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0.L45_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0.L45_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0.L45_to_male_mgr" != "2bn.male#0bn.L45_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L45_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.L45_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.L45_to_male_mgr" != "2bn.male#0bn.L45_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L45_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.L45_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_to_m
> ale_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr 1bn.male#1b
> n.L40_to_male_mgr 2bn.male#0bn.L40_to_male_mgr 2bn.male#1bn.L40_to_male_mgr 1
> bn.male#1bn.L41_to_male_mgr 2bn.male#0bn.L41_to_male_mgr 2bn.male#1bn.L41_to_
> male_mgr 1bn.male#1bn.L42_to_male_mgr 2bn.male#0bn.L42_to_male_mgr 2bn.male#1
> bn.L42_to_male_mgr 1bn.male#1bn.L43_to_male_mgr 2bn.male#0bn.L43_to_male_mgr 
> 2bn.male#1bn.L43_to_male_mgr 1bn.male#1bn.L44_to_male_mgr 2bn.male#0bn.L44_to
> _male_mgr 1bn.male#0bn.L45_to_male_mgr 2bn.male#0bn.L45_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0.L46_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
>  1 0 1 1 1 0 1 1 1 0 1 1 0 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#0.L46_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#0.L46_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#0.L46_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#0.L46_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#0.L46_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#0.L46_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#0.L46_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#0.L46_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#0.L46_to_male_mgr" != "1bn.male#0bn.L46_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#0bn.L46_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#0bn.L46_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#0bn.L46_to_male_mgr" != "1bn.male#0bn.L46_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#0bn.L46_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#0bn.L46_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_to_m
> ale_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr 1bn.male#1b
> n.L40_to_male_mgr 2bn.male#0bn.L40_to_male_mgr 2bn.male#1bn.L40_to_male_mgr 1
> bn.male#1bn.L41_to_male_mgr 2bn.male#0bn.L41_to_male_mgr 2bn.male#1bn.L41_to_
> male_mgr 1bn.male#1bn.L42_to_male_mgr 2bn.male#0bn.L42_to_male_mgr 2bn.male#1
> bn.L42_to_male_mgr 1bn.male#1bn.L43_to_male_mgr 2bn.male#0bn.L43_to_male_mgr 
> 2bn.male#1bn.L43_to_male_mgr 1bn.male#1bn.L44_to_male_mgr 2bn.male#0bn.L44_to
> _male_mgr 1bn.male#0bn.L45_to_male_mgr 2bn.male#0bn.L45_to_male_mgr 1bn.male#
> 0bn.L46_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0.L46_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
>  1 0 1 1 1 0 1 1 1 0 1 1 0 1 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0.L46_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0.L46_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0.L46_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0.L46_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0.L46_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0.L46_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0.L46_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0.L46_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0.L46_to_male_mgr" != "2bn.male#0bn.L46_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L46_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.L46_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.L46_to_male_mgr" != "2bn.male#0bn.L46_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L46_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.L46_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_to_m
> ale_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr 1bn.male#1b
> n.L40_to_male_mgr 2bn.male#0bn.L40_to_male_mgr 2bn.male#1bn.L40_to_male_mgr 1
> bn.male#1bn.L41_to_male_mgr 2bn.male#0bn.L41_to_male_mgr 2bn.male#1bn.L41_to_
> male_mgr 1bn.male#1bn.L42_to_male_mgr 2bn.male#0bn.L42_to_male_mgr 2bn.male#1
> bn.L42_to_male_mgr 1bn.male#1bn.L43_to_male_mgr 2bn.male#0bn.L43_to_male_mgr 
> 2bn.male#1bn.L43_to_male_mgr 1bn.male#1bn.L44_to_male_mgr 2bn.male#0bn.L44_to
> _male_mgr 1bn.male#0bn.L45_to_male_mgr 2bn.male#0bn.L45_to_male_mgr 1bn.male#
> 0bn.L46_to_male_mgr 2bn.male#0bn.L46_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 1b.male#0.L47_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
>  1 0 1 1 1 0 1 1 1 0 1 1 0 1 1 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 1b.male#0.L47_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 1b.male#0.L47_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1b.male#0.L47_to_male_mgr", `"^([0-9]+)b?([.LFS
> D])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("1b.male#0.L47_to_male_mgr", "^([0-9]+)b?([.LFSD]
> )", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("1bn.male#0.L47_to_male_mgr", "#")
          - loc old `part'
          = loc old 1bn.male#0.L47_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#0.L47_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("1bn.male#0.L47_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#0.L47_to_male_mgr" != "1bn.male#0bn.L47_to_mal
> e_mgr"
          - loc old `part'
          = loc old 1bn.male#0bn.L47_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("1bn.male#0bn.L47_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "1bn.male#0bn.L47_to_male_mgr" != "1bn.male#0bn.L47_to_m
> ale_mgr"
          - loc old `part'
          = loc old 1bn.male#0bn.L47_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 1bn.male#0bn.L47_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_to_m
> ale_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr 1bn.male#1b
> n.L40_to_male_mgr 2bn.male#0bn.L40_to_male_mgr 2bn.male#1bn.L40_to_male_mgr 1
> bn.male#1bn.L41_to_male_mgr 2bn.male#0bn.L41_to_male_mgr 2bn.male#1bn.L41_to_
> male_mgr 1bn.male#1bn.L42_to_male_mgr 2bn.male#0bn.L42_to_male_mgr 2bn.male#1
> bn.L42_to_male_mgr 1bn.male#1bn.L43_to_male_mgr 2bn.male#0bn.L43_to_male_mgr 
> 2bn.male#1bn.L43_to_male_mgr 1bn.male#1bn.L44_to_male_mgr 2bn.male#0bn.L44_to
> _male_mgr 1bn.male#0bn.L45_to_male_mgr 2bn.male#0bn.L45_to_male_mgr 1bn.male#
> 0bn.L46_to_male_mgr 2bn.male#0bn.L46_to_male_mgr 1bn.male#0bn.L47_to_male_mgr
        - }
        - }
        - _ms_parse_parts `part'
        = _ms_parse_parts 2.male#0.L47_to_male_mgr
        - loc ok = r(omit) == 0
        - loc mask `mask' `ok'
        = loc mask 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
>  1 0 1 1 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1
        - if (`ok') {
        = if (1) {
        - AddBN `part'
        = AddBN 2.male#0.L47_to_male_mgr
          ----------------------------------- begin ms_expand_varlist.AddBN ---
          - loc part `0'
          = loc part 2.male#0.L47_to_male_mgr
          - loc re "^([0-9]+)b?([.LFSD])"
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2.male#0.L47_to_male_mgr", `"^([0-9]+)b?([.LFSD
> ])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", regexs(1) + "bn" + regexs(2))
          = loc part = regexr("2.male#0.L47_to_male_mgr", "^([0-9]+)b?([.LFSD])
> ", regexs(1) + "bn" + regexs(2))
          - }
          - loc re "#([0-9]+)b?([.LFSD])"
          - loc loop = strpos("`part'", "#")
          = loc loop = strpos("2bn.male#0.L47_to_male_mgr", "#")
          - loc old `part'
          = loc old 2bn.male#0.L47_to_male_mgr
          - while (`loop') {
          = while (9) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0.L47_to_male_mgr", `"#([0-9]+)b?([.LF
> SD])"')
          - if (`match') {
          = if (1) {
          - loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
          = loc part = regexr("2bn.male#0.L47_to_male_mgr", "#([0-9]+)b?([.LFSD
> ])", "#" + regexs(1) + "bn" + regexs(2))
          - }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0.L47_to_male_mgr" != "2bn.male#0bn.L47_to_mal
> e_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L47_to_male_mgr
          - }
          - while (`loop') {
          = while (1) {
          - loc match = regexm("`part'", `"`re'"')
          = loc match = regexm("2bn.male#0bn.L47_to_male_mgr", `"#([0-9]+)b?([.
> LFSD])"')
          - if (`match') {
          = if (0) {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
          - loc loop = "`old'" != "`part'"
          = loc loop = "2bn.male#0bn.L47_to_male_mgr" != "2bn.male#0bn.L47_to_m
> ale_mgr"
          - loc old `part'
          = loc old 2bn.male#0bn.L47_to_male_mgr
          - }
          - while (`loop') {
          = while (0) {
            loc match = regexm("`part'", `"`re'"')
            if (`match') {
            loc part = regexr("`part'", "`re'", "#" + regexs(1) + "bn" + regexs
> (2))
            }
            loc loop = "`old'" != "`part'"
            loc old `part'
            }
          - c_local part `part'
          = c_local part 2bn.male#0bn.L47_to_male_mgr
          ------------------------------------- end ms_expand_varlist.AddBN ---
        - loc selected_vars `selected_vars' `part'
        = loc selected_vars F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_to_m
> ale_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_mgr
>  F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16_to
> _male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.male
> #c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_mgr
>  2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10_to
> _male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_mgr
>  F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_mal
> e_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F5_t
> o_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.male#c
> .F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2bn.m
> ale#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_mgr 
> 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_male
> _mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5_to
> _male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_mgr 
> L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_male
> _mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L10_
> to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn.ma
> le#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_male_m
> gr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L16_
> to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_male
> _mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c.L1
> 9_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2bn.
> male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_male
> _mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr L2
> 5_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to_ma
> le_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male#c.
> L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr 2b
> n.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_mal
> e_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1bn.
> F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 2bn
> .male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to_ma
> le_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#1bn
> .F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr 2b
> n.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_to_m
> ale_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male#1b
> n.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mgr 2
> bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_to_
> male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.male#1
> bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_mgr 
> 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33_to
> _male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.male#
> 1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_mgr
>  2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F30_t
> o_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.male
> #0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male_mg
> r 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F27_
> to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.mal
> e#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_male_m
> gr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.F25
> _to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn.ma
> le#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_male_
> mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn.F2
> 2_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2bn.m
> ale#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_male
> _mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1bn.L
> 32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1bn.
> male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_mal
> e_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1bn.
> L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 2bn
> .male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to_ma
> le_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#0bn
> .L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr 2b
> n.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_to_m
> ale_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr 1bn.male#1b
> n.L40_to_male_mgr 2bn.male#0bn.L40_to_male_mgr 2bn.male#1bn.L40_to_male_mgr 1
> bn.male#1bn.L41_to_male_mgr 2bn.male#0bn.L41_to_male_mgr 2bn.male#1bn.L41_to_
> male_mgr 1bn.male#1bn.L42_to_male_mgr 2bn.male#0bn.L42_to_male_mgr 2bn.male#1
> bn.L42_to_male_mgr 1bn.male#1bn.L43_to_male_mgr 2bn.male#0bn.L43_to_male_mgr 
> 2bn.male#1bn.L43_to_male_mgr 1bn.male#1bn.L44_to_male_mgr 2bn.male#0bn.L44_to
> _male_mgr 1bn.male#0bn.L45_to_male_mgr 2bn.male#0bn.L45_to_male_mgr 1bn.male#
> 0bn.L46_to_male_mgr 2bn.male#0bn.L46_to_male_mgr 1bn.male#0bn.L47_to_male_mgr
>  2bn.male#0bn.L47_to_male_mgr
        - }
        - }
        - return local fullvarlist `varlist'
        = return local fullvarlist F20_to_male_mgr 1b.male#co.F20_to_male_mgr 2
> .male#c.F20_to_male_mgr F19_to_male_mgr 1b.male#co.F19_to_male_mgr 2.male#c.F
> 19_to_male_mgr F18_to_male_mgr 1b.male#co.F18_to_male_mgr 2.male#c.F18_to_mal
> e_mgr F17_to_male_mgr 1b.male#co.F17_to_male_mgr 2.male#c.F17_to_male_mgr F16
> _to_male_mgr 1b.male#co.F16_to_male_mgr 2.male#c.F16_to_male_mgr F15_to_male_
> mgr 1b.male#co.F15_to_male_mgr 2.male#c.F15_to_male_mgr F14_to_male_mgr 1b.ma
> le#co.F14_to_male_mgr 2.male#c.F14_to_male_mgr F13_to_male_mgr 1b.male#co.F13
> _to_male_mgr 2.male#c.F13_to_male_mgr F12_to_male_mgr 1b.male#co.F12_to_male_
> mgr 2.male#c.F12_to_male_mgr F11_to_male_mgr 1b.male#co.F11_to_male_mgr 2.mal
> e#c.F11_to_male_mgr F10_to_male_mgr 1b.male#co.F10_to_male_mgr 2.male#c.F10_t
> o_male_mgr F9_to_male_mgr 1b.male#co.F9_to_male_mgr 2.male#c.F9_to_male_mgr F
> 8_to_male_mgr 1b.male#co.F8_to_male_mgr 2.male#c.F8_to_male_mgr F7_to_male_mg
> r 1b.male#co.F7_to_male_mgr 2.male#c.F7_to_male_mgr F6_to_male_mgr 1b.male#co
> .F6_to_male_mgr 2.male#c.F6_to_male_mgr F5_to_male_mgr 1b.male#co.F5_to_male_
> mgr 2.male#c.F5_to_male_mgr F4_to_male_mgr 1b.male#co.F4_to_male_mgr 2.male#c
> .F4_to_male_mgr F3_to_male_mgr 1b.male#co.F3_to_male_mgr 2.male#c.F3_to_male_
> mgr F2_to_male_mgr 1b.male#co.F2_to_male_mgr 2.male#c.F2_to_male_mgr F1_to_ma
> le_mgr 1b.male#co.F1_to_male_mgr 2.male#c.F1_to_male_mgr L0_to_male_mgr 1b.ma
> le#co.L0_to_male_mgr 2.male#c.L0_to_male_mgr L1_to_male_mgr 1b.male#co.L1_to_
> male_mgr 2.male#c.L1_to_male_mgr L2_to_male_mgr 1b.male#co.L2_to_male_mgr 2.m
> ale#c.L2_to_male_mgr L3_to_male_mgr 1b.male#co.L3_to_male_mgr 2.male#c.L3_to_
> male_mgr L4_to_male_mgr 1b.male#co.L4_to_male_mgr 2.male#c.L4_to_male_mgr L5_
> to_male_mgr 1b.male#co.L5_to_male_mgr 2.male#c.L5_to_male_mgr L6_to_male_mgr 
> 1b.male#co.L6_to_male_mgr 2.male#c.L6_to_male_mgr L7_to_male_mgr 1b.male#co.L
> 7_to_male_mgr 2.male#c.L7_to_male_mgr L8_to_male_mgr 1b.male#co.L8_to_male_mg
> r 2.male#c.L8_to_male_mgr L9_to_male_mgr 1b.male#co.L9_to_male_mgr 2.male#c.L
> 9_to_male_mgr L10_to_male_mgr 1b.male#co.L10_to_male_mgr 2.male#c.L10_to_male
> _mgr L11_to_male_mgr 1b.male#co.L11_to_male_mgr 2.male#c.L11_to_male_mgr L12_
> to_male_mgr 1b.male#co.L12_to_male_mgr 2.male#c.L12_to_male_mgr L13_to_male_m
> gr 1b.male#co.L13_to_male_mgr 2.male#c.L13_to_male_mgr L14_to_male_mgr 1b.mal
> e#co.L14_to_male_mgr 2.male#c.L14_to_male_mgr L15_to_male_mgr 1b.male#co.L15_
> to_male_mgr 2.male#c.L15_to_male_mgr L16_to_male_mgr 1b.male#co.L16_to_male_m
> gr 2.male#c.L16_to_male_mgr L17_to_male_mgr 1b.male#co.L17_to_male_mgr 2.male
> #c.L17_to_male_mgr L18_to_male_mgr 1b.male#co.L18_to_male_mgr 2.male#c.L18_to
> _male_mgr L19_to_male_mgr 1b.male#co.L19_to_male_mgr 2.male#c.L19_to_male_mgr
>  L20_to_male_mgr 1b.male#co.L20_to_male_mgr 2.male#c.L20_to_male_mgr L21_to_m
> ale_mgr 1b.male#co.L21_to_male_mgr 2.male#c.L21_to_male_mgr L22_to_male_mgr 1
> b.male#co.L22_to_male_mgr 2.male#c.L22_to_male_mgr L23_to_male_mgr 1b.male#co
> .L23_to_male_mgr 2.male#c.L23_to_male_mgr L24_to_male_mgr 1b.male#co.L24_to_m
> ale_mgr 2.male#c.L24_to_male_mgr L25_to_male_mgr 1b.male#co.L25_to_male_mgr 2
> .male#c.L25_to_male_mgr L26_to_male_mgr 1b.male#co.L26_to_male_mgr 2.male#c.L
> 26_to_male_mgr L27_to_male_mgr 1b.male#co.L27_to_male_mgr 2.male#c.L27_to_mal
> e_mgr L28_to_male_mgr 1b.male#co.L28_to_male_mgr 2.male#c.L28_to_male_mgr L29
> _to_male_mgr 1b.male#co.L29_to_male_mgr 2.male#c.L29_to_male_mgr L30_to_male_
> mgr 1b.male#co.L30_to_male_mgr 2.male#c.L30_to_male_mgr 1b.male#0.F47_to_male
> _mgr 2.male#0.F47_to_male_mgr 1b.male#0.F46_to_male_mgr 2.male#0.F46_to_male_
> mgr 1b.male#0b.F45_to_male_mgr 1b.male#1.F45_to_male_mgr 2.male#0b.F45_to_mal
> e_mgr 2o.male#1o.F45_to_male_mgr 1b.male#0b.F44_to_male_mgr 1b.male#1.F44_to_
> male_mgr 2.male#0b.F44_to_male_mgr 2o.male#1o.F44_to_male_mgr 1b.male#0b.F43_
> to_male_mgr 1b.male#1.F43_to_male_mgr 2.male#0b.F43_to_male_mgr 2o.male#1o.F4
> 3_to_male_mgr 1b.male#0b.F42_to_male_mgr 1b.male#1.F42_to_male_mgr 2.male#0b.
> F42_to_male_mgr 2o.male#1o.F42_to_male_mgr 1b.male#0b.F41_to_male_mgr 1b.male
> #1.F41_to_male_mgr 2.male#0b.F41_to_male_mgr 2o.male#1o.F41_to_male_mgr 1b.ma
> le#0b.F40_to_male_mgr 1b.male#1.F40_to_male_mgr 2.male#0b.F40_to_male_mgr 2o.
> male#1o.F40_to_male_mgr 1b.male#0b.F39_to_male_mgr 1b.male#1.F39_to_male_mgr 
> 2.male#0b.F39_to_male_mgr 2o.male#1o.F39_to_male_mgr 1b.male#0b.F38_to_male_m
> gr 1b.male#1.F38_to_male_mgr 2.male#0b.F38_to_male_mgr 2o.male#1o.F38_to_male
> _mgr 1b.male#0b.F37_to_male_mgr 1b.male#1.F37_to_male_mgr 2.male#0b.F37_to_ma
> le_mgr 2o.male#1o.F37_to_male_mgr 1b.male#0b.F36_to_male_mgr 1b.male#1.F36_to
> _male_mgr 2.male#0b.F36_to_male_mgr 2.male#1.F36_to_male_mgr 1b.male#0b.F35_t
> o_male_mgr 1b.male#1.F35_to_male_mgr 2.male#0b.F35_to_male_mgr 2.male#1.F35_t
> o_male_mgr 1b.male#0b.F34_to_male_mgr 1b.male#1.F34_to_male_mgr 2.male#0b.F34
> _to_male_mgr 2.male#1.F34_to_male_mgr 1b.male#0b.F33_to_male_mgr 1b.male#1.F3
> 3_to_male_mgr 2.male#0b.F33_to_male_mgr 2.male#1.F33_to_male_mgr 1b.male#0b.F
> 32_to_male_mgr 1b.male#1.F32_to_male_mgr 2.male#0b.F32_to_male_mgr 2.male#1.F
> 32_to_male_mgr 1b.male#0b.F31_to_male_mgr 1b.male#1.F31_to_male_mgr 2.male#0b
> .F31_to_male_mgr 2.male#1.F31_to_male_mgr 1b.male#0b.F30_to_male_mgr 1b.male#
> 1.F30_to_male_mgr 2.male#0b.F30_to_male_mgr 2.male#1.F30_to_male_mgr 1b.male#
> 0b.F29_to_male_mgr 1b.male#1.F29_to_male_mgr 2.male#0b.F29_to_male_mgr 2.male
> #1.F29_to_male_mgr 1b.male#0b.F28_to_male_mgr 1b.male#1.F28_to_male_mgr 2.mal
> e#0b.F28_to_male_mgr 2.male#1.F28_to_male_mgr 1b.male#0b.F27_to_male_mgr 1b.m
> ale#1.F27_to_male_mgr 2.male#0b.F27_to_male_mgr 2.male#1.F27_to_male_mgr 1b.m
> ale#0b.F26_to_male_mgr 1b.male#1.F26_to_male_mgr 2.male#0b.F26_to_male_mgr 2.
> male#1.F26_to_male_mgr 1b.male#0b.F25_to_male_mgr 1b.male#1.F25_to_male_mgr 2
> .male#0b.F25_to_male_mgr 2.male#1.F25_to_male_mgr 1b.male#0b.F24_to_male_mgr 
> 1b.male#1.F24_to_male_mgr 2.male#0b.F24_to_male_mgr 2.male#1.F24_to_male_mgr 
> 1b.male#0b.F23_to_male_mgr 1b.male#1.F23_to_male_mgr 2.male#0b.F23_to_male_mg
> r 2.male#1.F23_to_male_mgr 1b.male#0b.F22_to_male_mgr 1b.male#1.F22_to_male_m
> gr 2.male#0b.F22_to_male_mgr 2.male#1.F22_to_male_mgr 1b.male#0b.F21_to_male_
> mgr 1b.male#1.F21_to_male_mgr 2.male#0b.F21_to_male_mgr 2.male#1.F21_to_male_
> mgr 1b.male#0b.L31_to_male_mgr 1b.male#1.L31_to_male_mgr 2.male#0b.L31_to_mal
> e_mgr 2.male#1.L31_to_male_mgr 1b.male#0b.L32_to_male_mgr 1b.male#1.L32_to_ma
> le_mgr 2.male#0b.L32_to_male_mgr 2.male#1.L32_to_male_mgr 1b.male#0b.L33_to_m
> ale_mgr 1b.male#1.L33_to_male_mgr 2.male#0b.L33_to_male_mgr 2.male#1.L33_to_m
> ale_mgr 1b.male#0b.L34_to_male_mgr 1b.male#1.L34_to_male_mgr 2.male#0b.L34_to
> _male_mgr 2.male#1.L34_to_male_mgr 1b.male#0b.L35_to_male_mgr 1b.male#1.L35_t
> o_male_mgr 2.male#0b.L35_to_male_mgr 2.male#1.L35_to_male_mgr 1b.male#0b.L36_
> to_male_mgr 1b.male#1.L36_to_male_mgr 2.male#0b.L36_to_male_mgr 2.male#1.L36_
> to_male_mgr 1b.male#0b.L37_to_male_mgr 1b.male#1.L37_to_male_mgr 2.male#0b.L3
> 7_to_male_mgr 2.male#1.L37_to_male_mgr 1b.male#0b.L38_to_male_mgr 1b.male#1.L
> 38_to_male_mgr 2.male#0b.L38_to_male_mgr 2.male#1.L38_to_male_mgr 1b.male#0b.
> L39_to_male_mgr 1b.male#1.L39_to_male_mgr 2.male#0b.L39_to_male_mgr 2.male#1.
> L39_to_male_mgr 1b.male#0b.L40_to_male_mgr 1b.male#1.L40_to_male_mgr 2.male#0
> b.L40_to_male_mgr 2.male#1.L40_to_male_mgr 1b.male#0b.L41_to_male_mgr 1b.male
> #1.L41_to_male_mgr 2.male#0b.L41_to_male_mgr 2.male#1.L41_to_male_mgr 1b.male
> #0b.L42_to_male_mgr 1b.male#1.L42_to_male_mgr 2.male#0b.L42_to_male_mgr 2.mal
> e#1.L42_to_male_mgr 1b.male#0b.L43_to_male_mgr 1b.male#1.L43_to_male_mgr 2.ma
> le#0b.L43_to_male_mgr 2.male#1.L43_to_male_mgr 1b.male#0b.L44_to_male_mgr 1b.
> male#1.L44_to_male_mgr 2.male#0b.L44_to_male_mgr 2o.male#1o.L44_to_male_mgr 1
> b.male#0.L45_to_male_mgr 2.male#0.L45_to_male_mgr 1b.male#0.L46_to_male_mgr 2
> .male#0.L46_to_male_mgr 1b.male#0.L47_to_male_mgr 2.male#0.L47_to_male_mgr
        - return local varlist `selected_vars'
        = return local varlist F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_t
> o_male_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male_
> mgr F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F16
> _to_male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.m
> ale#c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male_
> mgr 2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F10
> _to_male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male_
> mgr F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to_
> male_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.F
> 5_to_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.mal
> e#c.F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2b
> n.male#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_m
> gr 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_m
> ale_mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L5
> _to_male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_m
> gr L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_m
> ale_mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.L
> 10_to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2bn
> .male#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_mal
> e_mgr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr L
> 16_to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_m
> ale_mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#c
> .L19_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 2
> bn.male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_m
> ale_mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mgr
>  L25_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_to
> _male_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.male
> #c.L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mgr
>  2bn.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to_
> male_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#1
> bn.F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr 
> 2bn.male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_to
> _male_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male#
> 1bn.F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mgr
>  2bn.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_t
> o_male_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.male
> #1bn.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_mg
> r 2bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35_
> to_male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.mal
> e#1bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_m
> gr 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F33
> _to_male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.ma
> le#1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male_
> mgr 2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F3
> 0_to_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.m
> ale#0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_male
> _mgr 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.F
> 27_to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn.
> male#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_mal
> e_mgr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn.
> F25_to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2bn
> .male#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_ma
> le_mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0bn
> .F22_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2b
> n.male#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_m
> ale_mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1b
> n.L32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 1
> bn.male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to_
> male_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#1
> bn.L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr 
> 2bn.male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_to
> _male_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male#
> 0bn.L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mgr
>  2bn.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_t
> o_male_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr 1bn.male
> #1bn.L40_to_male_mgr 2bn.male#0bn.L40_to_male_mgr 2bn.male#1bn.L40_to_male_mg
> r 1bn.male#1bn.L41_to_male_mgr 2bn.male#0bn.L41_to_male_mgr 2bn.male#1bn.L41_
> to_male_mgr 1bn.male#1bn.L42_to_male_mgr 2bn.male#0bn.L42_to_male_mgr 2bn.mal
> e#1bn.L42_to_male_mgr 1bn.male#1bn.L43_to_male_mgr 2bn.male#0bn.L43_to_male_m
> gr 2bn.male#1bn.L43_to_male_mgr 1bn.male#1bn.L44_to_male_mgr 2bn.male#0bn.L44
> _to_male_mgr 1bn.male#0bn.L45_to_male_mgr 2bn.male#0bn.L45_to_male_mgr 1bn.ma
> le#0bn.L46_to_male_mgr 2bn.male#0bn.L46_to_male_mgr 1bn.male#0bn.L47_to_male_
> mgr 2bn.male#0bn.L47_to_male_mgr
        - return local not_omitted `mask'
        = return local not_omitted 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 
> 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
>  0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 
> 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1
>  1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
>  1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1
        --------------------------------------------- end ms_expand_varlist ---
      - if (`verbose' > 0) return list
      = if (0 > 0) return list
      - mata: HDFE.fullindepvars = "`r(fullvarlist)'"
      = mata: HDFE.fullindepvars = "F20_to_male_mgr 1b.male#co.F20_to_male_mgr 
> 2.male#c.F20_to_male_mgr F19_to_male_mgr 1b.male#co.F19_to_male_mgr 2.male#c.
> F19_to_male_mgr F18_to_male_mgr 1b.male#co.F18_to_male_mgr 2.male#c.F18_to_ma
> le_mgr F17_to_male_mgr 1b.male#co.F17_to_male_mgr 2.male#c.F17_to_male_mgr F1
> 6_to_male_mgr 1b.male#co.F16_to_male_mgr 2.male#c.F16_to_male_mgr F15_to_male
> _mgr 1b.male#co.F15_to_male_mgr 2.male#c.F15_to_male_mgr F14_to_male_mgr 1b.m
> ale#co.F14_to_male_mgr 2.male#c.F14_to_male_mgr F13_to_male_mgr 1b.male#co.F1
> 3_to_male_mgr 2.male#c.F13_to_male_mgr F12_to_male_mgr 1b.male#co.F12_to_male
> _mgr 2.male#c.F12_to_male_mgr F11_to_male_mgr 1b.male#co.F11_to_male_mgr 2.ma
> le#c.F11_to_male_mgr F10_to_male_mgr 1b.male#co.F10_to_male_mgr 2.male#c.F10_
> to_male_mgr F9_to_male_mgr 1b.male#co.F9_to_male_mgr 2.male#c.F9_to_male_mgr 
> F8_to_male_mgr 1b.male#co.F8_to_male_mgr 2.male#c.F8_to_male_mgr F7_to_male_m
> gr 1b.male#co.F7_to_male_mgr 2.male#c.F7_to_male_mgr F6_to_male_mgr 1b.male#c
> o.F6_to_male_mgr 2.male#c.F6_to_male_mgr F5_to_male_mgr 1b.male#co.F5_to_male
> _mgr 2.male#c.F5_to_male_mgr F4_to_male_mgr 1b.male#co.F4_to_male_mgr 2.male#
> c.F4_to_male_mgr F3_to_male_mgr 1b.male#co.F3_to_male_mgr 2.male#c.F3_to_male
> _mgr F2_to_male_mgr 1b.male#co.F2_to_male_mgr 2.male#c.F2_to_male_mgr F1_to_m
> ale_mgr 1b.male#co.F1_to_male_mgr 2.male#c.F1_to_male_mgr L0_to_male_mgr 1b.m
> ale#co.L0_to_male_mgr 2.male#c.L0_to_male_mgr L1_to_male_mgr 1b.male#co.L1_to
> _male_mgr 2.male#c.L1_to_male_mgr L2_to_male_mgr 1b.male#co.L2_to_male_mgr 2.
> male#c.L2_to_male_mgr L3_to_male_mgr 1b.male#co.L3_to_male_mgr 2.male#c.L3_to
> _male_mgr L4_to_male_mgr 1b.male#co.L4_to_male_mgr 2.male#c.L4_to_male_mgr L5
> _to_male_mgr 1b.male#co.L5_to_male_mgr 2.male#c.L5_to_male_mgr L6_to_male_mgr
>  1b.male#co.L6_to_male_mgr 2.male#c.L6_to_male_mgr L7_to_male_mgr 1b.male#co.
> L7_to_male_mgr 2.male#c.L7_to_male_mgr L8_to_male_mgr 1b.male#co.L8_to_male_m
> gr 2.male#c.L8_to_male_mgr L9_to_male_mgr 1b.male#co.L9_to_male_mgr 2.male#c.
> L9_to_male_mgr L10_to_male_mgr 1b.male#co.L10_to_male_mgr 2.male#c.L10_to_mal
> e_mgr L11_to_male_mgr 1b.male#co.L11_to_male_mgr 2.male#c.L11_to_male_mgr L12
> _to_male_mgr 1b.male#co.L12_to_male_mgr 2.male#c.L12_to_male_mgr L13_to_male_
> mgr 1b.male#co.L13_to_male_mgr 2.male#c.L13_to_male_mgr L14_to_male_mgr 1b.ma
> le#co.L14_to_male_mgr 2.male#c.L14_to_male_mgr L15_to_male_mgr 1b.male#co.L15
> _to_male_mgr 2.male#c.L15_to_male_mgr L16_to_male_mgr 1b.male#co.L16_to_male_
> mgr 2.male#c.L16_to_male_mgr L17_to_male_mgr 1b.male#co.L17_to_male_mgr 2.mal
> e#c.L17_to_male_mgr L18_to_male_mgr 1b.male#co.L18_to_male_mgr 2.male#c.L18_t
> o_male_mgr L19_to_male_mgr 1b.male#co.L19_to_male_mgr 2.male#c.L19_to_male_mg
> r L20_to_male_mgr 1b.male#co.L20_to_male_mgr 2.male#c.L20_to_male_mgr L21_to_
> male_mgr 1b.male#co.L21_to_male_mgr 2.male#c.L21_to_male_mgr L22_to_male_mgr 
> 1b.male#co.L22_to_male_mgr 2.male#c.L22_to_male_mgr L23_to_male_mgr 1b.male#c
> o.L23_to_male_mgr 2.male#c.L23_to_male_mgr L24_to_male_mgr 1b.male#co.L24_to_
> male_mgr 2.male#c.L24_to_male_mgr L25_to_male_mgr 1b.male#co.L25_to_male_mgr 
> 2.male#c.L25_to_male_mgr L26_to_male_mgr 1b.male#co.L26_to_male_mgr 2.male#c.
> L26_to_male_mgr L27_to_male_mgr 1b.male#co.L27_to_male_mgr 2.male#c.L27_to_ma
> le_mgr L28_to_male_mgr 1b.male#co.L28_to_male_mgr 2.male#c.L28_to_male_mgr L2
> 9_to_male_mgr 1b.male#co.L29_to_male_mgr 2.male#c.L29_to_male_mgr L30_to_male
> _mgr 1b.male#co.L30_to_male_mgr 2.male#c.L30_to_male_mgr 1b.male#0.F47_to_mal
> e_mgr 2.male#0.F47_to_male_mgr 1b.male#0.F46_to_male_mgr 2.male#0.F46_to_male
> _mgr 1b.male#0b.F45_to_male_mgr 1b.male#1.F45_to_male_mgr 2.male#0b.F45_to_ma
> le_mgr 2o.male#1o.F45_to_male_mgr 1b.male#0b.F44_to_male_mgr 1b.male#1.F44_to
> _male_mgr 2.male#0b.F44_to_male_mgr 2o.male#1o.F44_to_male_mgr 1b.male#0b.F43
> _to_male_mgr 1b.male#1.F43_to_male_mgr 2.male#0b.F43_to_male_mgr 2o.male#1o.F
> 43_to_male_mgr 1b.male#0b.F42_to_male_mgr 1b.male#1.F42_to_male_mgr 2.male#0b
> .F42_to_male_mgr 2o.male#1o.F42_to_male_mgr 1b.male#0b.F41_to_male_mgr 1b.mal
> e#1.F41_to_male_mgr 2.male#0b.F41_to_male_mgr 2o.male#1o.F41_to_male_mgr 1b.m
> ale#0b.F40_to_male_mgr 1b.male#1.F40_to_male_mgr 2.male#0b.F40_to_male_mgr 2o
> .male#1o.F40_to_male_mgr 1b.male#0b.F39_to_male_mgr 1b.male#1.F39_to_male_mgr
>  2.male#0b.F39_to_male_mgr 2o.male#1o.F39_to_male_mgr 1b.male#0b.F38_to_male_
> mgr 1b.male#1.F38_to_male_mgr 2.male#0b.F38_to_male_mgr 2o.male#1o.F38_to_mal
> e_mgr 1b.male#0b.F37_to_male_mgr 1b.male#1.F37_to_male_mgr 2.male#0b.F37_to_m
> ale_mgr 2o.male#1o.F37_to_male_mgr 1b.male#0b.F36_to_male_mgr 1b.male#1.F36_t
> o_male_mgr 2.male#0b.F36_to_male_mgr 2.male#1.F36_to_male_mgr 1b.male#0b.F35_
> to_male_mgr 1b.male#1.F35_to_male_mgr 2.male#0b.F35_to_male_mgr 2.male#1.F35_
> to_male_mgr 1b.male#0b.F34_to_male_mgr 1b.male#1.F34_to_male_mgr 2.male#0b.F3
> 4_to_male_mgr 2.male#1.F34_to_male_mgr 1b.male#0b.F33_to_male_mgr 1b.male#1.F
> 33_to_male_mgr 2.male#0b.F33_to_male_mgr 2.male#1.F33_to_male_mgr 1b.male#0b.
> F32_to_male_mgr 1b.male#1.F32_to_male_mgr 2.male#0b.F32_to_male_mgr 2.male#1.
> F32_to_male_mgr 1b.male#0b.F31_to_male_mgr 1b.male#1.F31_to_male_mgr 2.male#0
> b.F31_to_male_mgr 2.male#1.F31_to_male_mgr 1b.male#0b.F30_to_male_mgr 1b.male
> #1.F30_to_male_mgr 2.male#0b.F30_to_male_mgr 2.male#1.F30_to_male_mgr 1b.male
> #0b.F29_to_male_mgr 1b.male#1.F29_to_male_mgr 2.male#0b.F29_to_male_mgr 2.mal
> e#1.F29_to_male_mgr 1b.male#0b.F28_to_male_mgr 1b.male#1.F28_to_male_mgr 2.ma
> le#0b.F28_to_male_mgr 2.male#1.F28_to_male_mgr 1b.male#0b.F27_to_male_mgr 1b.
> male#1.F27_to_male_mgr 2.male#0b.F27_to_male_mgr 2.male#1.F27_to_male_mgr 1b.
> male#0b.F26_to_male_mgr 1b.male#1.F26_to_male_mgr 2.male#0b.F26_to_male_mgr 2
> .male#1.F26_to_male_mgr 1b.male#0b.F25_to_male_mgr 1b.male#1.F25_to_male_mgr 
> 2.male#0b.F25_to_male_mgr 2.male#1.F25_to_male_mgr 1b.male#0b.F24_to_male_mgr
>  1b.male#1.F24_to_male_mgr 2.male#0b.F24_to_male_mgr 2.male#1.F24_to_male_mgr
>  1b.male#0b.F23_to_male_mgr 1b.male#1.F23_to_male_mgr 2.male#0b.F23_to_male_m
> gr 2.male#1.F23_to_male_mgr 1b.male#0b.F22_to_male_mgr 1b.male#1.F22_to_male_
> mgr 2.male#0b.F22_to_male_mgr 2.male#1.F22_to_male_mgr 1b.male#0b.F21_to_male
> _mgr 1b.male#1.F21_to_male_mgr 2.male#0b.F21_to_male_mgr 2.male#1.F21_to_male
> _mgr 1b.male#0b.L31_to_male_mgr 1b.male#1.L31_to_male_mgr 2.male#0b.L31_to_ma
> le_mgr 2.male#1.L31_to_male_mgr 1b.male#0b.L32_to_male_mgr 1b.male#1.L32_to_m
> ale_mgr 2.male#0b.L32_to_male_mgr 2.male#1.L32_to_male_mgr 1b.male#0b.L33_to_
> male_mgr 1b.male#1.L33_to_male_mgr 2.male#0b.L33_to_male_mgr 2.male#1.L33_to_
> male_mgr 1b.male#0b.L34_to_male_mgr 1b.male#1.L34_to_male_mgr 2.male#0b.L34_t
> o_male_mgr 2.male#1.L34_to_male_mgr 1b.male#0b.L35_to_male_mgr 1b.male#1.L35_
> to_male_mgr 2.male#0b.L35_to_male_mgr 2.male#1.L35_to_male_mgr 1b.male#0b.L36
> _to_male_mgr 1b.male#1.L36_to_male_mgr 2.male#0b.L36_to_male_mgr 2.male#1.L36
> _to_male_mgr 1b.male#0b.L37_to_male_mgr 1b.male#1.L37_to_male_mgr 2.male#0b.L
> 37_to_male_mgr 2.male#1.L37_to_male_mgr 1b.male#0b.L38_to_male_mgr 1b.male#1.
> L38_to_male_mgr 2.male#0b.L38_to_male_mgr 2.male#1.L38_to_male_mgr 1b.male#0b
> .L39_to_male_mgr 1b.male#1.L39_to_male_mgr 2.male#0b.L39_to_male_mgr 2.male#1
> .L39_to_male_mgr 1b.male#0b.L40_to_male_mgr 1b.male#1.L40_to_male_mgr 2.male#
> 0b.L40_to_male_mgr 2.male#1.L40_to_male_mgr 1b.male#0b.L41_to_male_mgr 1b.mal
> e#1.L41_to_male_mgr 2.male#0b.L41_to_male_mgr 2.male#1.L41_to_male_mgr 1b.mal
> e#0b.L42_to_male_mgr 1b.male#1.L42_to_male_mgr 2.male#0b.L42_to_male_mgr 2.ma
> le#1.L42_to_male_mgr 1b.male#0b.L43_to_male_mgr 1b.male#1.L43_to_male_mgr 2.m
> ale#0b.L43_to_male_mgr 2.male#1.L43_to_male_mgr 1b.male#0b.L44_to_male_mgr 1b
> .male#1.L44_to_male_mgr 2.male#0b.L44_to_male_mgr 2o.male#1o.L44_to_male_mgr 
> 1b.male#0.L45_to_male_mgr 2.male#0.L45_to_male_mgr 1b.male#0.L46_to_male_mgr 
> 2.male#0.L46_to_male_mgr 1b.male#0.L47_to_male_mgr 2.male#0.L47_to_male_mgr"
      - mata: HDFE.indepvars = "`r(varlist)'"
      = mata: HDFE.indepvars = "F20_to_male_mgr 2bn.male#c.F20_to_male_mgr F19_
> to_male_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_to_male
> _mgr F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.male#c.F1
> 6_to_male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_mgr 2bn.
> male#c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_to_male
> _mgr 2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male_mgr F1
> 0_to_male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_to_male
> _mgr F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#c.F7_to
> _male_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.male#c.
> F5_to_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr 2bn.ma
> le#c.F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_male_mgr 2
> bn.male#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_to_male_
> mgr 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr L3_to_
> male_mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_male_mgr L
> 5_to_male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_to_male_
> mgr L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c.L8_to_
> male_mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.male#c.
> L10_to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male_mgr 2b
> n.male#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L14_to_ma
> le_mgr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_male_mgr 
> L16_to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.L17_to_
> male_mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2bn.male#
> c.L19_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_male_mgr 
> 2bn.male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr L23_to_
> male_mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_male_mg
> r L25_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#c.L26_t
> o_male_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 2bn.mal
> e#c.L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_male_mg
> r 2bn.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn.F47_to
> _male_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1bn.male#
> 1bn.F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_male_mgr
>  2bn.male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0bn.F43_t
> o_male_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1bn.male
> #1bn.F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_male_mg
> r 2bn.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0bn.F39_
> to_male_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 1bn.mal
> e#1bn.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to_male_m
> gr 2bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#1bn.F35
> _to_male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr 1bn.ma
> le#1bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_to_male_
> mgr 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male#1bn.F3
> 3_to_male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mgr 2bn.m
> ale#1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_to_male
> _mgr 2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.male#0bn.F
> 30_to_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_mgr 2bn.
> male#0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28_to_mal
> e_mgr 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.male#1bn.
> F27_to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_mgr 1bn
> .male#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F26_to_ma
> le_mgr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.male#1bn
> .F25_to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male_mgr 2b
> n.male#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F23_to_m
> ale_mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.male#0b
> n.F22_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_male_mgr 2
> bn.male#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.L31_to_
> male_mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn.male#1
> bn.L32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_male_mgr 
> 1bn.male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn.L33_to
> _male_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2bn.male#
> 1bn.L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_male_mgr
>  2bn.male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0bn.L36_t
> o_male_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2bn.male
> #0bn.L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_male_mg
> r 2bn.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1bn.L39_
> to_male_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr 1bn.mal
> e#1bn.L40_to_male_mgr 2bn.male#0bn.L40_to_male_mgr 2bn.male#1bn.L40_to_male_m
> gr 1bn.male#1bn.L41_to_male_mgr 2bn.male#0bn.L41_to_male_mgr 2bn.male#1bn.L41
> _to_male_mgr 1bn.male#1bn.L42_to_male_mgr 2bn.male#0bn.L42_to_male_mgr 2bn.ma
> le#1bn.L42_to_male_mgr 1bn.male#1bn.L43_to_male_mgr 2bn.male#0bn.L43_to_male_
> mgr 2bn.male#1bn.L43_to_male_mgr 1bn.male#1bn.L44_to_male_mgr 2bn.male#0bn.L4
> 4_to_male_mgr 1bn.male#0bn.L45_to_male_mgr 2bn.male#0bn.L45_to_male_mgr 1bn.m
> ale#0bn.L46_to_male_mgr 2bn.male#0bn.L46_to_male_mgr 1bn.male#0bn.L47_to_male
> _mgr 2bn.male#0bn.L47_to_male_mgr"
      - mata: HDFE.not_basevar = strtoreal(tokens("`r(not_omitted)'"))
      = mata: HDFE.not_basevar = strtoreal(tokens("1 0 1 1 0 1 1 0 1 1 0 1 1 0 
> 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0
>  1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 
> 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1
>  0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 
> 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1
>  1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 
> 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1
>  1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1"))
      - mata: HDFE.varlist = "`depvar' `r(varlist)'"
      = mata: HDFE.varlist = "paygrade F20_to_male_mgr 2bn.male#c.F20_to_male_m
> gr F19_to_male_mgr 2bn.male#c.F19_to_male_mgr F18_to_male_mgr 2bn.male#c.F18_
> to_male_mgr F17_to_male_mgr 2bn.male#c.F17_to_male_mgr F16_to_male_mgr 2bn.ma
> le#c.F16_to_male_mgr F15_to_male_mgr 2bn.male#c.F15_to_male_mgr F14_to_male_m
> gr 2bn.male#c.F14_to_male_mgr F13_to_male_mgr 2bn.male#c.F13_to_male_mgr F12_
> to_male_mgr 2bn.male#c.F12_to_male_mgr F11_to_male_mgr 2bn.male#c.F11_to_male
> _mgr F10_to_male_mgr 2bn.male#c.F10_to_male_mgr F9_to_male_mgr 2bn.male#c.F9_
> to_male_mgr F8_to_male_mgr 2bn.male#c.F8_to_male_mgr F7_to_male_mgr 2bn.male#
> c.F7_to_male_mgr F6_to_male_mgr 2bn.male#c.F6_to_male_mgr F5_to_male_mgr 2bn.
> male#c.F5_to_male_mgr F4_to_male_mgr 2bn.male#c.F4_to_male_mgr F3_to_male_mgr
>  2bn.male#c.F3_to_male_mgr F2_to_male_mgr 2bn.male#c.F2_to_male_mgr F1_to_mal
> e_mgr 2bn.male#c.F1_to_male_mgr L0_to_male_mgr 2bn.male#c.L0_to_male_mgr L1_t
> o_male_mgr 2bn.male#c.L1_to_male_mgr L2_to_male_mgr 2bn.male#c.L2_to_male_mgr
>  L3_to_male_mgr 2bn.male#c.L3_to_male_mgr L4_to_male_mgr 2bn.male#c.L4_to_mal
> e_mgr L5_to_male_mgr 2bn.male#c.L5_to_male_mgr L6_to_male_mgr 2bn.male#c.L6_t
> o_male_mgr L7_to_male_mgr 2bn.male#c.L7_to_male_mgr L8_to_male_mgr 2bn.male#c
> .L8_to_male_mgr L9_to_male_mgr 2bn.male#c.L9_to_male_mgr L10_to_male_mgr 2bn.
> male#c.L10_to_male_mgr L11_to_male_mgr 2bn.male#c.L11_to_male_mgr L12_to_male
> _mgr 2bn.male#c.L12_to_male_mgr L13_to_male_mgr 2bn.male#c.L13_to_male_mgr L1
> 4_to_male_mgr 2bn.male#c.L14_to_male_mgr L15_to_male_mgr 2bn.male#c.L15_to_ma
> le_mgr L16_to_male_mgr 2bn.male#c.L16_to_male_mgr L17_to_male_mgr 2bn.male#c.
> L17_to_male_mgr L18_to_male_mgr 2bn.male#c.L18_to_male_mgr L19_to_male_mgr 2b
> n.male#c.L19_to_male_mgr L20_to_male_mgr 2bn.male#c.L20_to_male_mgr L21_to_ma
> le_mgr 2bn.male#c.L21_to_male_mgr L22_to_male_mgr 2bn.male#c.L22_to_male_mgr 
> L23_to_male_mgr 2bn.male#c.L23_to_male_mgr L24_to_male_mgr 2bn.male#c.L24_to_
> male_mgr L25_to_male_mgr 2bn.male#c.L25_to_male_mgr L26_to_male_mgr 2bn.male#
> c.L26_to_male_mgr L27_to_male_mgr 2bn.male#c.L27_to_male_mgr L28_to_male_mgr 
> 2bn.male#c.L28_to_male_mgr L29_to_male_mgr 2bn.male#c.L29_to_male_mgr L30_to_
> male_mgr 2bn.male#c.L30_to_male_mgr 1bn.male#0bn.F47_to_male_mgr 2bn.male#0bn
> .F47_to_male_mgr 1bn.male#0bn.F46_to_male_mgr 2bn.male#0bn.F46_to_male_mgr 1b
> n.male#1bn.F45_to_male_mgr 2bn.male#0bn.F45_to_male_mgr 1bn.male#1bn.F44_to_m
> ale_mgr 2bn.male#0bn.F44_to_male_mgr 1bn.male#1bn.F43_to_male_mgr 2bn.male#0b
> n.F43_to_male_mgr 1bn.male#1bn.F42_to_male_mgr 2bn.male#0bn.F42_to_male_mgr 1
> bn.male#1bn.F41_to_male_mgr 2bn.male#0bn.F41_to_male_mgr 1bn.male#1bn.F40_to_
> male_mgr 2bn.male#0bn.F40_to_male_mgr 1bn.male#1bn.F39_to_male_mgr 2bn.male#0
> bn.F39_to_male_mgr 1bn.male#1bn.F38_to_male_mgr 2bn.male#0bn.F38_to_male_mgr 
> 1bn.male#1bn.F37_to_male_mgr 2bn.male#0bn.F37_to_male_mgr 1bn.male#1bn.F36_to
> _male_mgr 2bn.male#0bn.F36_to_male_mgr 2bn.male#1bn.F36_to_male_mgr 1bn.male#
> 1bn.F35_to_male_mgr 2bn.male#0bn.F35_to_male_mgr 2bn.male#1bn.F35_to_male_mgr
>  1bn.male#1bn.F34_to_male_mgr 2bn.male#0bn.F34_to_male_mgr 2bn.male#1bn.F34_t
> o_male_mgr 1bn.male#1bn.F33_to_male_mgr 2bn.male#0bn.F33_to_male_mgr 2bn.male
> #1bn.F33_to_male_mgr 1bn.male#1bn.F32_to_male_mgr 2bn.male#0bn.F32_to_male_mg
> r 2bn.male#1bn.F32_to_male_mgr 1bn.male#1bn.F31_to_male_mgr 2bn.male#0bn.F31_
> to_male_mgr 2bn.male#1bn.F31_to_male_mgr 1bn.male#1bn.F30_to_male_mgr 2bn.mal
> e#0bn.F30_to_male_mgr 2bn.male#1bn.F30_to_male_mgr 1bn.male#1bn.F29_to_male_m
> gr 2bn.male#0bn.F29_to_male_mgr 2bn.male#1bn.F29_to_male_mgr 1bn.male#1bn.F28
> _to_male_mgr 2bn.male#0bn.F28_to_male_mgr 2bn.male#1bn.F28_to_male_mgr 1bn.ma
> le#1bn.F27_to_male_mgr 2bn.male#0bn.F27_to_male_mgr 2bn.male#1bn.F27_to_male_
> mgr 1bn.male#1bn.F26_to_male_mgr 2bn.male#0bn.F26_to_male_mgr 2bn.male#1bn.F2
> 6_to_male_mgr 1bn.male#1bn.F25_to_male_mgr 2bn.male#0bn.F25_to_male_mgr 2bn.m
> ale#1bn.F25_to_male_mgr 1bn.male#1bn.F24_to_male_mgr 2bn.male#0bn.F24_to_male
> _mgr 2bn.male#1bn.F24_to_male_mgr 1bn.male#1bn.F23_to_male_mgr 2bn.male#0bn.F
> 23_to_male_mgr 2bn.male#1bn.F23_to_male_mgr 1bn.male#1bn.F22_to_male_mgr 2bn.
> male#0bn.F22_to_male_mgr 2bn.male#1bn.F22_to_male_mgr 1bn.male#1bn.F21_to_mal
> e_mgr 2bn.male#0bn.F21_to_male_mgr 2bn.male#1bn.F21_to_male_mgr 1bn.male#1bn.
> L31_to_male_mgr 2bn.male#0bn.L31_to_male_mgr 2bn.male#1bn.L31_to_male_mgr 1bn
> .male#1bn.L32_to_male_mgr 2bn.male#0bn.L32_to_male_mgr 2bn.male#1bn.L32_to_ma
> le_mgr 1bn.male#1bn.L33_to_male_mgr 2bn.male#0bn.L33_to_male_mgr 2bn.male#1bn
> .L33_to_male_mgr 1bn.male#1bn.L34_to_male_mgr 2bn.male#0bn.L34_to_male_mgr 2b
> n.male#1bn.L34_to_male_mgr 1bn.male#1bn.L35_to_male_mgr 2bn.male#0bn.L35_to_m
> ale_mgr 2bn.male#1bn.L35_to_male_mgr 1bn.male#1bn.L36_to_male_mgr 2bn.male#0b
> n.L36_to_male_mgr 2bn.male#1bn.L36_to_male_mgr 1bn.male#1bn.L37_to_male_mgr 2
> bn.male#0bn.L37_to_male_mgr 2bn.male#1bn.L37_to_male_mgr 1bn.male#1bn.L38_to_
> male_mgr 2bn.male#0bn.L38_to_male_mgr 2bn.male#1bn.L38_to_male_mgr 1bn.male#1
> bn.L39_to_male_mgr 2bn.male#0bn.L39_to_male_mgr 2bn.male#1bn.L39_to_male_mgr 
> 1bn.male#1bn.L40_to_male_mgr 2bn.male#0bn.L40_to_male_mgr 2bn.male#1bn.L40_to
> _male_mgr 1bn.male#1bn.L41_to_male_mgr 2bn.male#0bn.L41_to_male_mgr 2bn.male#
> 1bn.L41_to_male_mgr 1bn.male#1bn.L42_to_male_mgr 2bn.male#0bn.L42_to_male_mgr
>  2bn.male#1bn.L42_to_male_mgr 1bn.male#1bn.L43_to_male_mgr 2bn.male#0bn.L43_t
> o_male_mgr 2bn.male#1bn.L43_to_male_mgr 1bn.male#1bn.L44_to_male_mgr 2bn.male
> #0bn.L44_to_male_mgr 1bn.male#0bn.L45_to_male_mgr 2bn.male#0bn.L45_to_male_mg
> r 1bn.male#0bn.L46_to_male_mgr 2bn.male#0bn.L46_to_male_mgr 1bn.male#0bn.L47_
> to_male_mgr 2bn.male#0bn.L47_to_male_mgr"
      - if (`timeit') timer off 22
      = if (0) timer off 22
      - mata: st_local("stats", HDFE.summarize_stats)
      - if ("`stats'" != "") Stats `touse'
      = if ("" != "") Stats __000001
      - mata: HDFE.estimate_cond()
      - if (`compact') {
      = if (0) {
        if (`verbose' > 0) di as text "## Preserving dataset"
        preserve
        novarabbrev keep `keepvars'
        }
      - if (`timeit') timer on 23
      = if (0) timer on 23
      - mata: hdfe_variables = HDFE.partial_out(HDFE.varlist, 1, 2, .)
(MWFE estimator converged in 1 iterations)
      - if (`timeit') timer off 23
      = if (0) timer off 23
      - if (`timeit') timer on 24
      = if (0) timer on 24
      - tempname b V N rank df_r
      - mata: reghdfe_post_ols(HDFE, hdfe_variables, "`b'", "`V'", "`N'", "`ran
> k'", "`df_r'")
      = mata: reghdfe_post_ols(HDFE, hdfe_variables, "__000002", "__000003", "_
> _000004", "__000005", "__000006")
note: 2.male#0.F47_to_male_mgr omitted because of collinearity
note: 1b.male#0.F46_to_male_mgr omitted because of collinearity
note: 2.male#0.F46_to_male_mgr omitted because of collinearity
note: 2.male#0b.F45_to_male_mgr omitted because of collinearity
note: 2.male#0b.F44_to_male_mgr omitted because of collinearity
note: 2.male#0b.F43_to_male_mgr omitted because of collinearity
note: 2.male#0b.F42_to_male_mgr omitted because of collinearity
note: 2.male#0b.F41_to_male_mgr omitted because of collinearity
note: 2.male#0b.F40_to_male_mgr omitted because of collinearity
note: 2.male#0b.F39_to_male_mgr omitted because of collinearity
note: 2.male#0b.F38_to_male_mgr omitted because of collinearity
note: 2.male#0b.F37_to_male_mgr omitted because of collinearity
note: 2.male#1.F36_to_male_mgr omitted because of collinearity
note: 2.male#1.F35_to_male_mgr omitted because of collinearity
note: 2.male#1.F34_to_male_mgr omitted because of collinearity
note: 2.male#1.F33_to_male_mgr omitted because of collinearity
note: 2.male#1.F32_to_male_mgr omitted because of collinearity
note: 2.male#1.F31_to_male_mgr omitted because of collinearity
note: 2.male#1.F30_to_male_mgr omitted because of collinearity
note: 2.male#1.F29_to_male_mgr omitted because of collinearity
note: 2.male#1.F28_to_male_mgr omitted because of collinearity
note: 2.male#1.F27_to_male_mgr omitted because of collinearity
note: 2.male#1.F26_to_male_mgr omitted because of collinearity
note: 2.male#1.F25_to_male_mgr omitted because of collinearity
note: 2.male#1.F24_to_male_mgr omitted because of collinearity
note: 2.male#1.F23_to_male_mgr omitted because of collinearity
note: 2.male#1.F22_to_male_mgr omitted because of collinearity
note: 2.male#1.F21_to_male_mgr omitted because of collinearity
note: 2.male#1.L31_to_male_mgr omitted because of collinearity
note: 2.male#1.L32_to_male_mgr omitted because of collinearity
note: 2.male#1.L33_to_male_mgr omitted because of collinearity
note: 2.male#1.L34_to_male_mgr omitted because of collinearity
note: 2.male#1.L35_to_male_mgr omitted because of collinearity
note: 2.male#1.L36_to_male_mgr omitted because of collinearity
note: 2.male#1.L37_to_male_mgr omitted because of collinearity
note: 2.male#1.L38_to_male_mgr omitted because of collinearity
note: 2.male#1.L39_to_male_mgr omitted because of collinearity
note: 2.male#1.L40_to_male_mgr omitted because of collinearity
note: 2.male#1.L41_to_male_mgr omitted because of collinearity
note: 2.male#1.L42_to_male_mgr omitted because of collinearity
note: 2.male#1.L43_to_male_mgr omitted because of collinearity
note: 2.male#0b.L44_to_male_mgr omitted because of collinearity
note: 1b.male#0.L45_to_male_mgr omitted because of collinearity
note: 2.male#0.L45_to_male_mgr omitted because of collinearity
note: 1b.male#0.L46_to_male_mgr omitted because of collinearity
note: 2.male#0.L46_to_male_mgr omitted because of collinearity
note: 1b.male#0.L47_to_male_mgr omitted because of collinearity
note: 2.male#0.L47_to_male_mgr omitted because of collinearity
      - mata: hdfe_variables = .
      - if (`compact') {
      = if (0) {
        if (`verbose' > 0) di as text "## Restoring dataset"
        restore
        mata: st_local("residuals", HDFE.residuals)
        if ("`residuals'" != "") mata: HDFE.save_variable(HDFE.residuals, HDFE.
> residuals_vector, "Residuals")
        }
      - RegressOLS `touse' `b' `V' `N' `rank' `df_r'
      = RegressOLS __000001 __000002 __000003 __000004 __000005 __000006
        ------------------------------------------ begin reghdfe.RegressOLS ---
        - args touse b V N rank df_r
        - mata: st_local("store_sample", strofreal(HDFE.store_sample))
        - if (`store_sample') loc esample "esample(`touse')"
        = if (1) loc esample "esample(__000001)"
        - mata: st_local("indepvars", HDFE.fullindepvars)
        - if ("`indepvars'" != "") {
        = if ("F20_to_male_mgr 1b.male#co.F20_to_male_mgr 2.male#c.F20_to_male_
> mgr F19_to_male_mgr 1b.male#co.F19_to_male_mgr 2.male#c.F19_to_male_mgr F18_t
> o_male_mgr 1b.male#co.F18_to_male_mgr 2.male#c.F18_to_male_mgr F17_to_male_mg
> r 1b.male#co.F17_to_male_mgr 2.male#c.F17_to_male_mgr F16_to_male_mgr 1b.male
> #co.F16_to_male_mgr 2.male#c.F16_to_male_mgr F15_to_male_mgr 1b.male#co.F15_t
> o_male_mgr 2.male#c.F15_to_male_mgr F14_to_male_mgr 1b.male#co.F14_to_male_mg
> r 2.male#c.F14_to_male_mgr F13_to_male_mgr 1b.male#co.F13_to_male_mgr 2.male#
> c.F13_to_male_mgr F12_to_male_mgr 1b.male#co.F12_to_male_mgr 2.male#c.F12_to_
> male_mgr F11_to_male_mgr 1b.male#co.F11_to_male_mgr 2.male#c.F11_to_male_mgr 
> F10_to_male_mgr 1b.male#co.F10_to_male_mgr 2.male#c.F10_to_male_mgr F9_to_mal
> e_mgr 1b.male#co.F9_to_male_mgr 2.male#c.F9_to_male_mgr F8_to_male_mgr 1b.mal
> e#co.F8_to_male_mgr 2.male#c.F8_to_male_mgr F7_to_male_mgr 1b.male#co.F7_to_m
> ale_mgr 2.male#c.F7_to_male_mgr F6_to_male_mgr 1b.male#co.F6_to_male_mgr 2.ma
> le#c.F6_to_male_mgr F5_to_male_mgr 1b.male#co.F5_to_male_mgr 2.male#c.F5_to_m
> ale_mgr F4_to_male_mgr 1b.male#co.F4_to_male_mgr 2.male#c.F4_to_male_mgr F3_t
> o_male_mgr 1b.male#co.F3_to_male_mgr 2.male#c.F3_to_male_mgr F2_to_male_mgr 1
> b.male#co.F2_to_male_mgr 2.male#c.F2_to_male_mgr F1_to_male_mgr 1b.male#co.F1
> _to_male_mgr 2.male#c.F1_to_male_mgr L0_to_male_mgr 1b.male#co.L0_to_male_mgr
>  2.male#c.L0_to_male_mgr L1_to_male_mgr 1b.male#co.L1_to_male_mgr 2.male#c.L1
> _to_male_mgr L2_to_male_mgr 1b.male#co.L2_to_male_mgr 2.male#c.L2_to_male_mgr
>  L3_to_male_mgr 1b.male#co.L3_to_male_mgr 2.male#c.L3_to_male_mgr L4_to_male_
> mgr 1b.male#co.L4_to_male_mgr 2.male#c.L4_to_male_mgr L5_to_male_mgr 1b.male#
> co.L5_to_male_mgr 2.male#c.L5_to_male_mgr L6_to_male_mgr 1b.male#co.L6_to_mal
> e_mgr 2.male#c.L6_to_male_mgr L7_to_male_mgr 1b.male#co.L7_to_male_mgr 2.male
> #c.L7_to_male_mgr L8_to_male_mgr 1b.male#co.L8_to_male_mgr 2.male#c.L8_to_mal
> e_mgr L9_to_male_mgr 1b.male#co.L9_to_male_mgr 2.male#c.L9_to_male_mgr L10_to
> _male_mgr 1b.male#co.L10_to_male_mgr 2.male#c.L10_to_male_mgr L11_to_male_mgr
>  1b.male#co.L11_to_male_mgr 2.male#c.L11_to_male_mgr L12_to_male_mgr 1b.male#
> co.L12_to_male_mgr 2.male#c.L12_to_male_mgr L13_to_male_mgr 1b.male#co.L13_to
> _male_mgr 2.male#c.L13_to_male_mgr L14_to_male_mgr 1b.male#co.L14_to_male_mgr
>  2.male#c.L14_to_male_mgr L15_to_male_mgr 1b.male#co.L15_to_male_mgr 2.male#c
> .L15_to_male_mgr L16_to_male_mgr 1b.male#co.L16_to_male_mgr 2.male#c.L16_to_m
> ale_mgr L17_to_male_mgr 1b.male#co.L17_to_male_mgr 2.male#c.L17_to_male_mgr L
> 18_to_male_mgr 1b.male#co.L18_to_male_mgr 2.male#c.L18_to_male_mgr L19_to_mal
> e_mgr 1b.male#co.L19_to_male_mgr 2.male#c.L19_to_male_mgr L20_to_male_mgr 1b.
> male#co.L20_to_male_mgr 2.male#c.L20_to_male_mgr L21_to_male_mgr 1b.male#co.L
> 21_to_male_mgr 2.male#c.L21_to_male_mgr L22_to_male_mgr 1b.male#co.L22_to_mal
> e_mgr 2.male#c.L22_to_male_mgr L23_to_male_mgr 1b.male#co.L23_to_male_mgr 2.m
> ale#c.L23_to_male_mgr L24_to_male_mgr 1b.male#co.L24_to_male_mgr 2.male#c.L24
> _to_male_mgr L25_to_male_mgr 1b.male#co.L25_to_male_mgr 2.male#c.L25_to_male_
> mgr L26_to_male_mgr 1b.male#co.L26_to_male_mgr 2.male#c.L26_to_male_mgr L27_t
> o_male_mgr 1b.male#co.L27_to_male_mgr 2.male#c.L27_to_male_mgr L28_to_male_mg
> r 1b.male#co.L28_to_male_mgr 2.male#c.L28_to_male_mgr L29_to_male_mgr 1b.male
> #co.L29_to_male_mgr 2.male#c.L29_to_male_mgr L30_to_male_mgr 1b.male#co.L30_t
> o_male_mgr 2.male#c.L30_to_male_mgr 1b.male#0.F47_to_male_mgr 2.male#0.F47_to
> _male_mgr 1b.male#0.F46_to_male_mgr 2.male#0.F46_to_male_mgr 1b.male#0b.F45_t
> o_male_mgr 1b.male#1.F45_to_male_mgr 2.male#0b.F45_to_male_mgr 2o.male#1o.F45
> _to_male_mgr 1b.male#0b.F44_to_male_mgr 1b.male#1.F44_to_male_mgr 2.male#0b.F
> 44_to_male_mgr 2o.male#1o.F44_to_male_mgr 1b.male#0b.F43_to_male_mgr 1b.male#
> 1.F43_to_male_mgr 2.male#0b.F43_to_male_mgr 2o.male#1o.F43_to_male_mgr 1b.mal
> e#0b.F42_to_male_mgr 1b.male#1.F42_to_male_mgr 2.male#0b.F42_to_male_mgr 2o.m
> ale#1o.F42_to_male_mgr 1b.male#0b.F41_to_male_mgr 1b.male#1.F41_to_male_mgr 2
> .male#0b.F41_to_male_mgr 2o.male#1o.F41_to_male_mgr 1b.male#0b.F40_to_male_mg
> r 1b.male#1.F40_to_male_mgr 2.male#0b.F40_to_male_mgr 2o.male#1o.F40_to_male_
> mgr 1b.male#0b.F39_to_male_mgr 1b.male#1.F39_to_male_mgr 2.male#0b.F39_to_mal
> e_mgr 2o.male#1o.F39_to_male_mgr 1b.male#0b.F38_to_male_mgr 1b.male#1.F38_to_
> male_mgr 2.male#0b.F38_to_male_mgr 2o.male#1o.F38_to_male_mgr 1b.male#0b.F37_
> to_male_mgr 1b.male#1.F37_to_male_mgr 2.male#0b.F37_to_male_mgr 2o.male#1o.F3
> 7_to_male_mgr 1b.male#0b.F36_to_male_mgr 1b.male#1.F36_to_male_mgr 2.male#0b.
> F36_to_male_mgr 2.male#1.F36_to_male_mgr 1b.male#0b.F35_to_male_mgr 1b.male#1
> .F35_to_male_mgr 2.male#0b.F35_to_male_mgr 2.male#1.F35_to_male_mgr 1b.male#0
> b.F34_to_male_mgr 1b.male#1.F34_to_male_mgr 2.male#0b.F34_to_male_mgr 2.male#
> 1.F34_to_male_mgr 1b.male#0b.F33_to_male_mgr 1b.male#1.F33_to_male_mgr 2.male
> #0b.F33_to_male_mgr 2.male#1.F33_to_male_mgr 1b.male#0b.F32_to_male_mgr 1b.ma
> le#1.F32_to_male_mgr 2.male#0b.F32_to_male_mgr 2.male#1.F32_to_male_mgr 1b.ma
> le#0b.F31_to_male_mgr 1b.male#1.F31_to_male_mgr 2.male#0b.F31_to_male_mgr 2.m
> ale#1.F31_to_male_mgr 1b.male#0b.F30_to_male_mgr 1b.male#1.F30_to_male_mgr 2.
> male#0b.F30_to_male_mgr 2.male#1.F30_to_male_mgr 1b.male#0b.F29_to_male_mgr 1
> b.male#1.F29_to_male_mgr 2.male#0b.F29_to_male_mgr 2.male#1.F29_to_male_mgr 1
> b.male#0b.F28_to_male_mgr 1b.male#1.F28_to_male_mgr 2.male#0b.F28_to_male_mgr
>  2.male#1.F28_to_male_mgr 1b.male#0b.F27_to_male_mgr 1b.male#1.F27_to_male_mg
> r 2.male#0b.F27_to_male_mgr 2.male#1.F27_to_male_mgr 1b.male#0b.F26_to_male_m
> gr 1b.male#1.F26_to_male_mgr 2.male#0b.F26_to_male_mgr 2.male#1.F26_to_male_m
> gr 1b.male#0b.F25_to_male_mgr 1b.male#1.F25_to_male_mgr 2.male#0b.F25_to_male
> _mgr 2.male#1.F25_to_male_mgr 1b.male#0b.F24_to_male_mgr 1b.male#1.F24_to_mal
> e_mgr 2.male#0b.F24_to_male_mgr 2.male#1.F24_to_male_mgr 1b.male#0b.F23_to_ma
> le_mgr 1b.male#1.F23_to_male_mgr 2.male#0b.F23_to_male_mgr 2.male#1.F23_to_ma
> le_mgr 1b.male#0b.F22_to_male_mgr 1b.male#1.F22_to_male_mgr 2.male#0b.F22_to_
> male_mgr 2.male#1.F22_to_male_mgr 1b.male#0b.F21_to_male_mgr 1b.male#1.F21_to
> _male_mgr 2.male#0b.F21_to_male_mgr 2.male#1.F21_to_male_mgr 1b.male#0b.L31_t
> o_male_mgr 1b.male#1.L31_to_male_mgr 2.male#0b.L31_to_male_mgr 2.male#1.L31_t
> o_male_mgr 1b.male#0b.L32_to_male_mgr 1b.male#1.L32_to_male_mgr 2.male#0b.L32
> _to_male_mgr 2.male#1.L32_to_male_mgr 1b.male#0b.L33_to_male_mgr 1b.male#1.L3
> 3_to_male_mgr 2.male#0b.L33_to_male_mgr 2.male#1.L33_to_male_mgr 1b.male#0b.L
> 34_to_male_mgr 1b.male#1.L34_to_male_mgr 2.male#0b.L34_to_male_mgr 2.male#1.L
> 34_to_male_mgr 1b.male#0b.L35_to_male_mgr 1b.male#1.L35_to_male_mgr 2.male#0b
> .L35_to_male_mgr 2.male#1.L35_to_male_mgr 1b.male#0b.L36_to_male_mgr 1b.male#
> 1.L36_to_male_mgr 2.male#0b.L36_to_male_mgr 2.male#1.L36_to_male_mgr 1b.male#
> 0b.L37_to_male_mgr 1b.male#1.L37_to_male_mgr 2.male#0b.L37_to_male_mgr 2.male
> #1.L37_to_male_mgr 1b.male#0b.L38_to_male_mgr 1b.male#1.L38_to_male_mgr 2.mal
> e#0b.L38_to_male_mgr 2.male#1.L38_to_male_mgr 1b.male#0b.L39_to_male_mgr 1b.m
> ale#1.L39_to_male_mgr 2.male#0b.L39_to_male_mgr 2.male#1.L39_to_male_mgr 1b.m
> ale#0b.L40_to_male_mgr 1b.male#1.L40_to_male_mgr 2.male#0b.L40_to_male_mgr 2.
> male#1.L40_to_male_mgr 1b.male#0b.L41_to_male_mgr 1b.male#1.L41_to_male_mgr 2
> .male#0b.L41_to_male_mgr 2.male#1.L41_to_male_mgr 1b.male#0b.L42_to_male_mgr 
> 1b.male#1.L42_to_male_mgr 2.male#0b.L42_to_male_mgr 2.male#1.L42_to_male_mgr 
> 1b.male#0b.L43_to_male_mgr 1b.male#1.L43_to_male_mgr 2.male#0b.L43_to_male_mg
> r 2.male#1.L43_to_male_mgr 1b.male#0b.L44_to_male_mgr 1b.male#1.L44_to_male_m
> gr 2.male#0b.L44_to_male_mgr 2o.male#1o.L44_to_male_mgr 1b.male#0.L45_to_male
> _mgr 2.male#0.L45_to_male_mgr 1b.male#0.L46_to_male_mgr 2.male#0.L46_to_male_
> mgr 1b.male#0.L47_to_male_mgr 2.male#0.L47_to_male_mgr _cons" != "") {
        - matrix colnames `b' = `indepvars'
        = matrix colnames __000002 = F20_to_male_mgr 1b.male#co.F20_to_male_mgr
>  2.male#c.F20_to_male_mgr F19_to_male_mgr 1b.male#co.F19_to_male_mgr 2.male#c
> .F19_to_male_mgr F18_to_male_mgr 1b.male#co.F18_to_male_mgr 2.male#c.F18_to_m
> ale_mgr F17_to_male_mgr 1b.male#co.F17_to_male_mgr 2.male#c.F17_to_male_mgr F
> 16_to_male_mgr 1b.male#co.F16_to_male_mgr 2.male#c.F16_to_male_mgr F15_to_mal
> e_mgr 1b.male#co.F15_to_male_mgr 2.male#c.F15_to_male_mgr F14_to_male_mgr 1b.
> male#co.F14_to_male_mgr 2.male#c.F14_to_male_mgr F13_to_male_mgr 1b.male#co.F
> 13_to_male_mgr 2.male#c.F13_to_male_mgr F12_to_male_mgr 1b.male#co.F12_to_mal
> e_mgr 2.male#c.F12_to_male_mgr F11_to_male_mgr 1b.male#co.F11_to_male_mgr 2.m
> ale#c.F11_to_male_mgr F10_to_male_mgr 1b.male#co.F10_to_male_mgr 2.male#c.F10
> _to_male_mgr F9_to_male_mgr 1b.male#co.F9_to_male_mgr 2.male#c.F9_to_male_mgr
>  F8_to_male_mgr 1b.male#co.F8_to_male_mgr 2.male#c.F8_to_male_mgr F7_to_male_
> mgr 1b.male#co.F7_to_male_mgr 2.male#c.F7_to_male_mgr F6_to_male_mgr 1b.male#
> co.F6_to_male_mgr 2.male#c.F6_to_male_mgr F5_to_male_mgr 1b.male#co.F5_to_mal
> e_mgr 2.male#c.F5_to_male_mgr F4_to_male_mgr 1b.male#co.F4_to_male_mgr 2.male
> #c.F4_to_male_mgr F3_to_male_mgr 1b.male#co.F3_to_male_mgr 2.male#c.F3_to_mal
> e_mgr F2_to_male_mgr 1b.male#co.F2_to_male_mgr 2.male#c.F2_to_male_mgr F1_to_
> male_mgr 1b.male#co.F1_to_male_mgr 2.male#c.F1_to_male_mgr L0_to_male_mgr 1b.
> male#co.L0_to_male_mgr 2.male#c.L0_to_male_mgr L1_to_male_mgr 1b.male#co.L1_t
> o_male_mgr 2.male#c.L1_to_male_mgr L2_to_male_mgr 1b.male#co.L2_to_male_mgr 2
> .male#c.L2_to_male_mgr L3_to_male_mgr 1b.male#co.L3_to_male_mgr 2.male#c.L3_t
> o_male_mgr L4_to_male_mgr 1b.male#co.L4_to_male_mgr 2.male#c.L4_to_male_mgr L
> 5_to_male_mgr 1b.male#co.L5_to_male_mgr 2.male#c.L5_to_male_mgr L6_to_male_mg
> r 1b.male#co.L6_to_male_mgr 2.male#c.L6_to_male_mgr L7_to_male_mgr 1b.male#co
> .L7_to_male_mgr 2.male#c.L7_to_male_mgr L8_to_male_mgr 1b.male#co.L8_to_male_
> mgr 2.male#c.L8_to_male_mgr L9_to_male_mgr 1b.male#co.L9_to_male_mgr 2.male#c
> .L9_to_male_mgr L10_to_male_mgr 1b.male#co.L10_to_male_mgr 2.male#c.L10_to_ma
> le_mgr L11_to_male_mgr 1b.male#co.L11_to_male_mgr 2.male#c.L11_to_male_mgr L1
> 2_to_male_mgr 1b.male#co.L12_to_male_mgr 2.male#c.L12_to_male_mgr L13_to_male
> _mgr 1b.male#co.L13_to_male_mgr 2.male#c.L13_to_male_mgr L14_to_male_mgr 1b.m
> ale#co.L14_to_male_mgr 2.male#c.L14_to_male_mgr L15_to_male_mgr 1b.male#co.L1
> 5_to_male_mgr 2.male#c.L15_to_male_mgr L16_to_male_mgr 1b.male#co.L16_to_male
> _mgr 2.male#c.L16_to_male_mgr L17_to_male_mgr 1b.male#co.L17_to_male_mgr 2.ma
> le#c.L17_to_male_mgr L18_to_male_mgr 1b.male#co.L18_to_male_mgr 2.male#c.L18_
> to_male_mgr L19_to_male_mgr 1b.male#co.L19_to_male_mgr 2.male#c.L19_to_male_m
> gr L20_to_male_mgr 1b.male#co.L20_to_male_mgr 2.male#c.L20_to_male_mgr L21_to
> _male_mgr 1b.male#co.L21_to_male_mgr 2.male#c.L21_to_male_mgr L22_to_male_mgr
>  1b.male#co.L22_to_male_mgr 2.male#c.L22_to_male_mgr L23_to_male_mgr 1b.male#
> co.L23_to_male_mgr 2.male#c.L23_to_male_mgr L24_to_male_mgr 1b.male#co.L24_to
> _male_mgr 2.male#c.L24_to_male_mgr L25_to_male_mgr 1b.male#co.L25_to_male_mgr
>  2.male#c.L25_to_male_mgr L26_to_male_mgr 1b.male#co.L26_to_male_mgr 2.male#c
> .L26_to_male_mgr L27_to_male_mgr 1b.male#co.L27_to_male_mgr 2.male#c.L27_to_m
> ale_mgr L28_to_male_mgr 1b.male#co.L28_to_male_mgr 2.male#c.L28_to_male_mgr L
> 29_to_male_mgr 1b.male#co.L29_to_male_mgr 2.male#c.L29_to_male_mgr L30_to_mal
> e_mgr 1b.male#co.L30_to_male_mgr 2.male#c.L30_to_male_mgr 1b.male#0.F47_to_ma
> le_mgr 2.male#0.F47_to_male_mgr 1b.male#0.F46_to_male_mgr 2.male#0.F46_to_mal
> e_mgr 1b.male#0b.F45_to_male_mgr 1b.male#1.F45_to_male_mgr 2.male#0b.F45_to_m
> ale_mgr 2o.male#1o.F45_to_male_mgr 1b.male#0b.F44_to_male_mgr 1b.male#1.F44_t
> o_male_mgr 2.male#0b.F44_to_male_mgr 2o.male#1o.F44_to_male_mgr 1b.male#0b.F4
> 3_to_male_mgr 1b.male#1.F43_to_male_mgr 2.male#0b.F43_to_male_mgr 2o.male#1o.
> F43_to_male_mgr 1b.male#0b.F42_to_male_mgr 1b.male#1.F42_to_male_mgr 2.male#0
> b.F42_to_male_mgr 2o.male#1o.F42_to_male_mgr 1b.male#0b.F41_to_male_mgr 1b.ma
> le#1.F41_to_male_mgr 2.male#0b.F41_to_male_mgr 2o.male#1o.F41_to_male_mgr 1b.
> male#0b.F40_to_male_mgr 1b.male#1.F40_to_male_mgr 2.male#0b.F40_to_male_mgr 2
> o.male#1o.F40_to_male_mgr 1b.male#0b.F39_to_male_mgr 1b.male#1.F39_to_male_mg
> r 2.male#0b.F39_to_male_mgr 2o.male#1o.F39_to_male_mgr 1b.male#0b.F38_to_male
> _mgr 1b.male#1.F38_to_male_mgr 2.male#0b.F38_to_male_mgr 2o.male#1o.F38_to_ma
> le_mgr 1b.male#0b.F37_to_male_mgr 1b.male#1.F37_to_male_mgr 2.male#0b.F37_to_
> male_mgr 2o.male#1o.F37_to_male_mgr 1b.male#0b.F36_to_male_mgr 1b.male#1.F36_
> to_male_mgr 2.male#0b.F36_to_male_mgr 2.male#1.F36_to_male_mgr 1b.male#0b.F35
> _to_male_mgr 1b.male#1.F35_to_male_mgr 2.male#0b.F35_to_male_mgr 2.male#1.F35
> _to_male_mgr 1b.male#0b.F34_to_male_mgr 1b.male#1.F34_to_male_mgr 2.male#0b.F
> 34_to_male_mgr 2.male#1.F34_to_male_mgr 1b.male#0b.F33_to_male_mgr 1b.male#1.
> F33_to_male_mgr 2.male#0b.F33_to_male_mgr 2.male#1.F33_to_male_mgr 1b.male#0b
> .F32_to_male_mgr 1b.male#1.F32_to_male_mgr 2.male#0b.F32_to_male_mgr 2.male#1
> .F32_to_male_mgr 1b.male#0b.F31_to_male_mgr 1b.male#1.F31_to_male_mgr 2.male#
> 0b.F31_to_male_mgr 2.male#1.F31_to_male_mgr 1b.male#0b.F30_to_male_mgr 1b.mal
> e#1.F30_to_male_mgr 2.male#0b.F30_to_male_mgr 2.male#1.F30_to_male_mgr 1b.mal
> e#0b.F29_to_male_mgr 1b.male#1.F29_to_male_mgr 2.male#0b.F29_to_male_mgr 2.ma
> le#1.F29_to_male_mgr 1b.male#0b.F28_to_male_mgr 1b.male#1.F28_to_male_mgr 2.m
> ale#0b.F28_to_male_mgr 2.male#1.F28_to_male_mgr 1b.male#0b.F27_to_male_mgr 1b
> .male#1.F27_to_male_mgr 2.male#0b.F27_to_male_mgr 2.male#1.F27_to_male_mgr 1b
> .male#0b.F26_to_male_mgr 1b.male#1.F26_to_male_mgr 2.male#0b.F26_to_male_mgr 
> 2.male#1.F26_to_male_mgr 1b.male#0b.F25_to_male_mgr 1b.male#1.F25_to_male_mgr
>  2.male#0b.F25_to_male_mgr 2.male#1.F25_to_male_mgr 1b.male#0b.F24_to_male_mg
> r 1b.male#1.F24_to_male_mgr 2.male#0b.F24_to_male_mgr 2.male#1.F24_to_male_mg
> r 1b.male#0b.F23_to_male_mgr 1b.male#1.F23_to_male_mgr 2.male#0b.F23_to_male_
> mgr 2.male#1.F23_to_male_mgr 1b.male#0b.F22_to_male_mgr 1b.male#1.F22_to_male
> _mgr 2.male#0b.F22_to_male_mgr 2.male#1.F22_to_male_mgr 1b.male#0b.F21_to_mal
> e_mgr 1b.male#1.F21_to_male_mgr 2.male#0b.F21_to_male_mgr 2.male#1.F21_to_mal
> e_mgr 1b.male#0b.L31_to_male_mgr 1b.male#1.L31_to_male_mgr 2.male#0b.L31_to_m
> ale_mgr 2.male#1.L31_to_male_mgr 1b.male#0b.L32_to_male_mgr 1b.male#1.L32_to_
> male_mgr 2.male#0b.L32_to_male_mgr 2.male#1.L32_to_male_mgr 1b.male#0b.L33_to
> _male_mgr 1b.male#1.L33_to_male_mgr 2.male#0b.L33_to_male_mgr 2.male#1.L33_to
> _male_mgr 1b.male#0b.L34_to_male_mgr 1b.male#1.L34_to_male_mgr 2.male#0b.L34_
> to_male_mgr 2.male#1.L34_to_male_mgr 1b.male#0b.L35_to_male_mgr 1b.male#1.L35
> _to_male_mgr 2.male#0b.L35_to_male_mgr 2.male#1.L35_to_male_mgr 1b.male#0b.L3
> 6_to_male_mgr 1b.male#1.L36_to_male_mgr 2.male#0b.L36_to_male_mgr 2.male#1.L3
> 6_to_male_mgr 1b.male#0b.L37_to_male_mgr 1b.male#1.L37_to_male_mgr 2.male#0b.
> L37_to_male_mgr 2.male#1.L37_to_male_mgr 1b.male#0b.L38_to_male_mgr 1b.male#1
> .L38_to_male_mgr 2.male#0b.L38_to_male_mgr 2.male#1.L38_to_male_mgr 1b.male#0
> b.L39_to_male_mgr 1b.male#1.L39_to_male_mgr 2.male#0b.L39_to_male_mgr 2.male#
> 1.L39_to_male_mgr 1b.male#0b.L40_to_male_mgr 1b.male#1.L40_to_male_mgr 2.male
> #0b.L40_to_male_mgr 2.male#1.L40_to_male_mgr 1b.male#0b.L41_to_male_mgr 1b.ma
> le#1.L41_to_male_mgr 2.male#0b.L41_to_male_mgr 2.male#1.L41_to_male_mgr 1b.ma
> le#0b.L42_to_male_mgr 1b.male#1.L42_to_male_mgr 2.male#0b.L42_to_male_mgr 2.m
> ale#1.L42_to_male_mgr 1b.male#0b.L43_to_male_mgr 1b.male#1.L43_to_male_mgr 2.
> male#0b.L43_to_male_mgr 2.male#1.L43_to_male_mgr 1b.male#0b.L44_to_male_mgr 1
> b.male#1.L44_to_male_mgr 2.male#0b.L44_to_male_mgr 2o.male#1o.L44_to_male_mgr
>  1b.male#0.L45_to_male_mgr 2.male#0.L45_to_male_mgr 1b.male#0.L46_to_male_mgr
>  2.male#0.L46_to_male_mgr 1b.male#0.L47_to_male_mgr 2.male#0.L47_to_male_mgr 
> _cons
        - matrix colnames `V' = `indepvars'
        = matrix colnames __000003 = F20_to_male_mgr 1b.male#co.F20_to_male_mgr
>  2.male#c.F20_to_male_mgr F19_to_male_mgr 1b.male#co.F19_to_male_mgr 2.male#c
> .F19_to_male_mgr F18_to_male_mgr 1b.male#co.F18_to_male_mgr 2.male#c.F18_to_m
> ale_mgr F17_to_male_mgr 1b.male#co.F17_to_male_mgr 2.male#c.F17_to_male_mgr F
> 16_to_male_mgr 1b.male#co.F16_to_male_mgr 2.male#c.F16_to_male_mgr F15_to_mal
> e_mgr 1b.male#co.F15_to_male_mgr 2.male#c.F15_to_male_mgr F14_to_male_mgr 1b.
> male#co.F14_to_male_mgr 2.male#c.F14_to_male_mgr F13_to_male_mgr 1b.male#co.F
> 13_to_male_mgr 2.male#c.F13_to_male_mgr F12_to_male_mgr 1b.male#co.F12_to_mal
> e_mgr 2.male#c.F12_to_male_mgr F11_to_male_mgr 1b.male#co.F11_to_male_mgr 2.m
> ale#c.F11_to_male_mgr F10_to_male_mgr 1b.male#co.F10_to_male_mgr 2.male#c.F10
> _to_male_mgr F9_to_male_mgr 1b.male#co.F9_to_male_mgr 2.male#c.F9_to_male_mgr
>  F8_to_male_mgr 1b.male#co.F8_to_male_mgr 2.male#c.F8_to_male_mgr F7_to_male_
> mgr 1b.male#co.F7_to_male_mgr 2.male#c.F7_to_male_mgr F6_to_male_mgr 1b.male#
> co.F6_to_male_mgr 2.male#c.F6_to_male_mgr F5_to_male_mgr 1b.male#co.F5_to_mal
> e_mgr 2.male#c.F5_to_male_mgr F4_to_male_mgr 1b.male#co.F4_to_male_mgr 2.male
> #c.F4_to_male_mgr F3_to_male_mgr 1b.male#co.F3_to_male_mgr 2.male#c.F3_to_mal
> e_mgr F2_to_male_mgr 1b.male#co.F2_to_male_mgr 2.male#c.F2_to_male_mgr F1_to_
> male_mgr 1b.male#co.F1_to_male_mgr 2.male#c.F1_to_male_mgr L0_to_male_mgr 1b.
> male#co.L0_to_male_mgr 2.male#c.L0_to_male_mgr L1_to_male_mgr 1b.male#co.L1_t
> o_male_mgr 2.male#c.L1_to_male_mgr L2_to_male_mgr 1b.male#co.L2_to_male_mgr 2
> .male#c.L2_to_male_mgr L3_to_male_mgr 1b.male#co.L3_to_male_mgr 2.male#c.L3_t
> o_male_mgr L4_to_male_mgr 1b.male#co.L4_to_male_mgr 2.male#c.L4_to_male_mgr L
> 5_to_male_mgr 1b.male#co.L5_to_male_mgr 2.male#c.L5_to_male_mgr L6_to_male_mg
> r 1b.male#co.L6_to_male_mgr 2.male#c.L6_to_male_mgr L7_to_male_mgr 1b.male#co
> .L7_to_male_mgr 2.male#c.L7_to_male_mgr L8_to_male_mgr 1b.male#co.L8_to_male_
> mgr 2.male#c.L8_to_male_mgr L9_to_male_mgr 1b.male#co.L9_to_male_mgr 2.male#c
> .L9_to_male_mgr L10_to_male_mgr 1b.male#co.L10_to_male_mgr 2.male#c.L10_to_ma
> le_mgr L11_to_male_mgr 1b.male#co.L11_to_male_mgr 2.male#c.L11_to_male_mgr L1
> 2_to_male_mgr 1b.male#co.L12_to_male_mgr 2.male#c.L12_to_male_mgr L13_to_male
> _mgr 1b.male#co.L13_to_male_mgr 2.male#c.L13_to_male_mgr L14_to_male_mgr 1b.m
> ale#co.L14_to_male_mgr 2.male#c.L14_to_male_mgr L15_to_male_mgr 1b.male#co.L1
> 5_to_male_mgr 2.male#c.L15_to_male_mgr L16_to_male_mgr 1b.male#co.L16_to_male
> _mgr 2.male#c.L16_to_male_mgr L17_to_male_mgr 1b.male#co.L17_to_male_mgr 2.ma
> le#c.L17_to_male_mgr L18_to_male_mgr 1b.male#co.L18_to_male_mgr 2.male#c.L18_
> to_male_mgr L19_to_male_mgr 1b.male#co.L19_to_male_mgr 2.male#c.L19_to_male_m
> gr L20_to_male_mgr 1b.male#co.L20_to_male_mgr 2.male#c.L20_to_male_mgr L21_to
> _male_mgr 1b.male#co.L21_to_male_mgr 2.male#c.L21_to_male_mgr L22_to_male_mgr
>  1b.male#co.L22_to_male_mgr 2.male#c.L22_to_male_mgr L23_to_male_mgr 1b.male#
> co.L23_to_male_mgr 2.male#c.L23_to_male_mgr L24_to_male_mgr 1b.male#co.L24_to
> _male_mgr 2.male#c.L24_to_male_mgr L25_to_male_mgr 1b.male#co.L25_to_male_mgr
>  2.male#c.L25_to_male_mgr L26_to_male_mgr 1b.male#co.L26_to_male_mgr 2.male#c
> .L26_to_male_mgr L27_to_male_mgr 1b.male#co.L27_to_male_mgr 2.male#c.L27_to_m
> ale_mgr L28_to_male_mgr 1b.male#co.L28_to_male_mgr 2.male#c.L28_to_male_mgr L
> 29_to_male_mgr 1b.male#co.L29_to_male_mgr 2.male#c.L29_to_male_mgr L30_to_mal
> e_mgr 1b.male#co.L30_to_male_mgr 2.male#c.L30_to_male_mgr 1b.male#0.F47_to_ma
> le_mgr 2.male#0.F47_to_male_mgr 1b.male#0.F46_to_male_mgr 2.male#0.F46_to_mal
> e_mgr 1b.male#0b.F45_to_male_mgr 1b.male#1.F45_to_male_mgr 2.male#0b.F45_to_m
> ale_mgr 2o.male#1o.F45_to_male_mgr 1b.male#0b.F44_to_male_mgr 1b.male#1.F44_t
> o_male_mgr 2.male#0b.F44_to_male_mgr 2o.male#1o.F44_to_male_mgr 1b.male#0b.F4
> 3_to_male_mgr 1b.male#1.F43_to_male_mgr 2.male#0b.F43_to_male_mgr 2o.male#1o.
> F43_to_male_mgr 1b.male#0b.F42_to_male_mgr 1b.male#1.F42_to_male_mgr 2.male#0
> b.F42_to_male_mgr 2o.male#1o.F42_to_male_mgr 1b.male#0b.F41_to_male_mgr 1b.ma
> le#1.F41_to_male_mgr 2.male#0b.F41_to_male_mgr 2o.male#1o.F41_to_male_mgr 1b.
> male#0b.F40_to_male_mgr 1b.male#1.F40_to_male_mgr 2.male#0b.F40_to_male_mgr 2
> o.male#1o.F40_to_male_mgr 1b.male#0b.F39_to_male_mgr 1b.male#1.F39_to_male_mg
> r 2.male#0b.F39_to_male_mgr 2o.male#1o.F39_to_male_mgr 1b.male#0b.F38_to_male
> _mgr 1b.male#1.F38_to_male_mgr 2.male#0b.F38_to_male_mgr 2o.male#1o.F38_to_ma
> le_mgr 1b.male#0b.F37_to_male_mgr 1b.male#1.F37_to_male_mgr 2.male#0b.F37_to_
> male_mgr 2o.male#1o.F37_to_male_mgr 1b.male#0b.F36_to_male_mgr 1b.male#1.F36_
> to_male_mgr 2.male#0b.F36_to_male_mgr 2.male#1.F36_to_male_mgr 1b.male#0b.F35
> _to_male_mgr 1b.male#1.F35_to_male_mgr 2.male#0b.F35_to_male_mgr 2.male#1.F35
> _to_male_mgr 1b.male#0b.F34_to_male_mgr 1b.male#1.F34_to_male_mgr 2.male#0b.F
> 34_to_male_mgr 2.male#1.F34_to_male_mgr 1b.male#0b.F33_to_male_mgr 1b.male#1.
> F33_to_male_mgr 2.male#0b.F33_to_male_mgr 2.male#1.F33_to_male_mgr 1b.male#0b
> .F32_to_male_mgr 1b.male#1.F32_to_male_mgr 2.male#0b.F32_to_male_mgr 2.male#1
> .F32_to_male_mgr 1b.male#0b.F31_to_male_mgr 1b.male#1.F31_to_male_mgr 2.male#
> 0b.F31_to_male_mgr 2.male#1.F31_to_male_mgr 1b.male#0b.F30_to_male_mgr 1b.mal
> e#1.F30_to_male_mgr 2.male#0b.F30_to_male_mgr 2.male#1.F30_to_male_mgr 1b.mal
> e#0b.F29_to_male_mgr 1b.male#1.F29_to_male_mgr 2.male#0b.F29_to_male_mgr 2.ma
> le#1.F29_to_male_mgr 1b.male#0b.F28_to_male_mgr 1b.male#1.F28_to_male_mgr 2.m
> ale#0b.F28_to_male_mgr 2.male#1.F28_to_male_mgr 1b.male#0b.F27_to_male_mgr 1b
> .male#1.F27_to_male_mgr 2.male#0b.F27_to_male_mgr 2.male#1.F27_to_male_mgr 1b
> .male#0b.F26_to_male_mgr 1b.male#1.F26_to_male_mgr 2.male#0b.F26_to_male_mgr 
> 2.male#1.F26_to_male_mgr 1b.male#0b.F25_to_male_mgr 1b.male#1.F25_to_male_mgr
>  2.male#0b.F25_to_male_mgr 2.male#1.F25_to_male_mgr 1b.male#0b.F24_to_male_mg
> r 1b.male#1.F24_to_male_mgr 2.male#0b.F24_to_male_mgr 2.male#1.F24_to_male_mg
> r 1b.male#0b.F23_to_male_mgr 1b.male#1.F23_to_male_mgr 2.male#0b.F23_to_male_
> mgr 2.male#1.F23_to_male_mgr 1b.male#0b.F22_to_male_mgr 1b.male#1.F22_to_male
> _mgr 2.male#0b.F22_to_male_mgr 2.male#1.F22_to_male_mgr 1b.male#0b.F21_to_mal
> e_mgr 1b.male#1.F21_to_male_mgr 2.male#0b.F21_to_male_mgr 2.male#1.F21_to_mal
> e_mgr 1b.male#0b.L31_to_male_mgr 1b.male#1.L31_to_male_mgr 2.male#0b.L31_to_m
> ale_mgr 2.male#1.L31_to_male_mgr 1b.male#0b.L32_to_male_mgr 1b.male#1.L32_to_
> male_mgr 2.male#0b.L32_to_male_mgr 2.male#1.L32_to_male_mgr 1b.male#0b.L33_to
> _male_mgr 1b.male#1.L33_to_male_mgr 2.male#0b.L33_to_male_mgr 2.male#1.L33_to
> _male_mgr 1b.male#0b.L34_to_male_mgr 1b.male#1.L34_to_male_mgr 2.male#0b.L34_
> to_male_mgr 2.male#1.L34_to_male_mgr 1b.male#0b.L35_to_male_mgr 1b.male#1.L35
> _to_male_mgr 2.male#0b.L35_to_male_mgr 2.male#1.L35_to_male_mgr 1b.male#0b.L3
> 6_to_male_mgr 1b.male#1.L36_to_male_mgr 2.male#0b.L36_to_male_mgr 2.male#1.L3
> 6_to_male_mgr 1b.male#0b.L37_to_male_mgr 1b.male#1.L37_to_male_mgr 2.male#0b.
> L37_to_male_mgr 2.male#1.L37_to_male_mgr 1b.male#0b.L38_to_male_mgr 1b.male#1
> .L38_to_male_mgr 2.male#0b.L38_to_male_mgr 2.male#1.L38_to_male_mgr 1b.male#0
> b.L39_to_male_mgr 1b.male#1.L39_to_male_mgr 2.male#0b.L39_to_male_mgr 2.male#
> 1.L39_to_male_mgr 1b.male#0b.L40_to_male_mgr 1b.male#1.L40_to_male_mgr 2.male
> #0b.L40_to_male_mgr 2.male#1.L40_to_male_mgr 1b.male#0b.L41_to_male_mgr 1b.ma
> le#1.L41_to_male_mgr 2.male#0b.L41_to_male_mgr 2.male#1.L41_to_male_mgr 1b.ma
> le#0b.L42_to_male_mgr 1b.male#1.L42_to_male_mgr 2.male#0b.L42_to_male_mgr 2.m
> ale#1.L42_to_male_mgr 1b.male#0b.L43_to_male_mgr 1b.male#1.L43_to_male_mgr 2.
> male#0b.L43_to_male_mgr 2.male#1.L43_to_male_mgr 1b.male#0b.L44_to_male_mgr 1
> b.male#1.L44_to_male_mgr 2.male#0b.L44_to_male_mgr 2o.male#1o.L44_to_male_mgr
>  1b.male#0.L45_to_male_mgr 2.male#0.L45_to_male_mgr 1b.male#0.L46_to_male_mgr
>  2.male#0.L46_to_male_mgr 1b.male#0.L47_to_male_mgr 2.male#0.L47_to_male_mgr 
> _cons
        - matrix rownames `V' = `indepvars'
        = matrix rownames __000003 = F20_to_male_mgr 1b.male#co.F20_to_male_mgr
>  2.male#c.F20_to_male_mgr F19_to_male_mgr 1b.male#co.F19_to_male_mgr 2.male#c
> .F19_to_male_mgr F18_to_male_mgr 1b.male#co.F18_to_male_mgr 2.male#c.F18_to_m
> ale_mgr F17_to_male_mgr 1b.male#co.F17_to_male_mgr 2.male#c.F17_to_male_mgr F
> 16_to_male_mgr 1b.male#co.F16_to_male_mgr 2.male#c.F16_to_male_mgr F15_to_mal
> e_mgr 1b.male#co.F15_to_male_mgr 2.male#c.F15_to_male_mgr F14_to_male_mgr 1b.
> male#co.F14_to_male_mgr 2.male#c.F14_to_male_mgr F13_to_male_mgr 1b.male#co.F
> 13_to_male_mgr 2.male#c.F13_to_male_mgr F12_to_male_mgr 1b.male#co.F12_to_mal
> e_mgr 2.male#c.F12_to_male_mgr F11_to_male_mgr 1b.male#co.F11_to_male_mgr 2.m
> ale#c.F11_to_male_mgr F10_to_male_mgr 1b.male#co.F10_to_male_mgr 2.male#c.F10
> _to_male_mgr F9_to_male_mgr 1b.male#co.F9_to_male_mgr 2.male#c.F9_to_male_mgr
>  F8_to_male_mgr 1b.male#co.F8_to_male_mgr 2.male#c.F8_to_male_mgr F7_to_male_
> mgr 1b.male#co.F7_to_male_mgr 2.male#c.F7_to_male_mgr F6_to_male_mgr 1b.male#
> co.F6_to_male_mgr 2.male#c.F6_to_male_mgr F5_to_male_mgr 1b.male#co.F5_to_mal
> e_mgr 2.male#c.F5_to_male_mgr F4_to_male_mgr 1b.male#co.F4_to_male_mgr 2.male
> #c.F4_to_male_mgr F3_to_male_mgr 1b.male#co.F3_to_male_mgr 2.male#c.F3_to_mal
> e_mgr F2_to_male_mgr 1b.male#co.F2_to_male_mgr 2.male#c.F2_to_male_mgr F1_to_
> male_mgr 1b.male#co.F1_to_male_mgr 2.male#c.F1_to_male_mgr L0_to_male_mgr 1b.
> male#co.L0_to_male_mgr 2.male#c.L0_to_male_mgr L1_to_male_mgr 1b.male#co.L1_t
> o_male_mgr 2.male#c.L1_to_male_mgr L2_to_male_mgr 1b.male#co.L2_to_male_mgr 2
> .male#c.L2_to_male_mgr L3_to_male_mgr 1b.male#co.L3_to_male_mgr 2.male#c.L3_t
> o_male_mgr L4_to_male_mgr 1b.male#co.L4_to_male_mgr 2.male#c.L4_to_male_mgr L
> 5_to_male_mgr 1b.male#co.L5_to_male_mgr 2.male#c.L5_to_male_mgr L6_to_male_mg
> r 1b.male#co.L6_to_male_mgr 2.male#c.L6_to_male_mgr L7_to_male_mgr 1b.male#co
> .L7_to_male_mgr 2.male#c.L7_to_male_mgr L8_to_male_mgr 1b.male#co.L8_to_male_
> mgr 2.male#c.L8_to_male_mgr L9_to_male_mgr 1b.male#co.L9_to_male_mgr 2.male#c
> .L9_to_male_mgr L10_to_male_mgr 1b.male#co.L10_to_male_mgr 2.male#c.L10_to_ma
> le_mgr L11_to_male_mgr 1b.male#co.L11_to_male_mgr 2.male#c.L11_to_male_mgr L1
> 2_to_male_mgr 1b.male#co.L12_to_male_mgr 2.male#c.L12_to_male_mgr L13_to_male
> _mgr 1b.male#co.L13_to_male_mgr 2.male#c.L13_to_male_mgr L14_to_male_mgr 1b.m
> ale#co.L14_to_male_mgr 2.male#c.L14_to_male_mgr L15_to_male_mgr 1b.male#co.L1
> 5_to_male_mgr 2.male#c.L15_to_male_mgr L16_to_male_mgr 1b.male#co.L16_to_male
> _mgr 2.male#c.L16_to_male_mgr L17_to_male_mgr 1b.male#co.L17_to_male_mgr 2.ma
> le#c.L17_to_male_mgr L18_to_male_mgr 1b.male#co.L18_to_male_mgr 2.male#c.L18_
> to_male_mgr L19_to_male_mgr 1b.male#co.L19_to_male_mgr 2.male#c.L19_to_male_m
> gr L20_to_male_mgr 1b.male#co.L20_to_male_mgr 2.male#c.L20_to_male_mgr L21_to
> _male_mgr 1b.male#co.L21_to_male_mgr 2.male#c.L21_to_male_mgr L22_to_male_mgr
>  1b.male#co.L22_to_male_mgr 2.male#c.L22_to_male_mgr L23_to_male_mgr 1b.male#
> co.L23_to_male_mgr 2.male#c.L23_to_male_mgr L24_to_male_mgr 1b.male#co.L24_to
> _male_mgr 2.male#c.L24_to_male_mgr L25_to_male_mgr 1b.male#co.L25_to_male_mgr
>  2.male#c.L25_to_male_mgr L26_to_male_mgr 1b.male#co.L26_to_male_mgr 2.male#c
> .L26_to_male_mgr L27_to_male_mgr 1b.male#co.L27_to_male_mgr 2.male#c.L27_to_m
> ale_mgr L28_to_male_mgr 1b.male#co.L28_to_male_mgr 2.male#c.L28_to_male_mgr L
> 29_to_male_mgr 1b.male#co.L29_to_male_mgr 2.male#c.L29_to_male_mgr L30_to_mal
> e_mgr 1b.male#co.L30_to_male_mgr 2.male#c.L30_to_male_mgr 1b.male#0.F47_to_ma
> le_mgr 2.male#0.F47_to_male_mgr 1b.male#0.F46_to_male_mgr 2.male#0.F46_to_mal
> e_mgr 1b.male#0b.F45_to_male_mgr 1b.male#1.F45_to_male_mgr 2.male#0b.F45_to_m
> ale_mgr 2o.male#1o.F45_to_male_mgr 1b.male#0b.F44_to_male_mgr 1b.male#1.F44_t
> o_male_mgr 2.male#0b.F44_to_male_mgr 2o.male#1o.F44_to_male_mgr 1b.male#0b.F4
> 3_to_male_mgr 1b.male#1.F43_to_male_mgr 2.male#0b.F43_to_male_mgr 2o.male#1o.
> F43_to_male_mgr 1b.male#0b.F42_to_male_mgr 1b.male#1.F42_to_male_mgr 2.male#0
> b.F42_to_male_mgr 2o.male#1o.F42_to_male_mgr 1b.male#0b.F41_to_male_mgr 1b.ma
> le#1.F41_to_male_mgr 2.male#0b.F41_to_male_mgr 2o.male#1o.F41_to_male_mgr 1b.
> male#0b.F40_to_male_mgr 1b.male#1.F40_to_male_mgr 2.male#0b.F40_to_male_mgr 2
> o.male#1o.F40_to_male_mgr 1b.male#0b.F39_to_male_mgr 1b.male#1.F39_to_male_mg
> r 2.male#0b.F39_to_male_mgr 2o.male#1o.F39_to_male_mgr 1b.male#0b.F38_to_male
> _mgr 1b.male#1.F38_to_male_mgr 2.male#0b.F38_to_male_mgr 2o.male#1o.F38_to_ma
> le_mgr 1b.male#0b.F37_to_male_mgr 1b.male#1.F37_to_male_mgr 2.male#0b.F37_to_
> male_mgr 2o.male#1o.F37_to_male_mgr 1b.male#0b.F36_to_male_mgr 1b.male#1.F36_
> to_male_mgr 2.male#0b.F36_to_male_mgr 2.male#1.F36_to_male_mgr 1b.male#0b.F35
> _to_male_mgr 1b.male#1.F35_to_male_mgr 2.male#0b.F35_to_male_mgr 2.male#1.F35
> _to_male_mgr 1b.male#0b.F34_to_male_mgr 1b.male#1.F34_to_male_mgr 2.male#0b.F
> 34_to_male_mgr 2.male#1.F34_to_male_mgr 1b.male#0b.F33_to_male_mgr 1b.male#1.
> F33_to_male_mgr 2.male#0b.F33_to_male_mgr 2.male#1.F33_to_male_mgr 1b.male#0b
> .F32_to_male_mgr 1b.male#1.F32_to_male_mgr 2.male#0b.F32_to_male_mgr 2.male#1
> .F32_to_male_mgr 1b.male#0b.F31_to_male_mgr 1b.male#1.F31_to_male_mgr 2.male#
> 0b.F31_to_male_mgr 2.male#1.F31_to_male_mgr 1b.male#0b.F30_to_male_mgr 1b.mal
> e#1.F30_to_male_mgr 2.male#0b.F30_to_male_mgr 2.male#1.F30_to_male_mgr 1b.mal
> e#0b.F29_to_male_mgr 1b.male#1.F29_to_male_mgr 2.male#0b.F29_to_male_mgr 2.ma
> le#1.F29_to_male_mgr 1b.male#0b.F28_to_male_mgr 1b.male#1.F28_to_male_mgr 2.m
> ale#0b.F28_to_male_mgr 2.male#1.F28_to_male_mgr 1b.male#0b.F27_to_male_mgr 1b
> .male#1.F27_to_male_mgr 2.male#0b.F27_to_male_mgr 2.male#1.F27_to_male_mgr 1b
> .male#0b.F26_to_male_mgr 1b.male#1.F26_to_male_mgr 2.male#0b.F26_to_male_mgr 
> 2.male#1.F26_to_male_mgr 1b.male#0b.F25_to_male_mgr 1b.male#1.F25_to_male_mgr
>  2.male#0b.F25_to_male_mgr 2.male#1.F25_to_male_mgr 1b.male#0b.F24_to_male_mg
> r 1b.male#1.F24_to_male_mgr 2.male#0b.F24_to_male_mgr 2.male#1.F24_to_male_mg
> r 1b.male#0b.F23_to_male_mgr 1b.male#1.F23_to_male_mgr 2.male#0b.F23_to_male_
> mgr 2.male#1.F23_to_male_mgr 1b.male#0b.F22_to_male_mgr 1b.male#1.F22_to_male
> _mgr 2.male#0b.F22_to_male_mgr 2.male#1.F22_to_male_mgr 1b.male#0b.F21_to_mal
> e_mgr 1b.male#1.F21_to_male_mgr 2.male#0b.F21_to_male_mgr 2.male#1.F21_to_mal
> e_mgr 1b.male#0b.L31_to_male_mgr 1b.male#1.L31_to_male_mgr 2.male#0b.L31_to_m
> ale_mgr 2.male#1.L31_to_male_mgr 1b.male#0b.L32_to_male_mgr 1b.male#1.L32_to_
> male_mgr 2.male#0b.L32_to_male_mgr 2.male#1.L32_to_male_mgr 1b.male#0b.L33_to
> _male_mgr 1b.male#1.L33_to_male_mgr 2.male#0b.L33_to_male_mgr 2.male#1.L33_to
> _male_mgr 1b.male#0b.L34_to_male_mgr 1b.male#1.L34_to_male_mgr 2.male#0b.L34_
> to_male_mgr 2.male#1.L34_to_male_mgr 1b.male#0b.L35_to_male_mgr 1b.male#1.L35
> _to_male_mgr 2.male#0b.L35_to_male_mgr 2.male#1.L35_to_male_mgr 1b.male#0b.L3
> 6_to_male_mgr 1b.male#1.L36_to_male_mgr 2.male#0b.L36_to_male_mgr 2.male#1.L3
> 6_to_male_mgr 1b.male#0b.L37_to_male_mgr 1b.male#1.L37_to_male_mgr 2.male#0b.
> L37_to_male_mgr 2.male#1.L37_to_male_mgr 1b.male#0b.L38_to_male_mgr 1b.male#1
> .L38_to_male_mgr 2.male#0b.L38_to_male_mgr 2.male#1.L38_to_male_mgr 1b.male#0
> b.L39_to_male_mgr 1b.male#1.L39_to_male_mgr 2.male#0b.L39_to_male_mgr 2.male#
> 1.L39_to_male_mgr 1b.male#0b.L40_to_male_mgr 1b.male#1.L40_to_male_mgr 2.male
> #0b.L40_to_male_mgr 2.male#1.L40_to_male_mgr 1b.male#0b.L41_to_male_mgr 1b.ma
> le#1.L41_to_male_mgr 2.male#0b.L41_to_male_mgr 2.male#1.L41_to_male_mgr 1b.ma
> le#0b.L42_to_male_mgr 1b.male#1.L42_to_male_mgr 2.male#0b.L42_to_male_mgr 2.m
> ale#1.L42_to_male_mgr 1b.male#0b.L43_to_male_mgr 1b.male#1.L43_to_male_mgr 2.
> male#0b.L43_to_male_mgr 2.male#1.L43_to_male_mgr 1b.male#0b.L44_to_male_mgr 1
> b.male#1.L44_to_male_mgr 2.male#0b.L44_to_male_mgr 2o.male#1o.L44_to_male_mgr
>  1b.male#0.L45_to_male_mgr 2.male#0.L45_to_male_mgr 1b.male#0.L46_to_male_mgr
>  2.male#0.L46_to_male_mgr 1b.male#0.L47_to_male_mgr 2.male#0.L47_to_male_mgr 
> _cons
        - _ms_findomitted `b' `V'
        = _ms_findomitted __000002 __000003
        - ereturn post `b' `V', `esample' buildfvinfo depname(`depvar')
        = ereturn post __000002 __000003, esample(__000001) buildfvinfo depname
> ()
        - }
        - else {
          ereturn post, `esample' buildfvinfo depname(`depvar')
          }
        - ereturn scalar N = `N'
        = ereturn scalar N = __000004
        - ereturn scalar rank = `rank'
        = ereturn scalar rank = __000005
        - ereturn scalar df_r = `df_r'
        = ereturn scalar df_r = __000006
        - ereturn local cmd "reghdfe"
        - mata: HDFE.post()
        - cap conf matrix reghdfe_statsmatrix
        - if (!c(rc)) {
          ereturn matrix summarize = reghdfe_statsmatrix
          mata: st_local("summarize_quietly", strofreal(HDFE.summarize_quietly)
> )
          ereturn scalar summarize_quietly = `summarize_quietly'
          }
        -------------------------------------------- end reghdfe.RegressOLS ---
      - if (`timeit') timer off 24
      = if (0) timer off 24
      - if (`timeit') timer on 29
      = if (0) timer on 29
      - reghdfe, store_alphas
        ----------------------------------------------------- begin reghdfe ---
        - cap syntax, version old
        - if !c(rc) {
          reghdfe_old, version
          exit
          }
        - cap syntax anything(everything) [fw aw pw/], [*] old
        - if !c(rc) {
          di as error "(running historical version of reghdfe)"
          if ("`weight'"!="") local weightexp [`weight'=`exp']
          reghdfe_old `anything' `weightexp', `options'
          exit
          }
        - cap syntax, [*]
        - if inlist("`options'", "check", "compile", "reload", "update", "versi
> on", "requirements", "store_alphas") {
        = if inlist("store_alphas", "check", "compile", "reload", "update", "ve
> rsion", "requirements", "store_alphas") {
        - if ("`options'"=="compile") loc args force
        = if ("store_alphas"=="compile") loc args force
        - if ("`options'"=="check") loc options compile
        = if ("store_alphas"=="check") loc options compile
        - if ("`options'"=="update") {
        = if ("store_alphas"=="update") {
          loc args 1
          loc options reload
          }
        - loc subcmd = proper("`options'")
        = loc subcmd = proper("store_alphas")
        - `subcmd' `args'
        = Store_Alphas 
          -------------------------------------- begin reghdfe.Store_Alphas ---
          - mata: st_local("save_any_fe", strofreal(HDFE.save_any_fe))
          - assert inlist(`save_any_fe', 0, 1)
          = assert inlist(0, 0, 1)
          - if (`save_any_fe') {
          = if (0) {
            _assert e(depvar) != "", msg("e(depvar) is empty")
            _assert e(resid) != "", msg("e(resid) is empty")
            fvrevar `e(depvar)', list
            confirm numeric var `e(resid)', exact
            tempvar d
            if (e(rank)) {
            qui _predict double `d' if e(sample), xb
            }
            else if (e(report_constant)) {
            gen double `d' = _b[_cons] if e(sample)
            }
            else {
            gen double `d' = 0 if e(sample)
            }
            qui replace `d' = `e(depvar)' - `d' - `e(resid)' if e(sample)
            mata: HDFE.store_alphas("`d'")
            drop `d'
            cap drop __temp_reghdfe_resid__
            if (!c(rc)) ereturn local resid
            }
          ---------------------------------------- end reghdfe.Store_Alphas ---
        - }
        - else if replay() {
          Replay `0'
          }
        - else {
          Cleanup 0
          ms_get_version ftools, min_version("2.36.1")
          cap noi Estimate `0'
          Cleanup `c(rc)'
          }
        ------------------------------------------------------- end reghdfe ---
      - if (`timeit') timer off 29
      = if (0) timer off 29
      - mata: st_local("diopts", HDFE.diopts)
      - Replay, `diopts'
      = Replay, 
        ---------------------------------------------- begin reghdfe.Replay ---
        - syntax [, noHEader noTABle noFOOTnote *]
        - if `"`e(cmd)'"' != "reghdfe" {
        = if `"reghdfe"' != "reghdfe" {
          error 301
          }
        - _get_diopts options, `options'
        = _get_diopts options, 
          ----------------------------------------------- begin _get_diopts ---
          - version 11
          - syntax namelist(max=2) [, *]
          - gettoken name1 namelist : namelist
          - gettoken name2 namelist : namelist
          - GetDiopts diopts options, `options'
          = GetDiopts diopts options, 
            ----------------------------------- begin _get_diopts.GetDiopts ---
            - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASElevels
>  NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells NO
> OMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sform
> at(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(st
> ring) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV ABB
> REV
            - syntax namelist(max=2) [, `DIOPTS' *]
            = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevels 
> ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells 
> EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(
> string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru
> ) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru)
>  NOABBREV ABBREV *]
            - opts_exclusive "`allbaselevels' `noallbaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`allbaselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`baselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`emptycells' `noemptycells'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`fvlabel' `nofvlabel'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`omitted' `noomitted'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`lstretch' `nolstretch'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`cnsreport' `fullcnsreport'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`coeflegend' `selegend'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local K : list sizeof namelist
            - gettoken c_diopts c_opts : namelist
            - opts_exclusive "`coding' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`versus' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`abbrev' `noabbrev'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local allbaselevels `allbaselevels' `noallbaselevels'
            = local allbaselevels  
            - local baselevels `baselevels' `nobaselevels'
            = local baselevels  
            - local emptycells `emptycells' `noemptycells'
            = local emptycells  
            - local omitted `omitted' `noomitted'
            = local omitted  
            - local lstretch `lstretch' `nolstretch'
            = local lstretch  
            - local fvlabel `fvlabel' `nofvlabel'
            = local fvlabel  
            - local abbrev `abbrev' `noabbrev'
            = local abbrev  
            - if "`allbaselevels'`baselevels'" == "" {
            = if "" == "" {
            - if c(showbaselevels) == "all" {
              local allbaselevels allbaselevels
              }
            - else if c(showbaselevels) == "on" {
              local baselevels baselevels
              }
            - }
            - if "`emptycells'" == "" {
            = if "" == "" {
            - if c(showemptycells) == "off" {
              local emptycells noemptycells
              }
            - }
            - if "`omitted'" == "" {
            = if "" == "" {
            - if c(showomitted) == "off" {
              local omitted noomitted
              }
            - }
            - if "`lstretch'" == "" {
            = if "" == "" {
            - if c(lstretch) == "off" {
              local lstretch nolstretch
              }
            - }
            - if `:length local cformat' {
            = if 0 {
              confirm numeric format `cformat'
              if fmtwidth(`"`cformat'"') > 9 {
              local cformat "%9.0g"
              di "{txt}note: invalid cformat(), using default"
              }
              sreturn local cformat `"`cformat'"'
              local cformat `"cformat(`cformat')"'
              }
            - if `:length local sformat' {
            = if 0 {
              confirm numeric format `sformat'
              if fmtwidth(`"`sformat'"') > 8 {
              local sformat "%8.2f"
              di "{txt}note: invalid sformat(), using default"
              }
              sreturn local sformat `"`sformat'"'
              local sformat `"sformat(`sformat')"'
              }
            - if `:length local pformat' {
            = if 0 {
              confirm numeric format `pformat'
              if fmtwidth(`"`pformat'"') > 5 {
              local pformat "%5.3f"
              di "{txt}note: invalid pformat(), using default"
              }
              sreturn local pformat `"`pformat'"'
              local pformat `"pformat(`pformat')"'
              }
            - if `K' == 1 & `:length local options' {
            = if 2 == 1 & 0 {
              syntax namelist(max=2) [, `DIOPTS']
              }
            - if reldif(`level', c(level)) > 1e-3 {
            = if reldif(95, c(level)) > 1e-3 {
              local levelopt level(`level')
              }
            - Wrapon , `fvwrapon'
            = Wrapon , 
              ------------------------------------ begin _get_diopts.Wrapon ---
              - capture syntax [, WOrd WIdth]
              - if c(rc) {
                di as err "invalid fvwrapon() option;"
                syntax [, WOrd WIdth]
                exit 198
                }
              - opts_exclusive "`word' `width'" fvwrapon
              = opts_exclusive " " fvwrapon
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local fvwrapon `word' `width'
              = local fvwrapon  
              - if `:length local fvwrapon' {
              = if 0 {
                c_local fvwrapon fvwrapon(`fvwrapon')
                }
              -------------------------------------- end _get_diopts.Wrapon ---
            - if "`fvwrap'" != "" {
            = if "" != "" {
              FVWrap, `fvwrap'
              }
            - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `baseleve
> ls' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflegend
> ' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvwra
> p' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
            = c_local diopts                         
            - if `K' == 2 {
            = if 2 == 2 {
            - c_local `c_opts' `"`options'"'
            = c_local  options `""'
            - }
            - sreturn local coding `coding'
            = sreturn local coding 
            - sreturn local versus `versus'
            = sreturn local versus 
            - sreturn local compare `compare'
            = sreturn local compare 
            - sreturn local level `level'
            = sreturn local level 95
            ------------------------------------- end _get_diopts.GetDiopts ---
          - c_local `name1' `"`diopts'"'
          = c_local options `""'
          - local snames : s(macros)
          - foreach sname of local snames {
          - local S_`sname' = s(`sname')
          = local S_level = s(level)
          - }
          - local S_`sname' = s(`sname')
          = local S_fvops = s(fvops)
          - }
          - sreturn clear
          - GetDiopts DEFAULT
            ----------------------------------- begin _get_diopts.GetDiopts ---
            - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASElevels
>  NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells NO
> OMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sform
> at(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(st
> ring) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV ABB
> REV
            - syntax namelist(max=2) [, `DIOPTS' *]
            = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevels 
> ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells 
> EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(
> string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru
> ) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru)
>  NOABBREV ABBREV *]
            - opts_exclusive "`allbaselevels' `noallbaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`allbaselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`baselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`emptycells' `noemptycells'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`fvlabel' `nofvlabel'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`omitted' `noomitted'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`lstretch' `nolstretch'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`cnsreport' `fullcnsreport'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`coeflegend' `selegend'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local K : list sizeof namelist
            - gettoken c_diopts c_opts : namelist
            - opts_exclusive "`coding' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`versus' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`abbrev' `noabbrev'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local allbaselevels `allbaselevels' `noallbaselevels'
            = local allbaselevels  
            - local baselevels `baselevels' `nobaselevels'
            = local baselevels  
            - local emptycells `emptycells' `noemptycells'
            = local emptycells  
            - local omitted `omitted' `noomitted'
            = local omitted  
            - local lstretch `lstretch' `nolstretch'
            = local lstretch  
            - local fvlabel `fvlabel' `nofvlabel'
            = local fvlabel  
            - local abbrev `abbrev' `noabbrev'
            = local abbrev  
            - if "`allbaselevels'`baselevels'" == "" {
            = if "" == "" {
            - if c(showbaselevels) == "all" {
              local allbaselevels allbaselevels
              }
            - else if c(showbaselevels) == "on" {
              local baselevels baselevels
              }
            - }
            - if "`emptycells'" == "" {
            = if "" == "" {
            - if c(showemptycells) == "off" {
              local emptycells noemptycells
              }
            - }
            - if "`omitted'" == "" {
            = if "" == "" {
            - if c(showomitted) == "off" {
              local omitted noomitted
              }
            - }
            - if "`lstretch'" == "" {
            = if "" == "" {
            - if c(lstretch) == "off" {
              local lstretch nolstretch
              }
            - }
            - if `:length local cformat' {
            = if 0 {
              confirm numeric format `cformat'
              if fmtwidth(`"`cformat'"') > 9 {
              local cformat "%9.0g"
              di "{txt}note: invalid cformat(), using default"
              }
              sreturn local cformat `"`cformat'"'
              local cformat `"cformat(`cformat')"'
              }
            - if `:length local sformat' {
            = if 0 {
              confirm numeric format `sformat'
              if fmtwidth(`"`sformat'"') > 8 {
              local sformat "%8.2f"
              di "{txt}note: invalid sformat(), using default"
              }
              sreturn local sformat `"`sformat'"'
              local sformat `"sformat(`sformat')"'
              }
            - if `:length local pformat' {
            = if 0 {
              confirm numeric format `pformat'
              if fmtwidth(`"`pformat'"') > 5 {
              local pformat "%5.3f"
              di "{txt}note: invalid pformat(), using default"
              }
              sreturn local pformat `"`pformat'"'
              local pformat `"pformat(`pformat')"'
              }
            - if `K' == 1 & `:length local options' {
            = if 1 == 1 & 0 {
              syntax namelist(max=2) [, `DIOPTS']
              }
            - if reldif(`level', c(level)) > 1e-3 {
            = if reldif(95, c(level)) > 1e-3 {
              local levelopt level(`level')
              }
            - Wrapon , `fvwrapon'
            = Wrapon , 
              ------------------------------------ begin _get_diopts.Wrapon ---
              - capture syntax [, WOrd WIdth]
              - if c(rc) {
                di as err "invalid fvwrapon() option;"
                syntax [, WOrd WIdth]
                exit 198
                }
              - opts_exclusive "`word' `width'" fvwrapon
              = opts_exclusive " " fvwrapon
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local fvwrapon `word' `width'
              = local fvwrapon  
              - if `:length local fvwrapon' {
              = if 0 {
                c_local fvwrapon fvwrapon(`fvwrapon')
                }
              -------------------------------------- end _get_diopts.Wrapon ---
            - if "`fvwrap'" != "" {
            = if "" != "" {
              FVWrap, `fvwrap'
              }
            - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `baseleve
> ls' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflegend
> ' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvwra
> p' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
            = c_local DEFAULT                         
            - if `K' == 2 {
            = if 1 == 2 {
              c_local `c_opts' `"`options'"'
              }
            - sreturn local coding `coding'
            = sreturn local coding 
            - sreturn local versus `versus'
            = sreturn local versus 
            - sreturn local compare `compare'
            = sreturn local compare 
            - sreturn local level `level'
            = sreturn local level 95
            ------------------------------------- end _get_diopts.GetDiopts ---
          - if `"`name2'"' == "" {
          = if `""' == "" {
          - GetDiopts DUPS, `options'
          = GetDiopts DUPS, 
            ----------------------------------- begin _get_diopts.GetDiopts ---
            - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASElevels
>  NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells NO
> OMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sform
> at(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(st
> ring) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV ABB
> REV
            - syntax namelist(max=2) [, `DIOPTS' *]
            = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevels 
> ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells 
> EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(
> string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru
> ) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru)
>  NOABBREV ABBREV *]
            - opts_exclusive "`allbaselevels' `noallbaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`allbaselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`baselevels' `nobaselevels'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`emptycells' `noemptycells'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`fvlabel' `nofvlabel'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`omitted' `noomitted'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`lstretch' `nolstretch'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`cnsreport' `fullcnsreport'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`coeflegend' `selegend'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local K : list sizeof namelist
            - gettoken c_diopts c_opts : namelist
            - opts_exclusive "`coding' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`versus' `compare'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - opts_exclusive "`abbrev' `noabbrev'"
            = opts_exclusive " "
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local allbaselevels `allbaselevels' `noallbaselevels'
            = local allbaselevels  
            - local baselevels `baselevels' `nobaselevels'
            = local baselevels  
            - local emptycells `emptycells' `noemptycells'
            = local emptycells  
            - local omitted `omitted' `noomitted'
            = local omitted  
            - local lstretch `lstretch' `nolstretch'
            = local lstretch  
            - local fvlabel `fvlabel' `nofvlabel'
            = local fvlabel  
            - local abbrev `abbrev' `noabbrev'
            = local abbrev  
            - if "`allbaselevels'`baselevels'" == "" {
            = if "" == "" {
            - if c(showbaselevels) == "all" {
              local allbaselevels allbaselevels
              }
            - else if c(showbaselevels) == "on" {
              local baselevels baselevels
              }
            - }
            - if "`emptycells'" == "" {
            = if "" == "" {
            - if c(showemptycells) == "off" {
              local emptycells noemptycells
              }
            - }
            - if "`omitted'" == "" {
            = if "" == "" {
            - if c(showomitted) == "off" {
              local omitted noomitted
              }
            - }
            - if "`lstretch'" == "" {
            = if "" == "" {
            - if c(lstretch) == "off" {
              local lstretch nolstretch
              }
            - }
            - if `:length local cformat' {
            = if 0 {
              confirm numeric format `cformat'
              if fmtwidth(`"`cformat'"') > 9 {
              local cformat "%9.0g"
              di "{txt}note: invalid cformat(), using default"
              }
              sreturn local cformat `"`cformat'"'
              local cformat `"cformat(`cformat')"'
              }
            - if `:length local sformat' {
            = if 0 {
              confirm numeric format `sformat'
              if fmtwidth(`"`sformat'"') > 8 {
              local sformat "%8.2f"
              di "{txt}note: invalid sformat(), using default"
              }
              sreturn local sformat `"`sformat'"'
              local sformat `"sformat(`sformat')"'
              }
            - if `:length local pformat' {
            = if 0 {
              confirm numeric format `pformat'
              if fmtwidth(`"`pformat'"') > 5 {
              local pformat "%5.3f"
              di "{txt}note: invalid pformat(), using default"
              }
              sreturn local pformat `"`pformat'"'
              local pformat `"pformat(`pformat')"'
              }
            - if `K' == 1 & `:length local options' {
            = if 1 == 1 & 0 {
              syntax namelist(max=2) [, `DIOPTS']
              }
            - if reldif(`level', c(level)) > 1e-3 {
            = if reldif(95, c(level)) > 1e-3 {
              local levelopt level(`level')
              }
            - Wrapon , `fvwrapon'
            = Wrapon , 
              ------------------------------------ begin _get_diopts.Wrapon ---
              - capture syntax [, WOrd WIdth]
              - if c(rc) {
                di as err "invalid fvwrapon() option;"
                syntax [, WOrd WIdth]
                exit 198
                }
              - opts_exclusive "`word' `width'" fvwrapon
              = opts_exclusive " " fvwrapon
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local fvwrapon `word' `width'
              = local fvwrapon  
              - if `:length local fvwrapon' {
              = if 0 {
                c_local fvwrapon fvwrapon(`fvwrapon')
                }
              -------------------------------------- end _get_diopts.Wrapon ---
            - if "`fvwrap'" != "" {
            = if "" != "" {
              FVWrap, `fvwrap'
              }
            - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `baseleve
> ls' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflegend
> ' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvwra
> p' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
            = c_local DUPS                         
            - if `K' == 2 {
            = if 1 == 2 {
              c_local `c_opts' `"`options'"'
              }
            - sreturn local coding `coding'
            = sreturn local coding 
            - sreturn local versus `versus'
            = sreturn local versus 
            - sreturn local compare `compare'
            = sreturn local compare 
            - sreturn local level `level'
            = sreturn local level 95
            ------------------------------------- end _get_diopts.GetDiopts ---
          - }
          - else {
            GetDiopts DUPS options, `options'
            c_local `name2' `"`options'"'
            }
          - local DUPS : list DUPS - DEFAULT
          - gettoken DUPS : DUPS
          - if `"`DUPS'"' != "" {
          = if `""' != "" {
            if (strpos(`"`DUPS'"', "(")) {
            gettoken DUPS : DUPS, parse("(")
            local DUPS `"`DUPS'()"'
            }
            di as err "duplicate {bf:`DUPS'} option not allowed"
            exit 198
            }
          - sreturn clear
          - foreach sname of local snames {
          - sreturn local `sname' = `"`S_`sname''"'
          = sreturn local level = `"95"'
          - }
          - sreturn local `sname' = `"`S_`sname''"'
          = sreturn local fvops = `"true"'
          - }
          ------------------------------------------------- end _get_diopts ---
        - if ("`header'" == "") {
        = if ("" == "") {
        - reghdfe_header
          -------------------------------------------- begin reghdfe_header ---
          - if !c(noisily) exit
          - tempname left right
          - .`left' = {}
          = .__000007 = {}
          - .`right' = {}
          = .__000008 = {}
          - local width 78
          - local colwidths 1 30 51 67
          - local i 0
          - foreach c of local colwidths {
          - local ++i
          - local c`i' `c'
          = local c1 1
          - local C`i' _col(`c')
          = local C1 _col(1)
          - }
          - local ++i
          - local c`i' `c'
          = local c2 30
          - local C`i' _col(`c')
          = local C2 _col(30)
          - }
          - local ++i
          - local c`i' `c'
          = local c3 51
          - local C`i' _col(`c')
          = local C3 _col(51)
          - }
          - local ++i
          - local c`i' `c'
          = local c4 67
          - local C`i' _col(`c')
          = local C4 _col(67)
          - }
          - local c2wfmt 10
          - local c4wfmt 10
          - local max_len_title = `c3' - 2
          = local max_len_title = 51 - 2
          - local c4wfmt1 = `c4wfmt' + 1
          = local c4wfmt1 = 10 + 1
          - local title `"`e(title)'"'
          = local title `"HDFE Linear regression"'
          - local title2 `"`e(title2)'"'
          = local title2 `"Absorbing 1 HDFE group"'
          - local title3 `"`e(title3)'"'
          = local title3 `""'
          - local title4 `"`e(title4)'"'
          = local title4 `""'
          - local title5 `"`e(title5)'"'
          = local title5 `""'
          - .`right'.Arrpush `C3' "Number of obs" `C4' "= " as res %`c4wfmt'.0f
> c e(N)
          = .__000008.Arrpush _col(51) "Number of obs" _col(67) "= " as res %10
> .0fc e(N)
          - if `"`e(chi2)'"' != "" | "`e(df_r)'" == "" {
          = if `""' != "" | "11766" == "" {
            Chi2test `right' `C3' `C4' `c4wfmt'
            }
          - else {
          - Ftest `right' `C3' `C4' `c4wfmt'
          = Ftest __000008 _col(51) _col(67) 10
            ------------------------------------ begin reghdfe_header.Ftest ---
            - args right C3 C4 c4wfmt is_svy
            - local df = e(df_r)
            - if !missing(e(F)) {
            - .`right'.Arrpush `C3' "F(" as res %4.0f e(df_m) as txt "," as res
>  %7.0f `df' as txt ")" `C4' "= " as res %`c4wfmt'.2f e(F)
            = .__000008.Arrpush _col(51) "F(" as res %4.0f e(df_m) as txt "," a
> s res %7.0f 11766 as txt ")" _col(67) "= " as res %10.2f e(F)
            - .`right'.Arrpush `C3' "Prob > F" `C4' "= " as res %`c4wfmt'.4f Ft
> ail(e(df_m),`df',e(F))
            = .__000008.Arrpush _col(51) "Prob > F" _col(67) "= " as res %10.4f
>  Ftail(e(df_m),11766,e(F))
            - }
            - else {
              local dfm_l : di %4.0f e(df_m)
              local dfm_l2: di %7.0f `df'
              local j_robust "{help j_robustsingular##|_new:F(`dfm_l',`dfm_l2')
> }"
              .`right'.Arrpush `C3' "`j_robust'" as txt `C4' "= " as result %`c
> 4wfmt's "."
              .`right'.Arrpush `C3' "Prob > F" `C4' "= " as res %`c4wfmt's "."
              }
            -------------------------------------- end reghdfe_header.Ftest ---
          - }
          - if !missing(e(r2)) {
          - .`right'.Arrpush `C3' "R-squared" `C4' "= " as res %`c4wfmt'.4f e(r
> 2)
          = .__000008.Arrpush _col(51) "R-squared" _col(67) "= " as res %10.4f 
> e(r2)
          - }
          - if !missing(e(r2_a)) {
          - .`right'.Arrpush `C3' "Adj R-squared" `C4' "= " as res %`c4wfmt'.4f
>  e(r2_a)
          = .__000008.Arrpush _col(51) "Adj R-squared" _col(67) "= " as res %10
> .4f e(r2_a)
          - }
          - if !missing(e(r2_within)) {
          - .`right'.Arrpush `C3' "Within R-sq." `C4' "= " as res %`c4wfmt'.4f 
> e(r2_within)
          = .__000008.Arrpush _col(51) "Within R-sq." _col(67) "= " as res %10.
> 4f e(r2_within)
          - }
          - if !missing(e(rmse)) {
          - .`right'.Arrpush `C3' "Root MSE" `C4' "= " as res %`c4wfmt'.4f e(rm
> se)
          = .__000008.Arrpush _col(51) "Root MSE" _col(67) "= " as res %10.4f e
> (rmse)
          - }
          - local len_title : length local title
          - forv i=2/5 {
          - if (`"`title`i''"'!="") {
          = if (`"Absorbing 1 HDFE group"'!="") {
          - local len_title = max(`len_title',`:length local title`i'')
          = local len_title = max(22,22)
          - }
          - }
          - if (`"`title`i''"'!="") {
          = if (`""'!="") {
            local len_title = max(`len_title',`:length local title`i'')
            }
          - }
          - if (`"`title`i''"'!="") {
          = if (`""'!="") {
            local len_title = max(`len_title',`:length local title`i'')
            }
          - }
          - if (`"`title`i''"'!="") {
          = if (`""'!="") {
            local len_title = max(`len_title',`:length local title`i'')
            }
          - }
          - if `len_title' < `max_len_title' {
          = if 22 < 49 {
          - .`left'.Arrpush `"`"`title'"'"'
          = .__000007.Arrpush `"`"HDFE Linear regression"'"'
          - local title
          - forv i=2/5 {
          - if `"`title`i''"' != "" {
          = if `"Absorbing 1 HDFE group"' != "" {
          - .`left'.Arrpush `"`"`title`i''"'"'
          = .__000007.Arrpush `"`"Absorbing 1 HDFE group"'"'
          - local title`i'
          = local title2
          - }
          - }
          - if `"`title`i''"' != "" {
          = if `""' != "" {
            .`left'.Arrpush `"`"`title`i''"'"'
            local title`i'
            }
          - }
          - if `"`title`i''"' != "" {
          = if `""' != "" {
            .`left'.Arrpush `"`"`title`i''"'"'
            local title`i'
            }
          - }
          - if `"`title`i''"' != "" {
          = if `""' != "" {
            .`left'.Arrpush `"`"`title`i''"'"'
            local title`i'
            }
          - }
          - .`left'.Arrpush ""
          = .__000007.Arrpush ""
          - }
          - local kr = `.`right'.arrnels'
          = local kr = 7
          - local kl = `.`left'.arrnels'
          = local kl = 3
          - local N_clustervars = e(N_clustervars)
          - if (`N_clustervars'==.) local N_clustervars 0
          = if (.==.) local N_clustervars 0
          - local space = `kr' - `kl' - `N_clustervars'
          = local space = 7 - 3 - 0
          - local clustvar = e(clustvar)
          - forv i=1/`space' {
          = forv i=1/4 {
          - .`left'.Arrpush ""
          = .__000007.Arrpush ""
          - }
          - .`left'.Arrpush ""
          = .__000007.Arrpush ""
          - }
          - .`left'.Arrpush ""
          = .__000007.Arrpush ""
          - }
          - .`left'.Arrpush ""
          = .__000007.Arrpush ""
          - }
          - forval i = 1/`N_clustervars' {
          = forval i = 1/0 {
            gettoken cluster clustvar : clustvar
            local num = e(N_clust`i')
            .`left'.Arrpush `C1' "Number of clusters (" as res "`cluster'" as t
> ext ") " `C2' as text "= " as res %`c2wfmt'.0fc `num'
            }
          - HeaderDisplay `left' `right' `"`title'"' `"`title2'"' `"`title3'"' 
> `"`title4'"' `"`title5'"'
          = HeaderDisplay __000007 __000008 `""' `""' `""' `""' `""'
            ---------------------------- begin reghdfe_header.HeaderDisplay ---
            - args left right title1 title2 title3 title4 title5
            - local nl = `.`left'.arrnels'
            = local nl = 7
            - local nr = `.`right'.arrnels'
            = local nr = 7
            - local K = max(`nl',`nr')
            = local K = max(7,7)
            - di

            - if `"`title1'"' != "" {
            = if `""' != "" {
              di as txt `"`title'"'
              forval i = 2/5 {
              if `"`title`i''"' != "" {
              di as txt `"`title`i''"'
              }
              }
              if `K' {
              di
              }
              }
            - local c _c
            - forval i = 1/`K' {
            = forval i = 1/7 {
            - di as txt `.`left'[`i']' as txt `.`right'[`i']'
            = di as txt `"HDFE Linear regression"' as txt _col(51) "Number of o
> bs" _col(67) "= " as res %10.0fc e(N)
HDFE Linear regression                            Number of obs   =     11,938
            - }
            - di as txt `.`left'[`i']' as txt `.`right'[`i']'
            = di as txt `"Absorbing 1 HDFE group"' as txt _col(51) "F(" as res 
> %4.0f e(df_m) as txt "," as res %7.0f 11766 as txt ")" _col(67) "= " as res %
> 10.2f e(F)
Absorbing 1 HDFE group                            F( 171,  11766) =       7.61
            - }
            - di as txt `.`left'[`i']' as txt `.`right'[`i']'
            = di as txt  as txt _col(51) "Prob > F" _col(67) "= " as res %10.4f
>  Ftail(e(df_m),11766,e(F))
                                                  Prob > F        =     0.0000
            - }
            - di as txt `.`left'[`i']' as txt `.`right'[`i']'
            = di as txt  as txt _col(51) "R-squared" _col(67) "= " as res %10.4
> f e(r2)
                                                  R-squared       =     0.0996
            - }
            - di as txt `.`left'[`i']' as txt `.`right'[`i']'
            = di as txt  as txt _col(51) "Adj R-squared" _col(67) "= " as res %
> 10.4f e(r2_a)
                                                  Adj R-squared   =     0.0865
            - }
            - di as txt `.`left'[`i']' as txt `.`right'[`i']'
            = di as txt  as txt _col(51) "Within R-sq." _col(67) "= " as res %1
> 0.4f e(r2_within)
                                                  Within R-sq.    =     0.0996
            - }
            - di as txt `.`left'[`i']' as txt `.`right'[`i']'
            = di as txt  as txt _col(51) "Root MSE" _col(67) "= " as res %10.4f
>  e(rmse)
                                                  Root MSE        =     2.5122
            - }
            ------------------------------ end reghdfe_header.HeaderDisplay ---
          ---------------------------------------------- end reghdfe_header ---
        - di ""

        - }
        - if ("`table'" == "") {
        = if ("" == "") {
        - _coef_table, `options'
        = _coef_table, 
          ----------------------------------------------- begin _coef_table ---
          - version 11
          - local vv : di "version " string(max(11,_caller())) ", missing:"
          - if (!c(noisily) & c(coeftabresults) == "off") {
            exit
            }
          - _check_eclass
          - syntax [, BMATrix(passthru) VMATrix(passthru) * ]
          - if "`e(b)'" == "" & "`e(V)'" == "" & "`bmatrix'`vmatrix'"=="" {
          = if "matrix" == "" & "matrix" == "" & ""=="" {
            exit
            }
          - local mc_cmds contrast margins pwcompare pwmean
          - local cmd "`e(cmd)'"
          = local cmd "reghdfe"
          - local keepmc : list cmd in mc_cmds
          - if inlist("`cmd'", "pwcompare", "pwmean") {
          = if inlist("reghdfe", "pwcompare", "pwmean") {
            local groups GROUPS
            }
          - if "`cmd'" == "regress" {
          = if "reghdfe" == "regress" {
            local beta Beta
            }
          - if "`cmd'" == "gsem" {
          = if "reghdfe" == "gsem" {
            local fvignore fvignore(int 0)
            local flignore flignore
            }
          - if "`cmd'" == "sem" {
          = if "reghdfe" == "sem" {
            local standardized STANDARDIZED
            local showginvariant SHOWGINVariant
            local nolabel NOLABel LABel NOFVLABel FVLABel
            local nofootnote NOFOOTnote
            local wrap wrap(numlist max=1) fvwrap(passthru)
            }
          - if "`e(mi)'"=="mi" {
          = if ""=="mi" {
            local dftable DFTable
            local dfonly DFONLY
            local noclustreport NOCLUSTReport
            local pisematrix PISEMATrix(string)
            }
          - syntax [, cmdextras BMATrix(string) VMATrix(string) EMATrix(string)
>  DFMATrix(string) EQMATrix(string) ROWMATrix(string) CIMATrix(string) ROWCFor
> mat(string) ROWPFormat(string) ROWSFormat(string) NOROWCI MMATrix(string) MVM
> ATrix(string) MEMATrix(string) BSTDMATrix(string) CNSMATrix(string) PCLASSMAT
> rix(string) Level(cilevel) prefix(name) suffix(name) OFFSETlist(string asis) 
> `beta' `standardized' NOCI NOPValues `dftable' `dfonly' dfci DFPValues dfmiss
> ing `groups' COEFLegend selegend `fvignore' `flignore' `showginvariant' `nola
> bel' `nofootnote' `wrap' sort `pisematrix' depname(string) COEFTitle(string) 
> coeftitle2(string) ptitle(string) cititle(string) NOMCLEGend noCNSReport FULL
> CNSReport `noclustreport' cformat(passthru) sformat(passthru) pformat(passthr
> u) NOFirst First SHOWEQns neq(integer -1) NODIPARM NOTEST SEParator(integer 0
> ) NOSKIP OFFSETONLY1 PLus NOEQCHECK EFORMALL CITYPE(string) eqselect(string) 
> * ]
          = syntax [, cmdextras BMATrix(string) VMATrix(string) EMATrix(string)
>  DFMATrix(string) EQMATrix(string) ROWMATrix(string) CIMATrix(string) ROWCFor
> mat(string) ROWPFormat(string) ROWSFormat(string) NOROWCI MMATrix(string) MVM
> ATrix(string) MEMATrix(string) BSTDMATrix(string) CNSMATrix(string) PCLASSMAT
> rix(string) Level(cilevel) prefix(name) suffix(name) OFFSETlist(string asis) 
>   NOCI NOPValues   dfci DFPValues dfmissing  COEFLegend selegend       sort  
> depname(string) COEFTitle(string) coeftitle2(string) ptitle(string) cititle(s
> tring) NOMCLEGend noCNSReport FULLCNSReport  cformat(passthru) sformat(passth
> ru) pformat(passthru) NOFirst First SHOWEQns neq(integer -1) NODIPARM NOTEST 
> SEParator(integer 0) NOSKIP OFFSETONLY1 PLus NOEQCHECK EFORMALL CITYPE(string
> ) eqselect(string) * ]
          - if "`wrap'" != "" {
          = if "" != "" {
            opts_exclusive `"wrap(`wrap') `fvwrap'"'
            local fvwrap fvwrap(`wrap')
            }
          - if "`nolabel'`label'" != "" {
          = if "" != "" {
            opts_exclusive "`nolabel' `label'"
            opts_exclusive "`nofvlabel' `fvlabel'"
            opts_exclusive "`nolabel' `fvlabel'"
            opts_exclusive "`nofvlabel' `label'"
            if "`nolabel'" != "" {
            local fvlabel nofvlabel
            }
            else {
            local fvlabel fvlabel
            }
            }
          - else local fvlabel `nofvlabel' `fvlabel'
          = else local fvlabel  
          - local type `coeflegend' `selegend'
          = local type  
          - opts_exclusive "`type' `standardized'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - if (`"`rowmatrix'"'=="" & "`norowci'"!="") {
          = if (`""'=="" & ""!="") {
            di as err "{bf:norowci} requires {bf:rowmatrix()}"
            exit 198
            }
          - if ("`dftable'"!="" & "`norowci'"!="") {
          = if (""!="" & ""!="") {
            di as err "{bf:norowci} is not allowed with {bf:`dftable'}"
            exit 198
            }
          - if ("`dfonly'"!="" & "`norowci'"!="") {
          = if (""!="" & ""!="") {
            di as err "{bf:norowci} is not allowed with {bf:`dfonly'}"
            exit 198
            }
          - if ("`noci'"!="" & "`norowci'"!="") {
          = if (""!="" & ""!="") {
            di as err "{bf:norowci} is not allowed with {bf:`noci'}"
            exit 198
            }
          - if "`standardized'" != "" & "`bstdmatrix'" != "" {
          = if "" != "" & "" != "" {
            local beta beta
            local standardized
            }
          - if `:length local type' == 0 {
          = if 0 == 0 {
          - local type `beta' `noci' `nopvalues' `dftable' `dfonly' `groups' `d
> fci' `dfpvalues'
          = local type        
          - }
          - opts_exclusive "`type'"
          = opts_exclusive ""
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts 
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`first' `nofirst'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - opts_exclusive "`first' `showeqns'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - local cnsreport `cnsreport' `fullcnsreport'
          = local cnsreport  
          - opts_exclusive "`cnsreport'"
          = opts_exclusive ""
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts 
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - if `"`showeqns'"' != "" {
          = if `""' != "" {
            local nofirst nofirst
            }
          - if `"`ematrix'`noeqcheck'"' == "" {
          = if `""' == "" {
          - if `"`e(error)'"' == "matrix" {
          = if `""' == "matrix" {
            local ematrix e(error)
            }
          - }
          - _get_mcompare, `options'
          = _get_mcompare, 
            ------------------------------------------- begin _get_mcompare ---
            - version 11
            - local cmd `"`e(cmd)'"'
            = local cmd `"reghdfe"'
            - syntax [name(name=caller)] [, *]
            - local is_pwc = inlist("pwcompare", "`cmd'", "`caller'") | inlist(
> "pwmean", "`cmd'", "`caller'")
            = local is_pwc = inlist("pwcompare", "reghdfe", "") | inlist("pwmea
> n", "reghdfe", "")
            - local is_marg = inlist("margins", "`cmd'", "`e(cmd2)'", "`caller'
> ")
            = local is_marg = inlist("margins", "reghdfe", "", "")
            - local OPTIONS NOADJust BONferroni DUNCan DUNNett SCHeffe SIDak SN
> K TUKey ADJustall
            - if `is_pwc' {
            = if 0 {
              syntax [name] [, `OPTIONS' MCOMPare(string) *]
              }
            - else {
            - syntax [name] [, MCOMPare(string) *]
            - local suboption mcompare()
            - }
            - sreturn clear
            - sreturn local options `"`options'"'
            = sreturn local options `""'
            - if `is_pwc' {
            = if 0 {
              local METHOD `noadjust' `bonferroni' `duncan' `dunnett' `scheffe'
>  `sidak' `snk' `tukey'
              local METHOD : list uniq METHOD
              opts_exclusive "`METHOD'"
              local ALL `adjustall'
              opts_exclusive "`noadjust' `ALL'"
              }
            - local 0 `", `mcompare'"'
            = local 0 `", "'
            - capture syntax [, `OPTIONS']
            = capture syntax [, NOADJust BONferroni DUNCan DUNNett SCHeffe SIDa
> k SNK TUKey ADJustall]
            - if c(rc) {
              di as err "invalid mcompare() option;"
              di as err "method '`mcompare'' not allowed"
              error 198
              }
            - local METHOD `METHOD' `noadjust' `bonferroni' `duncan' `dunnett' 
> `scheffe' `sidak' `snk' `tukey'
            = local METHOD         
            - local METHOD : list uniq METHOD
            - local ALL `ALL' `adjustall'
            = local ALL  
            - local ALL : list uniq ALL
            - opts_exclusive "`METHOD'" `suboption'
            = opts_exclusive "" mcompare()
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts 
              - local n 0
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 0 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - if "`METHOD'" == "" {
            = if "" == "" {
            - if "`ALL'" != "" {
            = if "" != "" {
              di as err "multiple comparison method required with the adjustall
>  option"
              exit 198
              }
            - local METHOD noadjust
            - local noadjust noadjust
            - }
            - opts_exclusive "`ALL' `noadjust'" `suboption'
            = opts_exclusive " noadjust" mcompare()
              ---------------------------------------- begin opts_exclusive ---
              - version 8.2
              - args opts optname errcode
              - local opts `opts'
              = local opts  noadjust
              - local n 0
              - while `"`opts'"' != "" {
              = while `"noadjust"' != "" {
              - local ++n
              - gettoken item`n' opts : opts, bind
              = gettoken item1 opts : opts, bind
              - }
              - while `"`opts'"' != "" {
              = while `""' != "" {
                local ++n
                gettoken item`n' opts : opts, bind
                }
              - if `n' < 2 {
              = if 1 < 2 {
              - exit
              ------------------------------------------ end opts_exclusive ---
            - local EXCLUDE duncan dunnett snk tukey
            - if `:list METHOD in EXCLUDE' {
            = if 0 {
              if `is_pwc' {
              local opt : copy local METHOD
              }
              else {
              local opt "mcompare(`METHOD')"
              }
              local cmdlist anova manova regress mvreg pwmean
              if "`cmd'" == "pwcompare" {
              local cmd `"`e(cmd_est)'"'
              }
              if `is_marg' {
              local cmd margins
              }
              if !`:list cmd in cmdlist' | !`is_pwc' {
              di as err `"method `opt' is not allowed with results from `cmd'"'
              exit 322
              }
              if `"`e(prefix)'"' == "svy" {
              di as err `"method `opt' is not allowed with results using the sv
> y prefix"'
              exit 322
              }
              local vce `"`e(vce)'"'
              if !inlist("`vce'", "", "ols") {
              di as err `"method `opt' is not allowed with results using vce(`v
> ce')"'
              exit 322
              }
              }
            - local EXCLUDE duncan dunnett snk tukey scheffe
            - if `:list METHOD in EXCLUDE' {
            = if 0 {
              if "`ALL'" != "" {
              di as err `"option adjustall is not allowed with method `METHOD'"
> '
              exit 198
              }
              }
            - sreturn local method `"`METHOD'"'
            = sreturn local method `"noadjust"'
            - sreturn local adjustall `"`ALL'"'
            = sreturn local adjustall `""'
            --------------------------------------------- end _get_mcompare ---
          - local method `"`s(method)'"'
          = local method `"noadjust"'
          - local all `"`s(adjustall)'"'
          = local all `""'
          - local options `"`s(options)'"'
          = local options `""'
          - if "`method'" != "noadjust" {
          = if "noadjust" != "noadjust" {
            local keepmc 1
            }
          - opts_exclusive "`all' `groups'"
          = opts_exclusive " "
            ------------------------------------------ begin opts_exclusive ---
            - version 8.2
            - args opts optname errcode
            - local opts `opts'
            = local opts  
            - local n 0
            - while `"`opts'"' != "" {
            = while `""' != "" {
              local ++n
              gettoken item`n' opts : opts, bind
              }
            - if `n' < 2 {
            = if 0 < 2 {
            - exit
            -------------------------------------------- end opts_exclusive ---
          - if "`method'" == "dunnett" {
          = if "noadjust" == "dunnett" {
            opts_exclusive "`method' `groups'"
            }
          - _get_diopts diopts options, `options' `fvwrap' `fvlabel'
          = _get_diopts diopts options,   
            --------------------------------------------- begin _get_diopts ---
            - version 11
            - syntax namelist(max=2) [, *]
            - gettoken name1 namelist : namelist
            - gettoken name2 namelist : namelist
            - GetDiopts diopts options, `options'
            = GetDiopts diopts options, 
              --------------------------------- begin _get_diopts.GetDiopts ---
              - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEleve
> ls NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells 
> NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sfo
> rmat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(
> string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV A
> BBREV
              - syntax namelist(max=2) [, `DIOPTS' *]
              = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevel
> s ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcell
> s EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cforma
> t(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passth
> ru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthr
> u) NOABBREV ABBREV *]
              - opts_exclusive "`allbaselevels' `noallbaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`allbaselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`baselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`emptycells' `noemptycells'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`fvlabel' `nofvlabel'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`omitted' `noomitted'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`lstretch' `nolstretch'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`cnsreport' `fullcnsreport'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`coeflegend' `selegend'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local K : list sizeof namelist
              - gettoken c_diopts c_opts : namelist
              - opts_exclusive "`coding' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`versus' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`abbrev' `noabbrev'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local allbaselevels `allbaselevels' `noallbaselevels'
              = local allbaselevels  
              - local baselevels `baselevels' `nobaselevels'
              = local baselevels  
              - local emptycells `emptycells' `noemptycells'
              = local emptycells  
              - local omitted `omitted' `noomitted'
              = local omitted  
              - local lstretch `lstretch' `nolstretch'
              = local lstretch  
              - local fvlabel `fvlabel' `nofvlabel'
              = local fvlabel  
              - local abbrev `abbrev' `noabbrev'
              = local abbrev  
              - if "`allbaselevels'`baselevels'" == "" {
              = if "" == "" {
              - if c(showbaselevels) == "all" {
                local allbaselevels allbaselevels
                }
              - else if c(showbaselevels) == "on" {
                local baselevels baselevels
                }
              - }
              - if "`emptycells'" == "" {
              = if "" == "" {
              - if c(showemptycells) == "off" {
                local emptycells noemptycells
                }
              - }
              - if "`omitted'" == "" {
              = if "" == "" {
              - if c(showomitted) == "off" {
                local omitted noomitted
                }
              - }
              - if "`lstretch'" == "" {
              = if "" == "" {
              - if c(lstretch) == "off" {
                local lstretch nolstretch
                }
              - }
              - if `:length local cformat' {
              = if 0 {
                confirm numeric format `cformat'
                if fmtwidth(`"`cformat'"') > 9 {
                local cformat "%9.0g"
                di "{txt}note: invalid cformat(), using default"
                }
                sreturn local cformat `"`cformat'"'
                local cformat `"cformat(`cformat')"'
                }
              - if `:length local sformat' {
              = if 0 {
                confirm numeric format `sformat'
                if fmtwidth(`"`sformat'"') > 8 {
                local sformat "%8.2f"
                di "{txt}note: invalid sformat(), using default"
                }
                sreturn local sformat `"`sformat'"'
                local sformat `"sformat(`sformat')"'
                }
              - if `:length local pformat' {
              = if 0 {
                confirm numeric format `pformat'
                if fmtwidth(`"`pformat'"') > 5 {
                local pformat "%5.3f"
                di "{txt}note: invalid pformat(), using default"
                }
                sreturn local pformat `"`pformat'"'
                local pformat `"pformat(`pformat')"'
                }
              - if `K' == 1 & `:length local options' {
              = if 2 == 1 & 0 {
                syntax namelist(max=2) [, `DIOPTS']
                }
              - if reldif(`level', c(level)) > 1e-3 {
              = if reldif(95, c(level)) > 1e-3 {
                local levelopt level(`level')
                }
              - Wrapon , `fvwrapon'
              = Wrapon , 
                ---------------------------------- begin _get_diopts.Wrapon ---
                - capture syntax [, WOrd WIdth]
                - if c(rc) {
                  di as err "invalid fvwrapon() option;"
                  syntax [, WOrd WIdth]
                  exit 198
                  }
                - opts_exclusive "`word' `width'" fvwrapon
                = opts_exclusive " " fvwrapon
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local fvwrapon `word' `width'
                = local fvwrapon  
                - if `:length local fvwrapon' {
                = if 0 {
                  c_local fvwrapon fvwrapon(`fvwrapon')
                  }
                ------------------------------------ end _get_diopts.Wrapon ---
              - if "`fvwrap'" != "" {
              = if "" != "" {
                FVWrap, `fvwrap'
                }
              - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `basele
> vels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflege
> nd' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvw
> rap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
              = c_local diopts                         
              - if `K' == 2 {
              = if 2 == 2 {
              - c_local `c_opts' `"`options'"'
              = c_local  options `""'
              - }
              - sreturn local coding `coding'
              = sreturn local coding 
              - sreturn local versus `versus'
              = sreturn local versus 
              - sreturn local compare `compare'
              = sreturn local compare 
              - sreturn local level `level'
              = sreturn local level 95
              ----------------------------------- end _get_diopts.GetDiopts ---
            - c_local `name1' `"`diopts'"'
            = c_local diopts `""'
            - local snames : s(macros)
            - foreach sname of local snames {
            - local S_`sname' = s(`sname')
            = local S_level = s(level)
            - }
            - local S_`sname' = s(`sname')
            = local S_method = s(method)
            - }
            - sreturn clear
            - GetDiopts DEFAULT
              --------------------------------- begin _get_diopts.GetDiopts ---
              - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEleve
> ls NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells 
> NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sfo
> rmat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(
> string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV A
> BBREV
              - syntax namelist(max=2) [, `DIOPTS' *]
              = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevel
> s ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcell
> s EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cforma
> t(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passth
> ru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthr
> u) NOABBREV ABBREV *]
              - opts_exclusive "`allbaselevels' `noallbaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`allbaselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`baselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`emptycells' `noemptycells'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`fvlabel' `nofvlabel'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`omitted' `noomitted'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`lstretch' `nolstretch'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`cnsreport' `fullcnsreport'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`coeflegend' `selegend'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local K : list sizeof namelist
              - gettoken c_diopts c_opts : namelist
              - opts_exclusive "`coding' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`versus' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`abbrev' `noabbrev'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local allbaselevels `allbaselevels' `noallbaselevels'
              = local allbaselevels  
              - local baselevels `baselevels' `nobaselevels'
              = local baselevels  
              - local emptycells `emptycells' `noemptycells'
              = local emptycells  
              - local omitted `omitted' `noomitted'
              = local omitted  
              - local lstretch `lstretch' `nolstretch'
              = local lstretch  
              - local fvlabel `fvlabel' `nofvlabel'
              = local fvlabel  
              - local abbrev `abbrev' `noabbrev'
              = local abbrev  
              - if "`allbaselevels'`baselevels'" == "" {
              = if "" == "" {
              - if c(showbaselevels) == "all" {
                local allbaselevels allbaselevels
                }
              - else if c(showbaselevels) == "on" {
                local baselevels baselevels
                }
              - }
              - if "`emptycells'" == "" {
              = if "" == "" {
              - if c(showemptycells) == "off" {
                local emptycells noemptycells
                }
              - }
              - if "`omitted'" == "" {
              = if "" == "" {
              - if c(showomitted) == "off" {
                local omitted noomitted
                }
              - }
              - if "`lstretch'" == "" {
              = if "" == "" {
              - if c(lstretch) == "off" {
                local lstretch nolstretch
                }
              - }
              - if `:length local cformat' {
              = if 0 {
                confirm numeric format `cformat'
                if fmtwidth(`"`cformat'"') > 9 {
                local cformat "%9.0g"
                di "{txt}note: invalid cformat(), using default"
                }
                sreturn local cformat `"`cformat'"'
                local cformat `"cformat(`cformat')"'
                }
              - if `:length local sformat' {
              = if 0 {
                confirm numeric format `sformat'
                if fmtwidth(`"`sformat'"') > 8 {
                local sformat "%8.2f"
                di "{txt}note: invalid sformat(), using default"
                }
                sreturn local sformat `"`sformat'"'
                local sformat `"sformat(`sformat')"'
                }
              - if `:length local pformat' {
              = if 0 {
                confirm numeric format `pformat'
                if fmtwidth(`"`pformat'"') > 5 {
                local pformat "%5.3f"
                di "{txt}note: invalid pformat(), using default"
                }
                sreturn local pformat `"`pformat'"'
                local pformat `"pformat(`pformat')"'
                }
              - if `K' == 1 & `:length local options' {
              = if 1 == 1 & 0 {
                syntax namelist(max=2) [, `DIOPTS']
                }
              - if reldif(`level', c(level)) > 1e-3 {
              = if reldif(95, c(level)) > 1e-3 {
                local levelopt level(`level')
                }
              - Wrapon , `fvwrapon'
              = Wrapon , 
                ---------------------------------- begin _get_diopts.Wrapon ---
                - capture syntax [, WOrd WIdth]
                - if c(rc) {
                  di as err "invalid fvwrapon() option;"
                  syntax [, WOrd WIdth]
                  exit 198
                  }
                - opts_exclusive "`word' `width'" fvwrapon
                = opts_exclusive " " fvwrapon
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local fvwrapon `word' `width'
                = local fvwrapon  
                - if `:length local fvwrapon' {
                = if 0 {
                  c_local fvwrapon fvwrapon(`fvwrapon')
                  }
                ------------------------------------ end _get_diopts.Wrapon ---
              - if "`fvwrap'" != "" {
              = if "" != "" {
                FVWrap, `fvwrap'
                }
              - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `basele
> vels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflege
> nd' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvw
> rap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
              = c_local DEFAULT                         
              - if `K' == 2 {
              = if 1 == 2 {
                c_local `c_opts' `"`options'"'
                }
              - sreturn local coding `coding'
              = sreturn local coding 
              - sreturn local versus `versus'
              = sreturn local versus 
              - sreturn local compare `compare'
              = sreturn local compare 
              - sreturn local level `level'
              = sreturn local level 95
              ----------------------------------- end _get_diopts.GetDiopts ---
            - if `"`name2'"' == "" {
            = if `"options"' == "" {
              GetDiopts DUPS, `options'
              }
            - else {
            - GetDiopts DUPS options, `options'
            = GetDiopts DUPS options, 
              --------------------------------- begin _get_diopts.GetDiopts ---
              - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEleve
> ls NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells 
> NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sfo
> rmat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(
> string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV A
> BBREV
              - syntax namelist(max=2) [, `DIOPTS' *]
              = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevel
> s ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcell
> s EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cforma
> t(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passth
> ru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthr
> u) NOABBREV ABBREV *]
              - opts_exclusive "`allbaselevels' `noallbaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`allbaselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`baselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`emptycells' `noemptycells'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`fvlabel' `nofvlabel'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`omitted' `noomitted'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`lstretch' `nolstretch'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`cnsreport' `fullcnsreport'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`coeflegend' `selegend'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local K : list sizeof namelist
              - gettoken c_diopts c_opts : namelist
              - opts_exclusive "`coding' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`versus' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`abbrev' `noabbrev'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local allbaselevels `allbaselevels' `noallbaselevels'
              = local allbaselevels  
              - local baselevels `baselevels' `nobaselevels'
              = local baselevels  
              - local emptycells `emptycells' `noemptycells'
              = local emptycells  
              - local omitted `omitted' `noomitted'
              = local omitted  
              - local lstretch `lstretch' `nolstretch'
              = local lstretch  
              - local fvlabel `fvlabel' `nofvlabel'
              = local fvlabel  
              - local abbrev `abbrev' `noabbrev'
              = local abbrev  
              - if "`allbaselevels'`baselevels'" == "" {
              = if "" == "" {
              - if c(showbaselevels) == "all" {
                local allbaselevels allbaselevels
                }
              - else if c(showbaselevels) == "on" {
                local baselevels baselevels
                }
              - }
              - if "`emptycells'" == "" {
              = if "" == "" {
              - if c(showemptycells) == "off" {
                local emptycells noemptycells
                }
              - }
              - if "`omitted'" == "" {
              = if "" == "" {
              - if c(showomitted) == "off" {
                local omitted noomitted
                }
              - }
              - if "`lstretch'" == "" {
              = if "" == "" {
              - if c(lstretch) == "off" {
                local lstretch nolstretch
                }
              - }
              - if `:length local cformat' {
              = if 0 {
                confirm numeric format `cformat'
                if fmtwidth(`"`cformat'"') > 9 {
                local cformat "%9.0g"
                di "{txt}note: invalid cformat(), using default"
                }
                sreturn local cformat `"`cformat'"'
                local cformat `"cformat(`cformat')"'
                }
              - if `:length local sformat' {
              = if 0 {
                confirm numeric format `sformat'
                if fmtwidth(`"`sformat'"') > 8 {
                local sformat "%8.2f"
                di "{txt}note: invalid sformat(), using default"
                }
                sreturn local sformat `"`sformat'"'
                local sformat `"sformat(`sformat')"'
                }
              - if `:length local pformat' {
              = if 0 {
                confirm numeric format `pformat'
                if fmtwidth(`"`pformat'"') > 5 {
                local pformat "%5.3f"
                di "{txt}note: invalid pformat(), using default"
                }
                sreturn local pformat `"`pformat'"'
                local pformat `"pformat(`pformat')"'
                }
              - if `K' == 1 & `:length local options' {
              = if 2 == 1 & 0 {
                syntax namelist(max=2) [, `DIOPTS']
                }
              - if reldif(`level', c(level)) > 1e-3 {
              = if reldif(95, c(level)) > 1e-3 {
                local levelopt level(`level')
                }
              - Wrapon , `fvwrapon'
              = Wrapon , 
                ---------------------------------- begin _get_diopts.Wrapon ---
                - capture syntax [, WOrd WIdth]
                - if c(rc) {
                  di as err "invalid fvwrapon() option;"
                  syntax [, WOrd WIdth]
                  exit 198
                  }
                - opts_exclusive "`word' `width'" fvwrapon
                = opts_exclusive " " fvwrapon
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local fvwrapon `word' `width'
                = local fvwrapon  
                - if `:length local fvwrapon' {
                = if 0 {
                  c_local fvwrapon fvwrapon(`fvwrapon')
                  }
                ------------------------------------ end _get_diopts.Wrapon ---
              - if "`fvwrap'" != "" {
              = if "" != "" {
                FVWrap, `fvwrap'
                }
              - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `basele
> vels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflege
> nd' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvw
> rap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
              = c_local DUPS                         
              - if `K' == 2 {
              = if 2 == 2 {
              - c_local `c_opts' `"`options'"'
              = c_local  options `""'
              - }
              - sreturn local coding `coding'
              = sreturn local coding 
              - sreturn local versus `versus'
              = sreturn local versus 
              - sreturn local compare `compare'
              = sreturn local compare 
              - sreturn local level `level'
              = sreturn local level 95
              ----------------------------------- end _get_diopts.GetDiopts ---
            - c_local `name2' `"`options'"'
            = c_local options `""'
            - }
            - local DUPS : list DUPS - DEFAULT
            - gettoken DUPS : DUPS
            - if `"`DUPS'"' != "" {
            = if `""' != "" {
              if (strpos(`"`DUPS'"', "(")) {
              gettoken DUPS : DUPS, parse("(")
              local DUPS `"`DUPS'()"'
              }
              di as err "duplicate {bf:`DUPS'} option not allowed"
              exit 198
              }
            - sreturn clear
            - foreach sname of local snames {
            - sreturn local `sname' = `"`S_`sname''"'
            = sreturn local level = `"95"'
            - }
            - sreturn local `sname' = `"`S_`sname''"'
            = sreturn local method = `"noadjust"'
            - }
            ----------------------------------------------- end _get_diopts ---
          - local legend coeflegend selegend
          - local legend : list legend & diopts
          - local diopts : list diopts - legend
          - local lstretch lstretch nolstretch
          - local lstretch : list lstretch & diopts
          - local diopts : list diopts - lstretch
          - local markdown markdown
          - local markdown : list markdown & diopts
          - local diopts : list diopts - markdown
          - _get_diopts ignore, `diopts' `cformat' `sformat' `pformat'
          = _get_diopts ignore,    
            --------------------------------------------- begin _get_diopts ---
            - version 11
            - syntax namelist(max=2) [, *]
            - gettoken name1 namelist : namelist
            - gettoken name2 namelist : namelist
            - GetDiopts diopts options, `options'
            = GetDiopts diopts options, 
              --------------------------------- begin _get_diopts.GetDiopts ---
              - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEleve
> ls NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells 
> NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sfo
> rmat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(
> string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV A
> BBREV
              - syntax namelist(max=2) [, `DIOPTS' *]
              = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevel
> s ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcell
> s EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cforma
> t(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passth
> ru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthr
> u) NOABBREV ABBREV *]
              - opts_exclusive "`allbaselevels' `noallbaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`allbaselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`baselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`emptycells' `noemptycells'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`fvlabel' `nofvlabel'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`omitted' `noomitted'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`lstretch' `nolstretch'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`cnsreport' `fullcnsreport'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`coeflegend' `selegend'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local K : list sizeof namelist
              - gettoken c_diopts c_opts : namelist
              - opts_exclusive "`coding' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`versus' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`abbrev' `noabbrev'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local allbaselevels `allbaselevels' `noallbaselevels'
              = local allbaselevels  
              - local baselevels `baselevels' `nobaselevels'
              = local baselevels  
              - local emptycells `emptycells' `noemptycells'
              = local emptycells  
              - local omitted `omitted' `noomitted'
              = local omitted  
              - local lstretch `lstretch' `nolstretch'
              = local lstretch  
              - local fvlabel `fvlabel' `nofvlabel'
              = local fvlabel  
              - local abbrev `abbrev' `noabbrev'
              = local abbrev  
              - if "`allbaselevels'`baselevels'" == "" {
              = if "" == "" {
              - if c(showbaselevels) == "all" {
                local allbaselevels allbaselevels
                }
              - else if c(showbaselevels) == "on" {
                local baselevels baselevels
                }
              - }
              - if "`emptycells'" == "" {
              = if "" == "" {
              - if c(showemptycells) == "off" {
                local emptycells noemptycells
                }
              - }
              - if "`omitted'" == "" {
              = if "" == "" {
              - if c(showomitted) == "off" {
                local omitted noomitted
                }
              - }
              - if "`lstretch'" == "" {
              = if "" == "" {
              - if c(lstretch) == "off" {
                local lstretch nolstretch
                }
              - }
              - if `:length local cformat' {
              = if 0 {
                confirm numeric format `cformat'
                if fmtwidth(`"`cformat'"') > 9 {
                local cformat "%9.0g"
                di "{txt}note: invalid cformat(), using default"
                }
                sreturn local cformat `"`cformat'"'
                local cformat `"cformat(`cformat')"'
                }
              - if `:length local sformat' {
              = if 0 {
                confirm numeric format `sformat'
                if fmtwidth(`"`sformat'"') > 8 {
                local sformat "%8.2f"
                di "{txt}note: invalid sformat(), using default"
                }
                sreturn local sformat `"`sformat'"'
                local sformat `"sformat(`sformat')"'
                }
              - if `:length local pformat' {
              = if 0 {
                confirm numeric format `pformat'
                if fmtwidth(`"`pformat'"') > 5 {
                local pformat "%5.3f"
                di "{txt}note: invalid pformat(), using default"
                }
                sreturn local pformat `"`pformat'"'
                local pformat `"pformat(`pformat')"'
                }
              - if `K' == 1 & `:length local options' {
              = if 2 == 1 & 0 {
                syntax namelist(max=2) [, `DIOPTS']
                }
              - if reldif(`level', c(level)) > 1e-3 {
              = if reldif(95, c(level)) > 1e-3 {
                local levelopt level(`level')
                }
              - Wrapon , `fvwrapon'
              = Wrapon , 
                ---------------------------------- begin _get_diopts.Wrapon ---
                - capture syntax [, WOrd WIdth]
                - if c(rc) {
                  di as err "invalid fvwrapon() option;"
                  syntax [, WOrd WIdth]
                  exit 198
                  }
                - opts_exclusive "`word' `width'" fvwrapon
                = opts_exclusive " " fvwrapon
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local fvwrapon `word' `width'
                = local fvwrapon  
                - if `:length local fvwrapon' {
                = if 0 {
                  c_local fvwrapon fvwrapon(`fvwrapon')
                  }
                ------------------------------------ end _get_diopts.Wrapon ---
              - if "`fvwrap'" != "" {
              = if "" != "" {
                FVWrap, `fvwrap'
                }
              - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `basele
> vels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflege
> nd' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvw
> rap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
              = c_local diopts                         
              - if `K' == 2 {
              = if 2 == 2 {
              - c_local `c_opts' `"`options'"'
              = c_local  options `""'
              - }
              - sreturn local coding `coding'
              = sreturn local coding 
              - sreturn local versus `versus'
              = sreturn local versus 
              - sreturn local compare `compare'
              = sreturn local compare 
              - sreturn local level `level'
              = sreturn local level 95
              ----------------------------------- end _get_diopts.GetDiopts ---
            - c_local `name1' `"`diopts'"'
            = c_local ignore `""'
            - local snames : s(macros)
            - foreach sname of local snames {
            - local S_`sname' = s(`sname')
            = local S_level = s(level)
            - }
            - local S_`sname' = s(`sname')
            = local S_method = s(method)
            - }
            - sreturn clear
            - GetDiopts DEFAULT
              --------------------------------- begin _get_diopts.GetDiopts ---
              - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEleve
> ls NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells 
> NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sfo
> rmat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(
> string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV A
> BBREV
              - syntax namelist(max=2) [, `DIOPTS' *]
              = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevel
> s ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcell
> s EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cforma
> t(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passth
> ru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthr
> u) NOABBREV ABBREV *]
              - opts_exclusive "`allbaselevels' `noallbaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`allbaselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`baselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`emptycells' `noemptycells'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`fvlabel' `nofvlabel'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`omitted' `noomitted'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`lstretch' `nolstretch'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`cnsreport' `fullcnsreport'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`coeflegend' `selegend'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local K : list sizeof namelist
              - gettoken c_diopts c_opts : namelist
              - opts_exclusive "`coding' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`versus' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`abbrev' `noabbrev'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local allbaselevels `allbaselevels' `noallbaselevels'
              = local allbaselevels  
              - local baselevels `baselevels' `nobaselevels'
              = local baselevels  
              - local emptycells `emptycells' `noemptycells'
              = local emptycells  
              - local omitted `omitted' `noomitted'
              = local omitted  
              - local lstretch `lstretch' `nolstretch'
              = local lstretch  
              - local fvlabel `fvlabel' `nofvlabel'
              = local fvlabel  
              - local abbrev `abbrev' `noabbrev'
              = local abbrev  
              - if "`allbaselevels'`baselevels'" == "" {
              = if "" == "" {
              - if c(showbaselevels) == "all" {
                local allbaselevels allbaselevels
                }
              - else if c(showbaselevels) == "on" {
                local baselevels baselevels
                }
              - }
              - if "`emptycells'" == "" {
              = if "" == "" {
              - if c(showemptycells) == "off" {
                local emptycells noemptycells
                }
              - }
              - if "`omitted'" == "" {
              = if "" == "" {
              - if c(showomitted) == "off" {
                local omitted noomitted
                }
              - }
              - if "`lstretch'" == "" {
              = if "" == "" {
              - if c(lstretch) == "off" {
                local lstretch nolstretch
                }
              - }
              - if `:length local cformat' {
              = if 0 {
                confirm numeric format `cformat'
                if fmtwidth(`"`cformat'"') > 9 {
                local cformat "%9.0g"
                di "{txt}note: invalid cformat(), using default"
                }
                sreturn local cformat `"`cformat'"'
                local cformat `"cformat(`cformat')"'
                }
              - if `:length local sformat' {
              = if 0 {
                confirm numeric format `sformat'
                if fmtwidth(`"`sformat'"') > 8 {
                local sformat "%8.2f"
                di "{txt}note: invalid sformat(), using default"
                }
                sreturn local sformat `"`sformat'"'
                local sformat `"sformat(`sformat')"'
                }
              - if `:length local pformat' {
              = if 0 {
                confirm numeric format `pformat'
                if fmtwidth(`"`pformat'"') > 5 {
                local pformat "%5.3f"
                di "{txt}note: invalid pformat(), using default"
                }
                sreturn local pformat `"`pformat'"'
                local pformat `"pformat(`pformat')"'
                }
              - if `K' == 1 & `:length local options' {
              = if 1 == 1 & 0 {
                syntax namelist(max=2) [, `DIOPTS']
                }
              - if reldif(`level', c(level)) > 1e-3 {
              = if reldif(95, c(level)) > 1e-3 {
                local levelopt level(`level')
                }
              - Wrapon , `fvwrapon'
              = Wrapon , 
                ---------------------------------- begin _get_diopts.Wrapon ---
                - capture syntax [, WOrd WIdth]
                - if c(rc) {
                  di as err "invalid fvwrapon() option;"
                  syntax [, WOrd WIdth]
                  exit 198
                  }
                - opts_exclusive "`word' `width'" fvwrapon
                = opts_exclusive " " fvwrapon
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local fvwrapon `word' `width'
                = local fvwrapon  
                - if `:length local fvwrapon' {
                = if 0 {
                  c_local fvwrapon fvwrapon(`fvwrapon')
                  }
                ------------------------------------ end _get_diopts.Wrapon ---
              - if "`fvwrap'" != "" {
              = if "" != "" {
                FVWrap, `fvwrap'
                }
              - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `basele
> vels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflege
> nd' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvw
> rap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
              = c_local DEFAULT                         
              - if `K' == 2 {
              = if 1 == 2 {
                c_local `c_opts' `"`options'"'
                }
              - sreturn local coding `coding'
              = sreturn local coding 
              - sreturn local versus `versus'
              = sreturn local versus 
              - sreturn local compare `compare'
              = sreturn local compare 
              - sreturn local level `level'
              = sreturn local level 95
              ----------------------------------- end _get_diopts.GetDiopts ---
            - if `"`name2'"' == "" {
            = if `""' == "" {
            - GetDiopts DUPS, `options'
            = GetDiopts DUPS, 
              --------------------------------- begin _get_diopts.GetDiopts ---
              - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEleve
> ls NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells 
> NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sfo
> rmat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(
> string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV A
> BBREV
              - syntax namelist(max=2) [, `DIOPTS' *]
              = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevel
> s ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcell
> s EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cforma
> t(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passth
> ru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthr
> u) NOABBREV ABBREV *]
              - opts_exclusive "`allbaselevels' `noallbaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`allbaselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`baselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`emptycells' `noemptycells'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`fvlabel' `nofvlabel'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`omitted' `noomitted'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`lstretch' `nolstretch'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`cnsreport' `fullcnsreport'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`coeflegend' `selegend'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local K : list sizeof namelist
              - gettoken c_diopts c_opts : namelist
              - opts_exclusive "`coding' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`versus' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`abbrev' `noabbrev'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local allbaselevels `allbaselevels' `noallbaselevels'
              = local allbaselevels  
              - local baselevels `baselevels' `nobaselevels'
              = local baselevels  
              - local emptycells `emptycells' `noemptycells'
              = local emptycells  
              - local omitted `omitted' `noomitted'
              = local omitted  
              - local lstretch `lstretch' `nolstretch'
              = local lstretch  
              - local fvlabel `fvlabel' `nofvlabel'
              = local fvlabel  
              - local abbrev `abbrev' `noabbrev'
              = local abbrev  
              - if "`allbaselevels'`baselevels'" == "" {
              = if "" == "" {
              - if c(showbaselevels) == "all" {
                local allbaselevels allbaselevels
                }
              - else if c(showbaselevels) == "on" {
                local baselevels baselevels
                }
              - }
              - if "`emptycells'" == "" {
              = if "" == "" {
              - if c(showemptycells) == "off" {
                local emptycells noemptycells
                }
              - }
              - if "`omitted'" == "" {
              = if "" == "" {
              - if c(showomitted) == "off" {
                local omitted noomitted
                }
              - }
              - if "`lstretch'" == "" {
              = if "" == "" {
              - if c(lstretch) == "off" {
                local lstretch nolstretch
                }
              - }
              - if `:length local cformat' {
              = if 0 {
                confirm numeric format `cformat'
                if fmtwidth(`"`cformat'"') > 9 {
                local cformat "%9.0g"
                di "{txt}note: invalid cformat(), using default"
                }
                sreturn local cformat `"`cformat'"'
                local cformat `"cformat(`cformat')"'
                }
              - if `:length local sformat' {
              = if 0 {
                confirm numeric format `sformat'
                if fmtwidth(`"`sformat'"') > 8 {
                local sformat "%8.2f"
                di "{txt}note: invalid sformat(), using default"
                }
                sreturn local sformat `"`sformat'"'
                local sformat `"sformat(`sformat')"'
                }
              - if `:length local pformat' {
              = if 0 {
                confirm numeric format `pformat'
                if fmtwidth(`"`pformat'"') > 5 {
                local pformat "%5.3f"
                di "{txt}note: invalid pformat(), using default"
                }
                sreturn local pformat `"`pformat'"'
                local pformat `"pformat(`pformat')"'
                }
              - if `K' == 1 & `:length local options' {
              = if 1 == 1 & 0 {
                syntax namelist(max=2) [, `DIOPTS']
                }
              - if reldif(`level', c(level)) > 1e-3 {
              = if reldif(95, c(level)) > 1e-3 {
                local levelopt level(`level')
                }
              - Wrapon , `fvwrapon'
              = Wrapon , 
                ---------------------------------- begin _get_diopts.Wrapon ---
                - capture syntax [, WOrd WIdth]
                - if c(rc) {
                  di as err "invalid fvwrapon() option;"
                  syntax [, WOrd WIdth]
                  exit 198
                  }
                - opts_exclusive "`word' `width'" fvwrapon
                = opts_exclusive " " fvwrapon
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local fvwrapon `word' `width'
                = local fvwrapon  
                - if `:length local fvwrapon' {
                = if 0 {
                  c_local fvwrapon fvwrapon(`fvwrapon')
                  }
                ------------------------------------ end _get_diopts.Wrapon ---
              - if "`fvwrap'" != "" {
              = if "" != "" {
                FVWrap, `fvwrap'
                }
              - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `basele
> vels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflege
> nd' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvw
> rap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
              = c_local DUPS                         
              - if `K' == 2 {
              = if 1 == 2 {
                c_local `c_opts' `"`options'"'
                }
              - sreturn local coding `coding'
              = sreturn local coding 
              - sreturn local versus `versus'
              = sreturn local versus 
              - sreturn local compare `compare'
              = sreturn local compare 
              - sreturn local level `level'
              = sreturn local level 95
              ----------------------------------- end _get_diopts.GetDiopts ---
            - }
            - else {
              GetDiopts DUPS options, `options'
              c_local `name2' `"`options'"'
              }
            - local DUPS : list DUPS - DEFAULT
            - gettoken DUPS : DUPS
            - if `"`DUPS'"' != "" {
            = if `""' != "" {
              if (strpos(`"`DUPS'"', "(")) {
              gettoken DUPS : DUPS, parse("(")
              local DUPS `"`DUPS'()"'
              }
              di as err "duplicate {bf:`DUPS'} option not allowed"
              exit 198
              }
            - sreturn clear
            - foreach sname of local snames {
            - sreturn local `sname' = `"`S_`sname''"'
            = sreturn local level = `"95"'
            - }
            - sreturn local `sname' = `"`S_`sname''"'
            = sreturn local method = `"noadjust"'
            - }
            ----------------------------------------------- end _get_diopts ---
          - local cformat `"`s(cformat)'"'
          = local cformat `""'
          - local sformat `"`s(sformat)'"'
          = local sformat `""'
          - local pformat `"`s(pformat)'"'
          = local pformat `""'
          - _get_eformopts , eformopts(`options') allowed(__all__) soptions
          = _get_eformopts , eformopts() allowed(__all__) soptions
            ------------------------------------------ begin _get_eformopts ---
            - version 8.0
            - syntax [, eformopts(string asis) soptions ALLOWed(string) ]
            - local 0 , `eformopts'
            = local 0 , 
            - local EFALL NOHR hr NOSHR shr or IRr RRr tr TRatio
            - if "`soptions'" != "" {
            = if "soptions" != "" {
            - syntax [, EForm1(passthru) EForm `EFALL' * ]
            = syntax [, EForm1(passthru) EForm NOHR hr NOSHR shr or IRr RRr tr 
> TRatio * ]
            - local opts `"`options'"'
            = local opts `""'
            - local 0 , `eform1' `eform' `nohr' `hr' `noshr' `shr' `or' `irr' `
> rrr' `tr' `tratio'
            = local 0 ,           
            - }
            - if "`allowed'" == "__all__" {
            = if "__all__" == "__all__" {
            - local allowed `EFALL'
            = local allowed NOHR hr NOSHR shr or IRr RRr tr TRatio
            - }
            - foreach ef of local allowed {
            - capture confirm name `ef'
            = capture confirm name NOHR
            - if _rc {
              di as err "`ef' is not a valid name"
              exit 198
              }
            - local efopts `efopts' `=lower("`ef'")'
            = local efopts  nohr
            - }
            - capture confirm name `ef'
            = capture confirm name hr
            - if _rc {
              di as err "`ef' is not a valid name"
              exit 198
              }
            - local efopts `efopts' `=lower("`ef'")'
            = local efopts nohr hr
            - }
            - capture confirm name `ef'
            = capture confirm name NOSHR
            - if _rc {
              di as err "`ef' is not a valid name"
              exit 198
              }
            - local efopts `efopts' `=lower("`ef'")'
            = local efopts nohr hr noshr
            - }
            - capture confirm name `ef'
            = capture confirm name shr
            - if _rc {
              di as err "`ef' is not a valid name"
              exit 198
              }
            - local efopts `efopts' `=lower("`ef'")'
            = local efopts nohr hr noshr shr
            - }
            - capture confirm name `ef'
            = capture confirm name or
            - if _rc {
              di as err "`ef' is not a valid name"
              exit 198
              }
            - local efopts `efopts' `=lower("`ef'")'
            = local efopts nohr hr noshr shr or
            - }
            - capture confirm name `ef'
            = capture confirm name IRr
            - if _rc {
              di as err "`ef' is not a valid name"
              exit 198
              }
            - local efopts `efopts' `=lower("`ef'")'
            = local efopts nohr hr noshr shr or irr
            - }
            - capture confirm name `ef'
            = capture confirm name RRr
            - if _rc {
              di as err "`ef' is not a valid name"
              exit 198
              }
            - local efopts `efopts' `=lower("`ef'")'
            = local efopts nohr hr noshr shr or irr rrr
            - }
            - capture confirm name `ef'
            = capture confirm name tr
            - if _rc {
              di as err "`ef' is not a valid name"
              exit 198
              }
            - local efopts `efopts' `=lower("`ef'")'
            = local efopts nohr hr noshr shr or irr rrr tr
            - }
            - capture confirm name `ef'
            = capture confirm name TRatio
            - if _rc {
              di as err "`ef' is not a valid name"
              exit 198
              }
            - local efopts `efopts' `=lower("`ef'")'
            = local efopts nohr hr noshr shr or irr rrr tr tratio
            - }
            - local efopts : list uniq efopts
            - syntax [, EForm1(string) EForm `allowed' ]
            = syntax [, EForm1(string) EForm NOHR hr NOSHR shr or IRr RRr tr TR
> atio ]
            - foreach ef of local efopts {
            - local eform `eform' ``ef''
            = local eform  
            - }
            - local eform `eform' ``ef''
            = local eform  
            - }
            - local eform `eform' ``ef''
            = local eform  
            - }
            - local eform `eform' ``ef''
            = local eform  
            - }
            - local eform `eform' ``ef''
            = local eform  
            - }
            - local eform `eform' ``ef''
            = local eform  
            - }
            - local eform `eform' ``ef''
            = local eform  
            - }
            - local eform `eform' ``ef''
            = local eform  
            - }
            - local eform `eform' ``ef''
            = local eform  
            - }
            - if `"`eform1'"'=="Odds Ratio" local eform_cons_ti = "Odds"
            = if `""'=="Odds Ratio" local eform_cons_ti = "Odds"
            - else if `"`eform1'"'=="Haz. Ratio" local eform_cons_ti="Hazard"
            = else if `""'=="Haz. Ratio" local eform_cons_ti="Hazard"
            - else if `"`eform1'"'=="Time Ratio" local eform_cons_ti = "Time"
            = else if `""'=="Time Ratio" local eform_cons_ti = "Time"
            - else if `"`eform1'"'=="IRR" local eform_cons_ti = "Inc. Rate"
            = else if `""'=="IRR" local eform_cons_ti = "Inc. Rate"
            - else if `"`eform1'"'=="Risk Ratio" local eform_cons_ti = "Risk"
            = else if `""'=="Risk Ratio" local eform_cons_ti = "Risk"
            - else if `"`eform1'"'=="Hlth Ratio" local eform_cons_ti="Health"
            = else if `""'=="Hlth Ratio" local eform_cons_ti="Health"
            - local k : list sizeof eform
            - if `k' {
            = if 0 {
              opts_exclusive "`eform'"
              if `:length local eform1' {
              opts_exclusive "eform() `eform'"
              }
              }
            - if `k' {
            = if 0 {
              if ("`eform'"=="eform") local eform1 = "exp(b)"
              else if ("`eform'"=="hr") {
              local eform1 = "Haz. Ratio"
              local eform_cons_ti = "Hazard"
              }
              else if ("`eform'"=="shr") {
              local eform1 = "SHR"
              local eform_cons_ti = "Subhazard"
              }
              else if ("`eform'"=="tr") {
              local eform1 = "Time Ratio"
              local eform_cons_ti = "Time"
              }
              else if ("`eform'"=="tratio") {
              local eform1 = "Time Ratio"
              local eform_cons_ti = "Time"
              }
              else if ("`eform'"=="or") {
              local eform1 = "Odds Ratio"
              if ("`e(cmd)'"=="asclogit" | "`e(cmd)'"=="cmclogit" | "`e(cmd)'"=
> ="cmmixlogit" | "`e(cmd)'"=="cmxtmixlogit" ) {
              local eform_cons_ti = "Rel. Risk"
              }
              else {
              local eform_cons_ti = "Odds"
              }
              }
              else if ("`eform'"=="irr") {
              local eform1 = "IRR"
              local eform_cons_ti = "Inc. Rate"
              }
              else if ("`eform'"=="rrr") {
              local eform1 = "RRR"
              local eform_cons_ti = "Rel. Risk"
              }
              else if ("`eform'"!="nohr") & ("`eform'"!="noshr") {
              local eform1 = upper("`eform'")
              }
              }
            - sreturn clear
            - sreturn local options `"`opts'"'
            = sreturn local options `""'
            - sreturn local opt `eform'
            = sreturn local opt 
            - sreturn local str `eform1'
            = sreturn local str 
            - if `"`eform1'"' != "" {
            = if `""' != "" {
              sreturn local eform eform(`"`eform1'"')
              }
            - else sreturn local eform ""
            - sreturn local eform_cons_ti `eform_cons_ti'
            = sreturn local eform_cons_ti 
            -------------------------------------------- end _get_eformopts ---
          - if inlist("`bmatrix'", "", "e(b)") & "`e(k_eform)'" == "0" {
          = if inlist("", "", "e(b)") & "" == "0" {
            local eform
            }
          - else local eform `"`s(str)'"'
          = else local eform `""'
          - local eform_cons_ti `"`s(eform_cons_ti)'"'
          = local eform_cons_ti `""'
          - if ("`e(consonly)'"!="1" | `"`eform_cons_ti'"'=="") {
          = if (""!="1" | `""'=="") {
          - local eformdi `"`s(str)'"'
          = local eformdi `""'
          - }
          - else {
            local eformdi `"`eform_cons_ti'"'
            }
          - local coefttl = cond(`"`eform'"'==`""', `"`coeftitle'"', `"`eformdi
> '"')
          = local coefttl = cond(`""'==`""', `""', `""')
          - local options `"`s(options)'"'
          = local options `""'
          - _get_diparmopts, diparmopts(`options') level(`level')
          = _get_diparmopts, diparmopts() level(95)
            ----------------------------------------- begin _get_diparmopts ---
            - if _caller() < 8.2 {
              _get_diparmopts_8 `0'
              exit
              }
            - version 9
            - local version : di "version " string(_caller()) ":"
            - syntax [, diparmopts(string asis) EXECute soptions bottom plus SY
> NTAXonly * ]
            - local goptions `options'
            = local goptions level(95)
            - SpliceGlobals junk , `goptions'
            = SpliceGlobals junk , level(95)
              ------------------------- begin _get_diparmopts.SpliceGlobals ---
              - syntax name(id="macro name" name=c_diparm) [, diparm(string asi
> s) Level(cilevel) dof(passthru) syntaxonly ]
              - if `"`dof'"' == "" & `"`e(df_r)'"' != "" {
              = if `""' == "" & `"11766"' != "" {
              - capture confirm integer number `e(df_r)'
              = capture confirm integer number 11766
              - if !c(rc) {
              - local gdof dof(`e(df_r)')
              = local gdof dof(11766)
              - }
              - capture
              - }
              - else local gdof `"`dof'"'
              = else local gdof `""'
              - local glevel `level'
              = local glevel 95
              - local lopt level(`glevel')
              = local lopt level(95)
              - if (`"`diparm'"' == "") exit
              = if (`""' == "") exit
              --------------------------- end _get_diparmopts.SpliceGlobals ---
            - local 0 `", `diparmopts'"'
            = local 0 `", "'
            - local diparmopts
            - local k 0
            - syntax [, diparm(string asis) * ]
            - while `"`diparm'"' != "" {
            = while `""' != "" {
              local ++k
              local single 1
              local after
              capture _on_colon_parse `diparm'
              if !c(rc) {
              local single 0
              local diparm `"`s(before)'"'
              local after `"`s(after)'"'
              }
              capture
              SpliceGlobals diparm , diparm(`diparm') `syntaxonly' `goptions'
              local diparm`k' `"`diparm'"'
              local diparmopts `"`diparmopts' : `diparm'"'
              if `single' | `"`:list retok after'"' == "" {
              local 0 `", `options'"'
              syntax [, diparm(string asis) * ]
              }
              else {
              local diparm `"`after'"'
              }
              }
            - if `"`soptions'"' == "" {
            = if `""' == "" {
            - syntax [, diparm(string asis) ]
            - }
            - if ("`execute'" == "") {
            = if ("" == "") {
            - sreturn clear
            - sreturn local options `"`options'"'
            = sreturn local options `""'
            - sreturn local diparm `"`diparmopts'"'
            = sreturn local diparm `""'
            - forval i = 1/`k' {
            = forval i = 1/0 {
              sreturn local diparm`i' `"`diparm`i''"'
              }
            - sreturn local k `k'
            = sreturn local k 0
            - exit
            ------------------------------------------- end _get_diparmopts ---
          - local NODIPARM : length local nodiparm
          - if `NODIPARM' {
          = if 0 {
            local options
            }
          - local GTOPTS parse(":") bind quotes
          - local k 0
          - if !`NODIPARM' {
          = if !0 {
          - if `"`e(diparm)'"' != "" {
          = if `""' != "" {
            local i 0
            local diparm `"`e(diparm)'"'
            }
          - else if `"`e(diparm1)'"' != "" {
          = else if `""' != "" {
            local i 1
            local diparm `"`e(diparm1)'"'
            }
          - while `:length local diparm' {
          = while 0 {
            gettoken diparm rest : diparm, `GTOPTS'
            while `:length local rest' {
            local ++k
            local diparm`k' : copy local diparm
            gettoken COLON rest : rest, `GTOPTS'
            gettoken diparm rest : rest, `GTOPTS'
            }
            local ++k
            local diparm`k' : copy local diparm
            local ++i
            local diparm `"`e(diparm`i')'"'
            }
          - }
          - if `:length local options' {
          = if 0 {
            local 0 `", `options'"'
            syntax [, diparm(string asis) *]
            if `k' & `:length local diparm' {
            local ++k
            local diparm`k' __sep__
            }
            while `:length local diparm' {
            gettoken diparm rest : diparm, `GTOPTS'
            while `:length local rest' {
            local ++k
            local diparm`k' : copy local diparm
            gettoken COLON rest : rest, `GTOPTS'
            gettoken diparm rest : rest, `GTOPTS'
            }
            local ++k
            local diparm`k' : copy local diparm
            local 0 `", `options'"'
            syntax [, diparm(string asis) *]
            }
            }
          - if "`markdown'" != "" {
          = if "" != "" {
            local lsize = c(linesize)
            set linesize 255
            }
          - `vv' mata: _coef_table()
          = version 11, missing: mata: _coef_table()
            --------------------------------------------- begin _get_diopts ---
            - version 11
            - syntax namelist(max=2) [, *]
            - gettoken name1 namelist : namelist
            - gettoken name2 namelist : namelist
            - GetDiopts diopts options, `options'
            = GetDiopts diopts options, 
              --------------------------------- begin _get_diopts.GetDiopts ---
              - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEleve
> ls NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells 
> NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sfo
> rmat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(
> string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV A
> BBREV
              - syntax namelist(max=2) [, `DIOPTS' *]
              = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevel
> s ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcell
> s EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cforma
> t(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passth
> ru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthr
> u) NOABBREV ABBREV *]
              - opts_exclusive "`allbaselevels' `noallbaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`allbaselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`baselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`emptycells' `noemptycells'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`fvlabel' `nofvlabel'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`omitted' `noomitted'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`lstretch' `nolstretch'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`cnsreport' `fullcnsreport'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`coeflegend' `selegend'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local K : list sizeof namelist
              - gettoken c_diopts c_opts : namelist
              - opts_exclusive "`coding' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`versus' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`abbrev' `noabbrev'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local allbaselevels `allbaselevels' `noallbaselevels'
              = local allbaselevels  
              - local baselevels `baselevels' `nobaselevels'
              = local baselevels  
              - local emptycells `emptycells' `noemptycells'
              = local emptycells  
              - local omitted `omitted' `noomitted'
              = local omitted  
              - local lstretch `lstretch' `nolstretch'
              = local lstretch  
              - local fvlabel `fvlabel' `nofvlabel'
              = local fvlabel  
              - local abbrev `abbrev' `noabbrev'
              = local abbrev  
              - if "`allbaselevels'`baselevels'" == "" {
              = if "" == "" {
              - if c(showbaselevels) == "all" {
                local allbaselevels allbaselevels
                }
              - else if c(showbaselevels) == "on" {
                local baselevels baselevels
                }
              - }
              - if "`emptycells'" == "" {
              = if "" == "" {
              - if c(showemptycells) == "off" {
                local emptycells noemptycells
                }
              - }
              - if "`omitted'" == "" {
              = if "" == "" {
              - if c(showomitted) == "off" {
                local omitted noomitted
                }
              - }
              - if "`lstretch'" == "" {
              = if "" == "" {
              - if c(lstretch) == "off" {
                local lstretch nolstretch
                }
              - }
              - if `:length local cformat' {
              = if 0 {
                confirm numeric format `cformat'
                if fmtwidth(`"`cformat'"') > 9 {
                local cformat "%9.0g"
                di "{txt}note: invalid cformat(), using default"
                }
                sreturn local cformat `"`cformat'"'
                local cformat `"cformat(`cformat')"'
                }
              - if `:length local sformat' {
              = if 0 {
                confirm numeric format `sformat'
                if fmtwidth(`"`sformat'"') > 8 {
                local sformat "%8.2f"
                di "{txt}note: invalid sformat(), using default"
                }
                sreturn local sformat `"`sformat'"'
                local sformat `"sformat(`sformat')"'
                }
              - if `:length local pformat' {
              = if 0 {
                confirm numeric format `pformat'
                if fmtwidth(`"`pformat'"') > 5 {
                local pformat "%5.3f"
                di "{txt}note: invalid pformat(), using default"
                }
                sreturn local pformat `"`pformat'"'
                local pformat `"pformat(`pformat')"'
                }
              - if `K' == 1 & `:length local options' {
              = if 2 == 1 & 0 {
                syntax namelist(max=2) [, `DIOPTS']
                }
              - if reldif(`level', c(level)) > 1e-3 {
              = if reldif(95, c(level)) > 1e-3 {
                local levelopt level(`level')
                }
              - Wrapon , `fvwrapon'
              = Wrapon , 
                ---------------------------------- begin _get_diopts.Wrapon ---
                - capture syntax [, WOrd WIdth]
                - if c(rc) {
                  di as err "invalid fvwrapon() option;"
                  syntax [, WOrd WIdth]
                  exit 198
                  }
                - opts_exclusive "`word' `width'" fvwrapon
                = opts_exclusive " " fvwrapon
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local fvwrapon `word' `width'
                = local fvwrapon  
                - if `:length local fvwrapon' {
                = if 0 {
                  c_local fvwrapon fvwrapon(`fvwrapon')
                  }
                ------------------------------------ end _get_diopts.Wrapon ---
              - if "`fvwrap'" != "" {
              = if "" != "" {
                FVWrap, `fvwrap'
                }
              - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `basele
> vels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflege
> nd' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvw
> rap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
              = c_local diopts                         
              - if `K' == 2 {
              = if 2 == 2 {
              - c_local `c_opts' `"`options'"'
              = c_local  options `""'
              - }
              - sreturn local coding `coding'
              = sreturn local coding 
              - sreturn local versus `versus'
              = sreturn local versus 
              - sreturn local compare `compare'
              = sreturn local compare 
              - sreturn local level `level'
              = sreturn local level 95
              ----------------------------------- end _get_diopts.GetDiopts ---
            - c_local `name1' `"`diopts'"'
            = c_local __000007 `""'
            - local snames : s(macros)
            - foreach sname of local snames {
            - local S_`sname' = s(`sname')
            = local S_level = s(level)
            - }
            - local S_`sname' = s(`sname')
            = local S_k = s(k)
            - }
            - sreturn clear
            - GetDiopts DEFAULT
              --------------------------------- begin _get_diopts.GetDiopts ---
              - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEleve
> ls NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells 
> NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sfo
> rmat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(
> string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV A
> BBREV
              - syntax namelist(max=2) [, `DIOPTS' *]
              = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevel
> s ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcell
> s EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cforma
> t(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passth
> ru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthr
> u) NOABBREV ABBREV *]
              - opts_exclusive "`allbaselevels' `noallbaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`allbaselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`baselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`emptycells' `noemptycells'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`fvlabel' `nofvlabel'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`omitted' `noomitted'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`lstretch' `nolstretch'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`cnsreport' `fullcnsreport'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`coeflegend' `selegend'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local K : list sizeof namelist
              - gettoken c_diopts c_opts : namelist
              - opts_exclusive "`coding' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`versus' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`abbrev' `noabbrev'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local allbaselevels `allbaselevels' `noallbaselevels'
              = local allbaselevels  
              - local baselevels `baselevels' `nobaselevels'
              = local baselevels  
              - local emptycells `emptycells' `noemptycells'
              = local emptycells  
              - local omitted `omitted' `noomitted'
              = local omitted  
              - local lstretch `lstretch' `nolstretch'
              = local lstretch  
              - local fvlabel `fvlabel' `nofvlabel'
              = local fvlabel  
              - local abbrev `abbrev' `noabbrev'
              = local abbrev  
              - if "`allbaselevels'`baselevels'" == "" {
              = if "" == "" {
              - if c(showbaselevels) == "all" {
                local allbaselevels allbaselevels
                }
              - else if c(showbaselevels) == "on" {
                local baselevels baselevels
                }
              - }
              - if "`emptycells'" == "" {
              = if "" == "" {
              - if c(showemptycells) == "off" {
                local emptycells noemptycells
                }
              - }
              - if "`omitted'" == "" {
              = if "" == "" {
              - if c(showomitted) == "off" {
                local omitted noomitted
                }
              - }
              - if "`lstretch'" == "" {
              = if "" == "" {
              - if c(lstretch) == "off" {
                local lstretch nolstretch
                }
              - }
              - if `:length local cformat' {
              = if 0 {
                confirm numeric format `cformat'
                if fmtwidth(`"`cformat'"') > 9 {
                local cformat "%9.0g"
                di "{txt}note: invalid cformat(), using default"
                }
                sreturn local cformat `"`cformat'"'
                local cformat `"cformat(`cformat')"'
                }
              - if `:length local sformat' {
              = if 0 {
                confirm numeric format `sformat'
                if fmtwidth(`"`sformat'"') > 8 {
                local sformat "%8.2f"
                di "{txt}note: invalid sformat(), using default"
                }
                sreturn local sformat `"`sformat'"'
                local sformat `"sformat(`sformat')"'
                }
              - if `:length local pformat' {
              = if 0 {
                confirm numeric format `pformat'
                if fmtwidth(`"`pformat'"') > 5 {
                local pformat "%5.3f"
                di "{txt}note: invalid pformat(), using default"
                }
                sreturn local pformat `"`pformat'"'
                local pformat `"pformat(`pformat')"'
                }
              - if `K' == 1 & `:length local options' {
              = if 1 == 1 & 0 {
                syntax namelist(max=2) [, `DIOPTS']
                }
              - if reldif(`level', c(level)) > 1e-3 {
              = if reldif(95, c(level)) > 1e-3 {
                local levelopt level(`level')
                }
              - Wrapon , `fvwrapon'
              = Wrapon , 
                ---------------------------------- begin _get_diopts.Wrapon ---
                - capture syntax [, WOrd WIdth]
                - if c(rc) {
                  di as err "invalid fvwrapon() option;"
                  syntax [, WOrd WIdth]
                  exit 198
                  }
                - opts_exclusive "`word' `width'" fvwrapon
                = opts_exclusive " " fvwrapon
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local fvwrapon `word' `width'
                = local fvwrapon  
                - if `:length local fvwrapon' {
                = if 0 {
                  c_local fvwrapon fvwrapon(`fvwrapon')
                  }
                ------------------------------------ end _get_diopts.Wrapon ---
              - if "`fvwrap'" != "" {
              = if "" != "" {
                FVWrap, `fvwrap'
                }
              - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `basele
> vels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflege
> nd' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvw
> rap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
              = c_local DEFAULT                         
              - if `K' == 2 {
              = if 1 == 2 {
                c_local `c_opts' `"`options'"'
                }
              - sreturn local coding `coding'
              = sreturn local coding 
              - sreturn local versus `versus'
              = sreturn local versus 
              - sreturn local compare `compare'
              = sreturn local compare 
              - sreturn local level `level'
              = sreturn local level 95
              ----------------------------------- end _get_diopts.GetDiopts ---
            - if `"`name2'"' == "" {
            = if `""' == "" {
            - GetDiopts DUPS, `options'
            = GetDiopts DUPS, 
              --------------------------------- begin _get_diopts.GetDiopts ---
              - local DIOPTS Level(cilevel) vsquish NOALLBASElevels ALLBASEleve
> ls NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcells EMPTYcells 
> NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cformat(string) sfo
> rmat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passthru) FVWRAPON(
> string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthru) NOABBREV A
> BBREV
              - syntax namelist(max=2) [, `DIOPTS' *]
              = syntax namelist(max=2) [, Level(cilevel) vsquish NOALLBASElevel
> s ALLBASElevels NOBASElevels BASElevels noCNSReport FULLCNSReport NOEMPTYcell
> s EMPTYcells NOOMITted OMITted NOLSTRETCH LSTRETCH COEFLegend SELEGEND cforma
> t(string) sformat(string) pformat(string) CODING VERSUS COMPARE FVWRAP(passth
> ru) FVWRAPON(string) NOFVLABel FVLABel NOCI NOPValues MARKDOWN CITYPE(passthr
> u) NOABBREV ABBREV *]
              - opts_exclusive "`allbaselevels' `noallbaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`allbaselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`baselevels' `nobaselevels'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`emptycells' `noemptycells'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`fvlabel' `nofvlabel'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`omitted' `noomitted'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`lstretch' `nolstretch'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`cnsreport' `fullcnsreport'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`coeflegend' `selegend'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local K : list sizeof namelist
              - gettoken c_diopts c_opts : namelist
              - opts_exclusive "`coding' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`versus' `compare'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - opts_exclusive "`abbrev' `noabbrev'"
              = opts_exclusive " "
                -------------------------------------- begin opts_exclusive ---
                - version 8.2
                - args opts optname errcode
                - local opts `opts'
                = local opts  
                - local n 0
                - while `"`opts'"' != "" {
                = while `""' != "" {
                  local ++n
                  gettoken item`n' opts : opts, bind
                  }
                - if `n' < 2 {
                = if 0 < 2 {
                - exit
                ---------------------------------------- end opts_exclusive ---
              - local allbaselevels `allbaselevels' `noallbaselevels'
              = local allbaselevels  
              - local baselevels `baselevels' `nobaselevels'
              = local baselevels  
              - local emptycells `emptycells' `noemptycells'
              = local emptycells  
              - local omitted `omitted' `noomitted'
              = local omitted  
              - local lstretch `lstretch' `nolstretch'
              = local lstretch  
              - local fvlabel `fvlabel' `nofvlabel'
              = local fvlabel  
              - local abbrev `abbrev' `noabbrev'
              = local abbrev  
              - if "`allbaselevels'`baselevels'" == "" {
              = if "" == "" {
              - if c(showbaselevels) == "all" {
                local allbaselevels allbaselevels
                }
              - else if c(showbaselevels) == "on" {
                local baselevels baselevels
                }
              - }
              - if "`emptycells'" == "" {
              = if "" == "" {
              - if c(showemptycells) == "off" {
                local emptycells noemptycells
                }
              - }
              - if "`omitted'" == "" {
              = if "" == "" {
              - if c(showomitted) == "off" {
                local omitted noomitted
                }
              - }
              - if "`lstretch'" == "" {
              = if "" == "" {
              - if c(lstretch) == "off" {
                local lstretch nolstretch
                }
              - }
              - if `:length local cformat' {
              = if 0 {
                confirm numeric format `cformat'
                if fmtwidth(`"`cformat'"') > 9 {
                local cformat "%9.0g"
                di "{txt}note: invalid cformat(), using default"
                }
                sreturn local cformat `"`cformat'"'
                local cformat `"cformat(`cformat')"'
                }
              - if `:length local sformat' {
              = if 0 {
                confirm numeric format `sformat'
                if fmtwidth(`"`sformat'"') > 8 {
                local sformat "%8.2f"
                di "{txt}note: invalid sformat(), using default"
                }
                sreturn local sformat `"`sformat'"'
                local sformat `"sformat(`sformat')"'
                }
              - if `:length local pformat' {
              = if 0 {
                confirm numeric format `pformat'
                if fmtwidth(`"`pformat'"') > 5 {
                local pformat "%5.3f"
                di "{txt}note: invalid pformat(), using default"
                }
                sreturn local pformat `"`pformat'"'
                local pformat `"pformat(`pformat')"'
                }
              - if `K' == 1 & `:length local options' {
              = if 1 == 1 & 0 {
                syntax namelist(max=2) [, `DIOPTS']
                }
              - if reldif(`level', c(level)) > 1e-3 {
              = if reldif(95, c(level)) > 1e-3 {
                local levelopt level(`level')
                }
              - Wrapon , `fvwrapon'
              = Wrapon , 
                ---------------------------------- begin _get_diopts.Wrapon ---
                - capture syntax [, WOrd WIdth]
                - if c(rc) {
                  di as err "invalid fvwrapon() option;"
                  syntax [, WOrd WIdth]
                  exit 198
                  }
                - opts_exclusive "`word' `width'" fvwrapon
                = opts_exclusive " " fvwrapon
                  ------------------------------------ begin opts_exclusive ---
                  - version 8.2
                  - args opts optname errcode
                  - local opts `opts'
                  = local opts  
                  - local n 0
                  - while `"`opts'"' != "" {
                  = while `""' != "" {
                    local ++n
                    gettoken item`n' opts : opts, bind
                    }
                  - if `n' < 2 {
                  = if 0 < 2 {
                  - exit
                  -------------------------------------- end opts_exclusive ---
                - local fvwrapon `word' `width'
                = local fvwrapon  
                - if `:length local fvwrapon' {
                = if 0 {
                  c_local fvwrapon fvwrapon(`fvwrapon')
                  }
                ------------------------------------ end _get_diopts.Wrapon ---
              - if "`fvwrap'" != "" {
              = if "" != "" {
                FVWrap, `fvwrap'
                }
              - c_local `c_diopts' `levelopt' `vsquish' `allbaselevels' `basele
> vels' `cnsreport' `fullcnsreport' `emptycells' `omitted' `lstretch' `coeflege
> nd' `selegend' `cformat' `sformat' `pformat' `coding' `versus' `compare' `fvw
> rap' `fvwrapon' `fvlabel' `noci' `nopvalues' `markdown' `citype' `abbrev'
              = c_local DUPS                         
              - if `K' == 2 {
              = if 1 == 2 {
                c_local `c_opts' `"`options'"'
                }
              - sreturn local coding `coding'
              = sreturn local coding 
              - sreturn local versus `versus'
              = sreturn local versus 
              - sreturn local compare `compare'
              = sreturn local compare 
              - sreturn local level `level'
              = sreturn local level 95
              ----------------------------------- end _get_diopts.GetDiopts ---
            - }
            - else {
              GetDiopts DUPS options, `options'
              c_local `name2' `"`options'"'
              }
            - local DUPS : list DUPS - DEFAULT
            - gettoken DUPS : DUPS
            - if `"`DUPS'"' != "" {
            = if `""' != "" {
              if (strpos(`"`DUPS'"', "(")) {
              gettoken DUPS : DUPS, parse("(")
              local DUPS `"`DUPS'()"'
              }
              di as err "duplicate {bf:`DUPS'} option not allowed"
              exit 198
              }
            - sreturn clear
            - foreach sname of local snames {
            - sreturn local `sname' = `"`S_`sname''"'
            = sreturn local level = `"95"'
            - }
            - sreturn local `sname' = `"`S_`sname''"'
            = sreturn local k = `"0"'
            - }
            ----------------------------------------------- end _get_diopts ---
------------------------------------------------------------------------------
    paygrade |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
F20_to_mal~r |  -1.270902   .3470167    -3.66   0.000    -1.951112   -.5906914
             |
        male#|
          c. |
F20_to_mal~r |
       Male  |   1.008527   .9126851     1.11   0.269    -.7804868    2.797541
             |
F19_to_mal~r |  -1.246475   .3469735    -3.59   0.000    -1.926601   -.5663499
             |
        male#|
          c. |
F19_to_mal~r |
       Male  |   1.044831    .872542     1.20   0.231    -.6654957    2.755158
             |
F18_to_mal~r |   -1.21106   .3317542    -3.65   0.000    -1.861353   -.5607672
             |
        male#|
          c. |
F18_to_mal~r |
       Male  |   1.008413   .8666051     1.16   0.245    -.6902764    2.707103
             |
F17_to_mal~r |  -1.200168   .3261981    -3.68   0.000    -1.839571    -.560766
             |
        male#|
          c. |
F17_to_mal~r |
       Male  |   .8400881   .8301755     1.01   0.312    -.7871933     2.46737
             |
F16_to_mal~r |  -1.138314   .3065771    -3.71   0.000    -1.739256   -.5373719
             |
        male#|
          c. |
F16_to_mal~r |
       Male  |   .7365726   .7926168     0.93   0.353    -.8170876    2.290233
             |
F15_to_mal~r |  -1.055995   .3043626    -3.47   0.001    -1.652596   -.4593937
             |
        male#|
          c. |
F15_to_mal~r |
       Male  |   .6355544   .7918425     0.80   0.422    -.9165881    2.187697
             |
F14_to_mal~r |  -1.022401   .3021961    -3.38   0.001    -1.614756   -.4300466
             |
        male#|
          c. |
F14_to_mal~r |
       Male  |   .5881746   .7647617     0.77   0.442     -.910885    2.087234
             |
F13_to_mal~r |  -.9577424   .2901285    -3.30   0.001    -1.526442   -.3890425
             |
        male#|
          c. |
F13_to_mal~r |
       Male  |  -.0376787   .6967018    -0.05   0.957     -1.40333    1.327972
             |
F12_to_mal~r |  -.9343178   .2764535    -3.38   0.001    -1.476212   -.3924231
             |
        male#|
          c. |
F12_to_mal~r |
       Male  |  -.0951803   .6913682    -0.14   0.891    -1.450377    1.260016
             |
F11_to_mal~r |  -1.001313   .2747578    -3.64   0.000    -1.539884   -.4627426
             |
        male#|
          c. |
F11_to_mal~r |
       Male  |  -.0227287   .6577751    -0.03   0.972    -1.312077     1.26662
             |
F10_to_mal~r |  -.9376978   .2700572    -3.47   0.001    -1.467055   -.4083409
             |
        male#|
          c. |
F10_to_mal~r |
       Male  |   .2509549   .6254201     0.40   0.688    -.9749721    1.476882
             |
F9_to_male~r |  -.7450566    .262693    -2.84   0.005    -1.259978   -.2301347
             |
        male#|
          c. |
F9_to_male~r |
       Male  |    .097026   .5990432     0.16   0.871    -1.077198     1.27125
             |
F8_to_male~r |  -.6761147   .2599073    -2.60   0.009    -1.185576   -.1666533
             |
        male#|
          c. |
F8_to_male~r |
       Male  |   .3989468   .5685908     0.70   0.483    -.7155854    1.513479
             |
F7_to_male~r |  -.6637322   .2521645    -2.63   0.008    -1.158016   -.1694481
             |
        male#|
          c. |
F7_to_male~r |
       Male  |    .827773   .5462067     1.52   0.130    -.2428825    1.898428
             |
F6_to_male~r |  -.6961525   .2485284    -2.80   0.005    -1.183309   -.2089957
             |
        male#|
          c. |
F6_to_male~r |
       Male  |   .7297481   .5294817     1.38   0.168    -.3081237     1.76762
             |
F5_to_male~r |  -.6699161   .2355191    -2.84   0.004    -1.131573   -.2082596
             |
        male#|
          c. |
F5_to_male~r |
       Male  |   .8532339   .4984103     1.71   0.087    -.1237328    1.830201
             |
F4_to_male~r |  -.6267917   .2325981    -2.69   0.007    -1.082723   -.1708608
             |
        male#|
          c. |
F4_to_male~r |
       Male  |   .9011427   .4867122     1.85   0.064    -.0528938    1.855179
             |
F3_to_male~r |  -.6580317   .2279045    -2.89   0.004    -1.104762   -.2113012
             |
        male#|
          c. |
F3_to_male~r |
       Male  |   .7237081    .469726     1.54   0.123    -.1970327    1.644449
             |
F2_to_male~r |  -.6554916   .2218338    -2.95   0.003    -1.090323   -.2206605
             |
        male#|
          c. |
F2_to_male~r |
       Male  |   .9184889   .4538769     2.02   0.043      .028815    1.808163
             |
F1_to_male~r |  -.6489137   .2210023    -2.94   0.003    -1.082115   -.2157126
             |
        male#|
          c. |
F1_to_male~r |
       Male  |   1.031921   .4456619     2.32   0.021     .1583503    1.905492
             |
L0_to_male~r |  -.6560217    .221002    -2.97   0.003    -1.089222   -.2228212
             |
        male#|
          c. |
L0_to_male~r |
       Male  |   1.029597   .4455461     2.31   0.021     .1562526    1.902941
             |
L1_to_male~r |  -.6711223   .2210093    -3.04   0.002    -1.104337   -.2379075
             |
        male#|
          c. |
L1_to_male~r |
       Male  |    1.05131   .4456308     2.36   0.018     .1777999     1.92482
             |
L2_to_male~r |  -.6650392   .2226698    -2.99   0.003    -1.101509   -.2285694
             |
        male#|
          c. |
L2_to_male~r |
       Male  |   1.246527   .4541367     2.74   0.006     .3563433     2.13671
             |
L3_to_male~r |  -.5980889    .227005    -2.63   0.008    -1.043056   -.1531215
             |
        male#|
          c. |
L3_to_male~r |
       Male  |   1.185305    .460293     2.58   0.010     .2830544    2.087555
             |
L4_to_male~r |  -.5769164   .2345252    -2.46   0.014    -1.036625   -.1172081
             |
        male#|
          c. |
L4_to_male~r |
       Male  |   1.160937    .464048     2.50   0.012     .2513258    2.070548
             |
L5_to_male~r |  -.4652705   .2385841    -1.95   0.051    -.9329348    .0023938
             |
        male#|
          c. |
L5_to_male~r |
       Male  |   .9128953   .4792263     1.90   0.057    -.0264677    1.852258
             |
L6_to_male~r |   -.418098   .2428733    -1.72   0.085    -.8941699    .0579739
             |
        male#|
          c. |
L6_to_male~r |
       Male  |    1.04607   .4908952     2.13   0.033     .0838341    2.008306
             |
L7_to_male~r |   -.363044   .2451068    -1.48   0.139    -.8434939    .1174059
             |
        male#|
          c. |
L7_to_male~r |
       Male  |   1.221797   .5085308     2.40   0.016     .2249919    2.218601
             |
L8_to_male~r |  -.2383619   .2522169    -0.95   0.345    -.7327488    .2560251
             |
        male#|
          c. |
L8_to_male~r |
       Male  |   1.301358   .5177908     2.51   0.012     .2864019    2.316313
             |
L9_to_male~r |  -.2230501   .2573453    -0.87   0.386    -.7274895    .2813892
             |
        male#|
          c. |
L9_to_male~r |
       Male  |   1.202522    .533297     2.25   0.024     .1571717    2.247872
             |
L10_to_mal~r |   -.210649   .2627894    -0.80   0.423    -.7257596    .3044617
             |
        male#|
          c. |
L10_to_mal~r |
       Male  |   1.273793   .5504726     2.31   0.021     .1947757     2.35281
             |
L11_to_mal~r |  -.1709044    .264252    -0.65   0.518    -.6888821    .3470734
             |
        male#|
          c. |
L11_to_mal~r |
       Male  |   1.449934   .5671233     2.56   0.011     .3382783     2.56159
             |
L12_to_mal~r |  -.0564697   .2833126    -0.20   0.842    -.6118093      .49887
             |
        male#|
          c. |
L12_to_mal~r |
       Male  |   1.673788   .6041916     2.77   0.006     .4894728    2.858104
             |
L13_to_mal~r |  -.0624455    .288597    -0.22   0.829    -.6281435    .5032525
             |
        male#|
          c. |
L13_to_mal~r |
       Male  |   1.690077   .6069582     2.78   0.005     .5003387    2.879816
             |
L14_to_mal~r |  -.0827256   .2924467    -0.28   0.777    -.6559696    .4905184
             |
        male#|
          c. |
L14_to_mal~r |
       Male  |   1.872317   .6193918     3.02   0.003     .6582062    3.086427
             |
L15_to_mal~r |  -.1568756   .2964527    -0.53   0.597     -.737972    .4242209
             |
        male#|
          c. |
L15_to_mal~r |
       Male  |   2.106307   .6212033     3.39   0.001     .8886462    3.323969
             |
L16_to_mal~r |  -.0374746   .3007019    -0.12   0.901    -.6269001    .5519509
             |
        male#|
          c. |
L16_to_mal~r |
       Male  |   1.982947   .6240689     3.18   0.001      .759669    3.206226
             |
L17_to_mal~r |  -.0608989    .302923    -0.20   0.841    -.6546781    .5328803
             |
        male#|
          c. |
L17_to_mal~r |
       Male  |   1.895075   .6380894     2.97   0.003     .6443145    3.145836
             |
L18_to_mal~r |  -.0001624   .3029718    -0.00   1.000    -.5940374    .5937125
             |
        male#|
          c. |
L18_to_mal~r |
       Male  |   1.845053    .650626     2.84   0.005     .5697188    3.120388
             |
L19_to_mal~r |  -.0563285   .3097379    -0.18   0.856     -.663466     .550809
             |
        male#|
          c. |
L19_to_mal~r |
       Male  |   2.008837   .6771215     2.97   0.003     .6815664    3.336107
             |
L20_to_mal~r |   -.042753   .3098151    -0.14   0.890     -.650042    .5645359
             |
        male#|
          c. |
L20_to_mal~r |
       Male  |   1.873085   .7045518     2.66   0.008     .4920464    3.254123
             |
L21_to_mal~r |   .0548573   .3196176     0.17   0.864    -.5716462    .6813607
             |
        male#|
          c. |
L21_to_mal~r |
       Male  |   1.742811   .7089767     2.46   0.014     .3530996    3.132523
             |
L22_to_mal~r |   .0911049   .3242666     0.28   0.779    -.5445114    .7267211
             |
        male#|
          c. |
L22_to_mal~r |
       Male  |   1.737487   .7296148     2.38   0.017     .3073213    3.167653
             |
L23_to_mal~r |   .1007389   .3385455     0.30   0.766    -.5628664    .7643442
             |
        male#|
          c. |
L23_to_mal~r |
       Male  |   1.727838   .7360726     2.35   0.019      .285014    3.170663
             |
L24_to_mal~r |   .1239193   .3417158     0.36   0.717    -.5459003    .7937389
             |
        male#|
          c. |
L24_to_mal~r |
       Male  |   1.776091   .7377179     2.41   0.016     .3300414     3.22214
             |
L25_to_mal~r |   .2807963   .3450188     0.81   0.416    -.3954978    .9570903
             |
        male#|
          c. |
L25_to_mal~r |
       Male  |   1.594785   .7393848     2.16   0.031     .1454687    3.044102
             |
L26_to_mal~r |   .3017897   .3483998     0.87   0.386    -.3811317     .984711
             |
        male#|
          c. |
L26_to_mal~r |
       Male  |   1.743234   .7411776     2.35   0.019     .2904035    3.196065
             |
L27_to_mal~r |   .2598907   .3518703     0.74   0.460    -.4298335    .9496148
             |
        male#|
          c. |
L27_to_mal~r |
       Male  |   1.766994   .7429338     2.38   0.017     .3107208    3.223267
             |
L28_to_mal~r |   .1453091   .3629007     0.40   0.689    -.5660365    .8566546
             |
        male#|
          c. |
L28_to_mal~r |
       Male  |   1.833644   .7913374     2.32   0.021     .2824914    3.384796
             |
L29_to_mal~r |   .2993194   .3681599     0.81   0.416     -.422335    1.020974
             |
        male#|
          c. |
L29_to_mal~r |
       Male  |   1.700386   .8197937     2.07   0.038     .0934549    3.307318
             |
L30_to_mal~r |   .2802284   .3828851     0.73   0.464    -.4702899    1.030747
             |
        male#|
          c. |
L30_to_mal~r |
       Male  |   1.749809   .8268541     2.12   0.034     .1290385     3.37058
             |
        male#|
F47_to_mal~r |
   Female#0  |   11.41202    7.86917     1.45   0.147    -4.012852     26.8369
     Male#0  |          0  (omitted)
             |
        male#|
F46_to_mal~r |
   Female#0  |          0  (omitted)
     Male#0  |          0  (omitted)
             |
        male#|
F45_to_mal~r |
   Female#1  |  -3.152242   2.512412    -1.25   0.210    -8.076987    1.772502
     Male#0  |          0  (omitted)
     Male#1  |          0  (empty)
             |
        male#|
F44_to_mal~r |
   Female#1  |  -2.248559   1.479872    -1.52   0.129    -5.149353    .6522357
     Male#0  |          0  (omitted)
     Male#1  |          0  (empty)
             |
        male#|
F43_to_mal~r |
   Female#1  |  -3.106504   1.137378    -2.73   0.006    -5.335953    -.877054
     Male#0  |          0  (omitted)
     Male#1  |          0  (empty)
             |
        male#|
F42_to_mal~r |
   Female#1  |  -1.598291   .8950908    -1.79   0.074    -3.352817    .1562351
     Male#0  |          0  (omitted)
     Male#1  |          0  (empty)
             |
        male#|
F41_to_mal~r |
   Female#1  |  -1.644845   .8947078    -1.84   0.066     -3.39862    .1089308
     Male#0  |          0  (omitted)
     Male#1  |          0  (empty)
             |
        male#|
F40_to_mal~r |
   Female#1  |  -2.075492   .7617397    -2.72   0.006    -3.568628   -.5823559
     Male#0  |          0  (omitted)
     Male#1  |          0  (empty)
             |
        male#|
F39_to_mal~r |
   Female#1  |  -2.108343   .6515731    -3.24   0.001    -3.385534   -.8311519
     Male#0  |          0  (omitted)
     Male#1  |          0  (empty)
             |
        male#|
F38_to_mal~r |
   Female#1  |  -1.888045   .6118235    -3.09   0.002     -3.08732   -.6887698
     Male#0  |          0  (omitted)
     Male#1  |          0  (empty)
             |
        male#|
F37_to_mal~r |
   Female#1  |  -1.904879   .6117458    -3.11   0.002    -3.104002   -.7057563
     Male#0  |          0  (omitted)
     Male#1  |          0  (empty)
             |
        male#|
F36_to_mal~r |
   Female#1  |  -2.146126   .4853381    -4.42   0.000    -3.097469   -1.194783
     Male#0  |   4.668208   2.513053     1.86   0.063    -.2577923    9.594207
     Male#1  |          0  (omitted)
             |
        male#|
F35_to_mal~r |
   Female#1  |  -2.087211   .4766332    -4.38   0.000    -3.021491   -1.152931
     Male#0  |   4.668208   2.513053     1.86   0.063    -.2577923    9.594207
     Male#1  |          0  (omitted)
             |
        male#|
F34_to_mal~r |
   Female#1  |  -2.060158    .460478    -4.47   0.000    -2.962771   -1.157545
     Male#0  |   4.668208    1.77762     2.63   0.009     1.183779    8.152636
     Male#1  |          0  (omitted)
             |
        male#|
F33_to_mal~r |
   Female#1  |  -1.970228   .4458573    -4.42   0.000    -2.844182   -1.096273
     Male#0  |   4.668208    1.77762     2.63   0.009     1.183779    8.152636
     Male#1  |          0  (omitted)
             |
        male#|
F32_to_mal~r |
   Female#1  |  -1.855525   .4412202    -4.21   0.000     -2.72039   -.9906606
     Male#0  |   4.668208    1.77762     2.63   0.009     1.183779    8.152636
     Male#1  |          0  (omitted)
             |
        male#|
F31_to_mal~r |
   Female#1  |  -1.647188   .4192051    -3.93   0.000      -2.4689   -.8254767
     Male#0  |   4.668208    1.77762     2.63   0.009     1.183779    8.152636
     Male#1  |          0  (omitted)
             |
        male#|
F30_to_mal~r |
   Female#1  |  -1.715148   .4118292    -4.16   0.000    -2.522402   -.9078947
     Male#0  |   3.001541   1.451929     2.07   0.039     .1555204    5.847561
     Male#1  |          0  (omitted)
             |
        male#|
F29_to_mal~r |
   Female#1  |  -1.560741    .401279    -3.89   0.000    -2.347315   -.7741681
     Male#0  |   .5935104   1.146579     0.52   0.605    -1.653975    2.840995
     Male#1  |          0  (omitted)
             |
        male#|
F28_to_mal~r |
   Female#1  |    -1.5496   .4005403    -3.87   0.000    -2.334725   -.7644743
     Male#0  |   .6089953   1.144571     0.53   0.595    -1.634553    2.852544
     Male#1  |          0  (omitted)
             |
        male#|
F27_to_mal~r |
   Female#1  |  -1.491187   .3904039    -3.82   0.000    -2.256443   -.7259306
     Male#0  |   .7573404   1.142152     0.66   0.507    -1.481467    2.996147
     Male#1  |          0  (omitted)
             |
        male#|
F26_to_mal~r |
   Female#1  |   -1.41381   .3812661    -3.71   0.000    -2.161155   -.6664657
     Male#0  |   .2435116   .8990498     0.27   0.787    -1.518775    2.005798
     Male#1  |          0  (omitted)
             |
        male#|
F25_to_mal~r |
   Female#1  |  -1.254509   .3728664    -3.36   0.001    -1.985389   -.5236295
     Male#0  |   .1274151   .8462816     0.15   0.880    -1.531437    1.786267
     Male#1  |          0  (omitted)
             |
        male#|
F24_to_mal~r |
   Female#1  |  -1.247609    .368511    -3.39   0.001    -1.969951    -.525266
     Male#0  |   .1826112   .8454169     0.22   0.829    -1.474546    1.839768
     Male#1  |          0  (omitted)
             |
        male#|
F23_to_mal~r |
   Female#1  |  -1.294922   .3646491    -3.55   0.000    -2.009694    -.580149
     Male#0  |   .2161753   .8450759     0.26   0.798    -1.440313    1.872664
     Male#1  |          0  (omitted)
             |
        male#|
F22_to_mal~r |
   Female#1  |  -1.238195   .3608813    -3.43   0.001    -1.945582   -.5308077
     Male#0  |   .1687551   .8446554     0.20   0.842    -1.486909     1.82442
     Male#1  |          0  (omitted)
             |
        male#|
F21_to_mal~r |
   Female#1  |  -1.286626   .3537274    -3.64   0.000     -1.97999   -.5932616
     Male#0  |   .2133389   .8442981     0.25   0.801    -1.441625    1.868303
     Male#1  |          0  (omitted)
             |
        male#|
L31_to_mal~r |
   Female#1  |   .2905811   .3925861     0.74   0.459    -.4789527    1.060115
     Male#0  |  -1.980617   .7335842    -2.70   0.007    -3.418563   -.5426701
     Male#1  |          0  (omitted)
             |
        male#|
L32_to_mal~r |
   Female#1  |   .2037919   .4198108     0.49   0.627    -.6191069    1.026691
     Male#0  |  -1.848301   .7666626    -2.41   0.016    -3.351086   -.3455152
     Male#1  |          0  (omitted)
             |
        male#|
L33_to_mal~r |
   Female#1  |   .2025348   .4209823     0.48   0.630    -.6226601     1.02773
     Male#0  |  -1.890137   .7670625    -2.46   0.014    -3.393706   -.3865672
     Male#1  |          0  (omitted)
             |
        male#|
L34_to_mal~r |
   Female#1  |   .2676549   .4299093     0.62   0.534    -.5750386    1.110348
     Male#0  |  -1.830321   .7672556    -2.39   0.017    -3.334269   -.3263733
     Male#1  |          0  (omitted)
             |
        male#|
L35_to_mal~r |
   Female#1  |   .2586517   .4629511     0.56   0.576    -.6488092    1.166113
     Male#0  |  -2.079935   .8053137    -2.58   0.010    -3.658483   -.5013865
     Male#1  |          0  (omitted)
             |
        male#|
L36_to_mal~r |
   Female#1  |   .8173495   .5070508     1.61   0.107     -.176554    1.811253
     Male#0  |  -2.058688   .8502798    -2.42   0.015    -3.725377   -.3919982
     Male#1  |          0  (omitted)
             |
        male#|
L37_to_mal~r |
   Female#1  |   .8220852   .5074748     1.62   0.105    -.1726493     1.81682
     Male#0  |  -2.038546   .8507648    -2.40   0.017    -3.706186   -.3709066
     Male#1  |          0  (omitted)
             |
        male#|
L38_to_mal~r |
   Female#1  |   .7420218   .5702682     1.30   0.193    -.3757984    1.859842
     Male#0  |  -2.174214   1.031228    -2.11   0.035    -4.195592   -.1528354
     Male#1  |          0  (omitted)
             |
        male#|
L39_to_mal~r |
   Female#1  |   .4330339   .6569167     0.66   0.510    -.8546315    1.720699
     Male#0  |  -.6232483   1.264991    -0.49   0.622     -3.10284    1.856344
     Male#1  |          0  (omitted)
             |
        male#|
L40_to_mal~r |
   Female#1  |   .0988916   .6807312     0.15   0.884    -1.235454    1.433238
     Male#0  |  -.6205697     1.2654    -0.49   0.624    -3.100963    1.859824
     Male#1  |          0  (omitted)
             |
        male#|
L41_to_mal~r |
   Female#1  |  -.4471609   .7714287    -0.58   0.562    -1.959289    1.064967
     Male#0  |  -.0142897   1.464919    -0.01   0.992    -2.885773    2.857194
     Male#1  |          0  (omitted)
             |
        male#|
L42_to_mal~r |
   Female#1  |  -.4814091   .8566859    -0.56   0.574    -2.160655    1.197837
     Male#0  |  -2.501461   2.590072    -0.97   0.334     -7.57843    2.575509
     Male#1  |          0  (omitted)
             |
        male#|
L43_to_mal~r |
   Female#1  |   .8115769   1.273209     0.64   0.524    -1.684124    3.307278
     Male#0  |  -2.534124   2.590087    -0.98   0.328    -7.611124    2.542876
     Male#1  |          0  (omitted)
             |
        male#|
L44_to_mal~r |
   Female#1  |   .0642705   1.798497     0.04   0.971    -3.461081    3.589622
     Male#0  |          0  (omitted)
     Male#1  |          0  (empty)
             |
        male#|
L45_to_mal~r |
   Female#0  |          0  (omitted)
     Male#0  |          0  (omitted)
             |
        male#|
L46_to_mal~r |
   Female#0  |          0  (omitted)
     Male#0  |          0  (omitted)
             |
        male#|
L47_to_mal~r |
   Female#0  |          0  (omitted)
     Male#0  |          0  (omitted)
             |
       _cons |  -4.259782   7.869093    -0.54   0.588    -19.68451    11.16494
------------------------------------------------------------------------------
          - if "`markdown'" != "" {
          = if "" != "" {
            set linesize `lsize'
            }
          - if "`eqselect'" == "" {
          = if "" == "" {
          - if "`eformdi'"!="" & ("`e(cmd)'"!="gnbreg" | "`e(prefix)'"=="svy") 
> {
          = if ""!="" & ("reghdfe"!="gnbreg" | ""=="svy") {
            local k_eform `e(k_eform)'
            if ("`k_eform'"=="") {
            local k_eform = 1
            }
            local k_eq `e(k_eq)'
            if ("`k_eq'"=="") {
            local k_eq = 1
            }
            if (`k_eform'<`k_eq' & `k_eform') {
            if ("`e(cmd2)'" == "stintreg" | "`e(cmd2)'" == "streg") & ("`e(cmd)
> '" == "weibull" | "`e(cmd)'" == "gompertz") {
            }
            else {
            _eform_multeq_note efnote : `k_eform'
            di as txt "`efnote'"
            }
            }
            }
          - if (`"`eformdi'"'!="" & "`e(noconstant)'"=="0" & `"`eform_cons_ti'"
> '!="" & "`e(consonly)'"!="1") {
          = if (`""'!="" & ""=="0" & `""'!="" & ""!="1") {
            if ("`e(cmd)'"=="asclogit" | "`e(cmd)'"=="cmclogit" | "`e(cmd)'"=="
> cmmixlogit" | "`e(cmd)'"=="cmxtmixlogit" ) {
            local asvar = `"`e(ranvars)'`e(fixvars)'`e(indvars)'"' != ""
            if `"`e(casevars)'"' != "" & `asvar' {
            local note1 "Exponentiated coefficients represent odds ratios for "
            local note2 "alternative-specific variables (first equation) and "
            local note3 "{help j_cmrisk##|_new:relative-risk ratios} "
            local note4 "for case-specific variables."
            di as txt "{p 0 6 2}Note: `note1'`note2'`note3'`note4'{p_end}"
            }
            }
            if "`eform_cons_ti'" == "Inc. Rate" {
            local eform_cons_note "incidence rate"
            }
            else if "`eform_cons_ti'" == "Rel. Risk" {
            local eform_cons_note "relative risk"
            }
            else if "`eform_cons_ti'" == "Health" {
            local eform_cons_note "health (probability of no disease)"
            }
            else {
            local eform_cons_note = strlower(`"`eform_cons_ti'"')
            }
            local eform_cons_note "baseline `eform_cons_note'"
            if ("`e(cmd2)'"=="") {
            local cmd `e(cmd)'
            }
            else {
            local cmd `e(cmd2)'
            }
            local f2 = udsubstr("`cmd'",1,2)
            local is_re = ("`f2'"=="xt" | "`f2'"=="me")
            if `is_re' {
            local extranote " (conditional on zero random effects)"
            }
            di as txt "{p 0 6 2}Note: {res:_cons} estimates " "`eform_cons_note
> '`extranote'" _c
            if ("`e(cmd)'"=="mlogit" | "`e(cmd)'"=="asclogit" | "`e(cmd)'"=="cm
> clogit" | "`e(cmd)'"=="cmmixlogit" | "`e(cmd)'"=="cmxtmixlogit" ) {
            di as txt " for each outcome" _c
            }
            di as txt ".{p_end}"
            }
          - }
          - return add
          - if !`keepmc' {
          = if !0 {
          - return local mcmethod
          - return local mctitle
          - }
          ------------------------------------------------- end _coef_table ---
        - return add
        - }
        - if ("`footnote'" == "") {
        = if ("" == "") {
        - reghdfe_footnote
          ------------------------------------------ begin reghdfe_footnote ---
          - syntax [, width(int 13)]
          - if (`"`e(absvars)'"' == "_cons") {
          = if (`"_cons"' == "_cons") {
          - exit
          -------------------------------------------- end reghdfe_footnote ---
        - }
        - if (e(summarize_quietly)==0) {
          di as text _n "{sf:Regression Summary Statistics:}" _c
          matlist e(summarize)', border(top bottom) rowtitle(Variable)
          }
        ------------------------------------------------ end reghdfe.Replay ---
      - if (`timeit') {
      = if (0) {
        di as text _n "{bf: Timer results:}"
        timer list
        di as text "Legend: 20: Create HDFE object; 21: Estimate DoF; 22: expan
> d varlists; 23: partial out; 24: regress; 29: rest"
        di
        }
      ------------------------------------------------ end reghdfe.Estimate ---
    - Cleanup `c(rc)'
    = Cleanup 0
      ----------------------------------------------- begin reghdfe.Cleanup ---
      - args rc
      - cap mata: mata drop HDFE
      - cap mata: mata drop hdfe_*
      - cap drop __temp_reghdfe_resid__
      - cap matrix drop reghdfe_statsmatrix
      - if (`rc' == 132) {
      = if (0 == 132) {
        di as text "- If you got the {it:parentheses unbalanced} error, note th
> at IV/2SLS was moved to {help ivreghdfe}"
        di as smcl `"- Latest version: {browse "https://github.com/sergiocorrei
> a/ivreghdfe":https://github.com/sergiocorreia/ivreghdfe}"'
        di as smcl `"- SSC version: {stata "net describe ivreghdfe, from(http:/
> /fmwww.bc.edu/RePEc/bocode/i)"}"'
        di as smcl `"- Note: the older functionality can still be accessed thro
> ugh the {it:old} option"'
        }
      - if (`rc') exit `rc'
      = if (0) exit 0
      ------------------------------------------------- end reghdfe.Cleanup ---
    - }
    ----------------------------------------------------------- end reghdfe ---
  - }
  - else if "`regression'" == "bsqreg"{
  = else if "reghdfe" == "bsqreg"{
    if !missing("`vce'") di "Warning: option `vce' ignored with quantile regres
> sion"
    $esplot_quietly bsqreg `y' `leads' `lags' `endpoints' `controls' `qreg_fe' 
> `if' `in' `reg_weights', quantile(`q')
    }
  - if !missing("`save_sample'"){
  = if !missing(""){
    replace `save_sample' = e(sample)
    tempfile sample_info
    save `sample_info', replace
    }
  - local event_name "`e_t'"
  = local event_name ""
  - if $esplot_nolog{
  = if 1{
  - ES_graph `y', event(`event_name') `pass_by' compare(`compare_name') `pass_w
> indow' `estimate_reference' `difference' period_length(`period_length') `colo
> rs' `est_plot' `ci_plot' `legend' `wildcard_options'
  = ES_graph paygrade, event() by(male) compare() window(-20  30) estimate_refe
> rence  period_length(1)     
    ------------------------------------------------- begin esplot.ES_graph ---
    - syntax varlist(max=1), EVent(varname) [ by(varname) ** GENERAL OPTIONS **
>  compare(passthru) estimate_reference difference **START DISPLAY OPTIONS * wi
> ndow(numlist max=2 min=2 integer ascending) period_length(integer 1) colors(n
> amelist) est_plot(name) ci_plot(name) legend(string asis) * ]
option event() required
    --------------------------------------------------- end esplot.ES_graph ---
    }
  -------------------------------------------------------------- end esplot ---
r(198);

end of do-file
r(198);
